### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.sql.models.ManagedInstanceUpdate
  fullName: azure.mgmt.sql.models.ManagedInstanceUpdate
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.sql.models
  name: ManagedInstanceUpdate
  summary: 'An update request for an Azure SQL Database managed instance.


    Variables are only populated by the server, and will be ignored when

    sending a request.'
  syntax:
    content: 'ManagedInstanceUpdate(*, sku=None, administrator_login: str = None,
      administrator_login_password: str = None, subnet_id: str = None, license_type:
      str = None, v_cores: int = None, storage_size_in_gb: int = None, collation:
      str = None, dns_zone_partner: str = None, public_data_endpoint_enabled: bool
      = None, proxy_override=None, timezone_id: str = None, tags=None, **kwargs) ->
      None'
    parameters:
    - description: Managed instance sku
      id: sku
      type:
      - azure.mgmt.sql.models.Sku
    - description: 'Administrator username for the managed

        instance. Can only be specified when the managed instance is being created

        (and is required for creation).'
      id: administrator_login
      type:
      - str
    - description: 'The administrator login password

        (required for managed instance creation).'
      id: administrator_login_password
      type:
      - str
    - description: Subnet resource ID for the managed instance.
      id: subnet_id
      type:
      - str
    - description: 'The license type. Possible values are

        ''LicenseIncluded'' and ''BasePrice''.'
      id: license_type
      type:
      - str
    - description: The number of VCores.
      id: v_cores
      type:
      - int
    - description: The maximum storage size in GB.
      id: storage_size_in_gb
      type:
      - int
    - description: Collation of the managed instance.
      id: collation
      type:
      - str
    - description: 'The resource id of another managed instance whose

        DNS zone this managed instance will share after creation.'
      id: dns_zone_partner
      type:
      - str
    - description: 'Whether or not the public data

        endpoint is enabled.'
      id: public_data_endpoint_enabled
      type:
      - bool
    - description: 'Connection type used for connecting to the

        instance. Possible values include: ''Proxy'', ''Redirect'', ''Default'''
      id: proxy_override
      type:
      - str
      - azure.mgmt.sql.models.ManagedInstanceProxyOverride
    - description: 'Id of the timezone. Allowed values are timezones

        supported by Windows.

        Windows keeps details on supported timezones, including the id, in

        registry under

        KEY_LOCAL_MACHINESOFTWAREMicrosoftWindows NTCurrentVersionTime

        Zones.

        You can get those registry values via SQL Server by querying SELECT name

        AS timezone_id FROM sys.time_zone_info.

        List of Ids can also be obtained by executing

        [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.

        An example of valid timezone id is "Pacific Standard Time" or "W. Europe

        Standard Time".'
      id: timezone_id
      type:
      - str
    - description: Resource tags.
      id: tags
      type:
      - dict[str, str]
    variables:
    - description: 'The fully qualified domain name of the

        managed instance.'
      id: fully_qualified_domain_name
      type:
      - str
    - description: The state of the managed instance.
      id: state
      type:
      - str
    - description: The Dns Zone that the managed instance is in.
      id: dns_zone
      type:
      - str
  type: class
  uid: azure.mgmt.sql.models.ManagedInstanceUpdate
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
