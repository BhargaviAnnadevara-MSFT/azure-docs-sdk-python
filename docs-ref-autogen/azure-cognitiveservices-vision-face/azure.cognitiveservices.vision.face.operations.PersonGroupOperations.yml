### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cognitiveservices.vision.face.operations.PersonGroupOperations.create
  - azure.cognitiveservices.vision.face.operations.PersonGroupOperations.delete
  - azure.cognitiveservices.vision.face.operations.PersonGroupOperations.get
  - azure.cognitiveservices.vision.face.operations.PersonGroupOperations.get_training_status
  - azure.cognitiveservices.vision.face.operations.PersonGroupOperations.list
  - azure.cognitiveservices.vision.face.operations.PersonGroupOperations.train
  - azure.cognitiveservices.vision.face.operations.PersonGroupOperations.update
  - azure.cognitiveservices.vision.face.operations.PersonGroupOperations.models
  class: azure.cognitiveservices.vision.face.operations.PersonGroupOperations
  fullName: azure.cognitiveservices.vision.face.operations.PersonGroupOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: PersonGroupOperations
  summary: PersonGroupOperations operations.
  syntax:
    content: PersonGroupOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
  type: class
  uid: azure.cognitiveservices.vision.face.operations.PersonGroupOperations
- class: azure.cognitiveservices.vision.face.operations.PersonGroupOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.create
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: create(person_group_id, name=None, user_data=None, recognition_model='recognition_01',
    custom_headers=None, raw=False, **operation_config)
  summary: 'Create a new person group with specified personGroupId, name,

    user-provided userData and recognitionModel.

    <br /> A person group is the container of the uploaded person data,

    including face images and face recognition features.

    <br /> After creation, use [PersonGroup Person -

    Create](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523c)

    to add persons into the group, and then call [PersonGroup -

    Train](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395249)

    to get this group ready for [Face -

    Identify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).

    <br /> The person''s face, image, and userData will be stored on server

    until [PersonGroup Person -

    Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d)

    or [PersonGroup -

    Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245)

    is called.

    <br />

    * Free-tier subscription quota: 1,000 person groups. Each holds up to

    1,000 persons.

    * S0-tier subscription quota: 1,000,000 person groups. Each holds up to

    10,000 persons.

    * to handle larger scale face identification problem, please consider

    using

    [LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d).

    <br />

    ''recognitionModel'' should be specified to associate with this person

    group. The default value for ''recognitionModel'' is ''recognition_01'', if

    the latest model needed, please explicitly specify the model you need

    in this parameter. New faces that are added to an existing person group

    will use the recognition model that''s already associated with the

    collection. Existing face features in a person group can''t be updated

    to features extracted by another version of recognition model.

    .'
  syntax:
    content: create(person_group_id, name=None, user_data=None, recognition_model='recognition_01',
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Id referencing a particular person group.
      id: person_group_id
      type:
      - str
    - defaultValue: None
      description: User defined name, maximum length is 128.
      id: name
      type:
      - str
    - defaultValue: None
      description: User specified data. Length should not exceed 16KB.
      id: user_data
      type:
      - str
    - defaultValue: recognition_01
      description: 'Possible values include: ''recognition_01'',

        ''recognition_02'''
      id: recognition_model
      type:
      - str
      - azure.cognitiveservices.vision.face.models.RecognitionModel
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.create
- class: azure.cognitiveservices.vision.face.operations.PersonGroupOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.delete
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: delete(person_group_id, custom_headers=None, raw=False, **operation_config)
  summary: 'Delete an existing person group. Persisted face features of all people

    in the person group will also be deleted.'
  syntax:
    content: delete(person_group_id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Id referencing a particular person group.
      id: person_group_id
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.delete
- class: azure.cognitiveservices.vision.face.operations.PersonGroupOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.get
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: get(person_group_id, return_recognition_model=False, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Retrieve person group name, userData and recognitionModel. To get

    person information under this personGroup, use [PersonGroup Person -

    List](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395241).'
  syntax:
    content: get(person_group_id, return_recognition_model=False, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Id referencing a particular person group.
      id: person_group_id
      type:
      - str
    - defaultValue: 'False'
      description: 'A value indicating whether the

        operation should return ''recognitionModel'' in response.'
      id: return_recognition_model
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: PersonGroup or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.face.models.PersonGroup
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.get
- class: azure.cognitiveservices.vision.face.operations.PersonGroupOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.get_training_status
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: get_training_status(person_group_id, custom_headers=None, raw=False, **operation_config)
  summary: Retrieve the training status of a person group (completed or ongoing).
  syntax:
    content: get_training_status(person_group_id, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: Id referencing a particular person group.
      id: person_group_id
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: TrainingStatus or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.face.models.TrainingStatus
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.get_training_status
- class: azure.cognitiveservices.vision.face.operations.PersonGroupOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.list
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: list(start=None, top=1000, return_recognition_model=False, custom_headers=None,
    raw=False, **operation_config)
  summary: "List person groups\u2019 personGroupId, name, userData and\nrecognitionModel.<br\
    \ />\n* Person groups are stored in alphabetical order of personGroupId.\n* \"\
    start\" parameter (string, optional) is a user-provided personGroupId\nvalue that\
    \ returned entries have larger ids by string comparison.\n\"start\" set to empty\
    \ to indicate return from the first item.\n* \"top\" parameter (int, optional)\
    \ specifies the number of entries to\nreturn. A maximal of 1000 entries can be\
    \ returned in one call. To fetch\nmore, you can specify \"start\" with the last\
    \ returned entry\u2019s Id of the\ncurrent call.\n<br />\nFor example, total 5\
    \ person groups: \"group1\", ..., \"group5\".\n<br /> \"start=&top=\" will return\
    \ all 5 groups.\n<br /> \"start=&top=2\" will return \"group1\", \"group2\".\n\
    <br /> \"start=group2&top=3\" will return \"group3\", \"group4\", \"group5\".\n\
    ."
  syntax:
    content: list(start=None, top=1000, return_recognition_model=False, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: 'List person groups from the least personGroupId greater

        than the "start".'
      id: start
      type:
      - str
    - defaultValue: '1000'
      description: The number of person groups to list.
      id: top
      type:
      - int
    - defaultValue: 'False'
      description: 'A value indicating whether the

        operation should return ''recognitionModel'' in response.'
      id: return_recognition_model
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.cognitiveservices.vision.face.models.PersonGroup]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.list
- class: azure.cognitiveservices.vision.face.operations.PersonGroupOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.train
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: train(person_group_id, custom_headers=None, raw=False, **operation_config)
  summary: 'Queue a person group training task, the training task may not be

    started immediately.'
  syntax:
    content: train(person_group_id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Id referencing a particular person group.
      id: person_group_id
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.train
- class: azure.cognitiveservices.vision.face.operations.PersonGroupOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.update
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: update(person_group_id, name=None, user_data=None, custom_headers=None, raw=False,
    **operation_config)
  summary: 'Update an existing person group''s display name and userData. The

    properties which does not appear in request body will not be updated.'
  syntax:
    content: update(person_group_id, name=None, user_data=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Id referencing a particular person group.
      id: person_group_id
      type:
      - str
    - defaultValue: None
      description: User defined name, maximum length is 128.
      id: name
      type:
      - str
    - defaultValue: None
      description: User specified data. Length should not exceed 16KB.
      id: user_data
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.update
- class: azure.cognitiveservices.vision.face.operations.PersonGroupOperations
  fullName: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.models
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations
  name: models
  syntax:
    content: models = <module 'azure.cognitiveservices.vision.face.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\cognitiveservices\\vision\\face\\models\\__init__.py'>
  type: attribute
  uid: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.models
references:
- fullName: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.create
  isExternal: false
  name: create(person_group_id, name=None, user_data=None, recognition_model='recognition_01',
    custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.PersonGroupOperations
  uid: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.create
- fullName: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.delete
  isExternal: false
  name: delete(person_group_id, custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.PersonGroupOperations
  uid: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.delete
- fullName: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.get
  isExternal: false
  name: get(person_group_id, return_recognition_model=False, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.PersonGroupOperations
  uid: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.get
- fullName: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.get_training_status
  isExternal: false
  name: get_training_status(person_group_id, custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.PersonGroupOperations
  uid: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.get_training_status
- fullName: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.list
  isExternal: false
  name: list(start=None, top=1000, return_recognition_model=False, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.PersonGroupOperations
  uid: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.list
- fullName: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.train
  isExternal: false
  name: train(person_group_id, custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.PersonGroupOperations
  uid: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.train
- fullName: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.update
  isExternal: false
  name: update(person_group_id, name=None, user_data=None, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.PersonGroupOperations
  uid: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.update
- fullName: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.models
  isExternal: false
  name: models
  parent: azure.cognitiveservices.vision.face.operations.PersonGroupOperations
  uid: azure.cognitiveservices.vision.face.operations.PersonGroupOperations.models
- fullName: list[azure.cognitiveservices.vision.face.models.PersonGroup]
  name: list[PersonGroup]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.cognitiveservices.vision.face.models.PersonGroup
    name: PersonGroup
    uid: azure.cognitiveservices.vision.face.models.PersonGroup
  - fullName: ']'
    name: ']'
  uid: list[azure.cognitiveservices.vision.face.models.PersonGroup]
