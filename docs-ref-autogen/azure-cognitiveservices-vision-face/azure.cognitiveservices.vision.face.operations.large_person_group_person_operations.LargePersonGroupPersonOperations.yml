### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.add_face_from_stream
  - azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.add_face_from_url
  - azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.create
  - azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.delete
  - azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.delete_face
  - azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.get
  - azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.get_face
  - azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.list
  - azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.update
  - azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.update_face
  - azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.models
  class: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations
  name: LargePersonGroupPersonOperations
  summary: LargePersonGroupPersonOperations operations.
  syntax:
    content: LargePersonGroupPersonOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
  type: class
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
- class: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.add_face_from_stream
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations
  name: add_face_from_stream(large_person_group_id, person_id, image, user_data=None,
    target_face=None, custom_headers=None, raw=False, callback=None, **operation_config)
  summary: 'Add a representative face to a person for identification. The input

    face is specified as an image with a targetFace rectangle.'
  syntax:
    content: add_face_from_stream(large_person_group_id, person_id, image, user_data=None,
      target_face=None, custom_headers=None, raw=False, callback=None, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      type:
      - str
    - description: Id referencing a particular person.
      id: person_id
      type:
      - str
    - description: An image stream.
      id: image
      type:
      - Generator
    - defaultValue: None
      description: 'User-specified data about the face for any purpose.

        The maximum length is 1KB.'
      id: user_data
      type:
      - str
    - defaultValue: None
      description: 'A face rectangle to specify the target face to be

        added to a person in the format of "targetFace=left,top,width,height".

        E.g. "targetFace=10,10,100,100". If there is more than one face in the

        image, targetFace is required to specify which face to add. No

        targetFace means there is only one face detected in the entire image.'
      id: target_face
      type:
      - list[int]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: None
      description: 'When specified, will be called with each chunk of

        data that is streamed. The callback should take two arguments, the

        bytes of the current chunk of data and the response object. If the

        data is uploading, response will be None.'
      id: callback
      type:
      - Callable[Bytes, response=None]
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: PersistedFace or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.face.models.PersistedFace
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.add_face_from_stream
- class: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.add_face_from_url
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations
  name: add_face_from_url(large_person_group_id, person_id, url, user_data=None, target_face=None,
    custom_headers=None, raw=False, **operation_config)
  summary: 'Add a representative face to a person for identification. The input

    face is specified as an image with a targetFace rectangle.'
  syntax:
    content: add_face_from_url(large_person_group_id, person_id, url, user_data=None,
      target_face=None, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      type:
      - str
    - description: Id referencing a particular person.
      id: person_id
      type:
      - str
    - description: Publicly reachable URL of an image
      id: url
      type:
      - str
    - defaultValue: None
      description: 'User-specified data about the face for any purpose.

        The maximum length is 1KB.'
      id: user_data
      type:
      - str
    - defaultValue: None
      description: 'A face rectangle to specify the target face to be

        added to a person in the format of "targetFace=left,top,width,height".

        E.g. "targetFace=10,10,100,100". If there is more than one face in the

        image, targetFace is required to specify which face to add. No

        targetFace means there is only one face detected in the entire image.'
      id: target_face
      type:
      - list[int]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: PersistedFace or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.face.models.PersistedFace
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.add_face_from_url
- class: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.create
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations
  name: create(large_person_group_id, name=None, user_data=None, custom_headers=None,
    raw=False, **operation_config)
  summary: Create a new person in a specified large person group.
  syntax:
    content: create(large_person_group_id, name=None, user_data=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      type:
      - str
    - defaultValue: None
      description: User defined name, maximum length is 128.
      id: name
      type:
      - str
    - defaultValue: None
      description: User specified data. Length should not exceed 16KB.
      id: user_data
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: Person or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.face.models.Person
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.create
- class: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.delete
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations
  name: delete(large_person_group_id, person_id, custom_headers=None, raw=False, **operation_config)
  summary: 'Delete an existing person from a large person group. All stored person

    data, and face features in the person entry will be deleted.'
  syntax:
    content: delete(large_person_group_id, person_id, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      type:
      - str
    - description: Id referencing a particular person.
      id: person_id
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.delete
- class: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.delete_face
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations
  name: delete_face(large_person_group_id, person_id, persisted_face_id, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Delete a face from a person. Relative feature for the persisted face

    will also be deleted.'
  syntax:
    content: delete_face(large_person_group_id, person_id, persisted_face_id, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      type:
      - str
    - description: Id referencing a particular person.
      id: person_id
      type:
      - str
    - description: 'Id referencing a particular persistedFaceId

        of an existing face.'
      id: persisted_face_id
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.delete_face
- class: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.get
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations
  name: get(large_person_group_id, person_id, custom_headers=None, raw=False, **operation_config)
  summary: 'Retrieve a person''s information, including registered persisted faces,

    name and userData.'
  syntax:
    content: get(large_person_group_id, person_id, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      type:
      - str
    - description: Id referencing a particular person.
      id: person_id
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: Person or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.face.models.Person
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.get
- class: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.get_face
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations
  name: get_face(large_person_group_id, person_id, persisted_face_id, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Retrieve information about a persisted face (specified by

    persistedFaceId, personId and its belonging largePersonGroupId).'
  syntax:
    content: get_face(large_person_group_id, person_id, persisted_face_id, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      type:
      - str
    - description: Id referencing a particular person.
      id: person_id
      type:
      - str
    - description: 'Id referencing a particular persistedFaceId

        of an existing face.'
      id: persisted_face_id
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: PersistedFace or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.face.models.PersistedFace
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.get_face
- class: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.list
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations
  name: list(large_person_group_id, start=None, top=None, custom_headers=None, raw=False,
    **operation_config)
  summary: 'List all persons in a large person group, and retrieve person

    information (including personId, name, userData and persistedFaceIds of

    registered faces of the person).'
  syntax:
    content: list(large_person_group_id, start=None, top=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      type:
      - str
    - defaultValue: None
      description: 'Starting person id to return (used to list a range of

        persons).'
      id: start
      type:
      - str
    - defaultValue: None
      description: 'Number of persons to return starting with the person id

        indicated by the ''start'' parameter.'
      id: top
      type:
      - int
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.cognitiveservices.vision.face.models.Person]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.list
- class: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.update
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations
  name: update(large_person_group_id, person_id, name=None, user_data=None, custom_headers=None,
    raw=False, **operation_config)
  summary: Update name or userData of a person.
  syntax:
    content: update(large_person_group_id, person_id, name=None, user_data=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      type:
      - str
    - description: Id referencing a particular person.
      id: person_id
      type:
      - str
    - defaultValue: None
      description: User defined name, maximum length is 128.
      id: name
      type:
      - str
    - defaultValue: None
      description: User specified data. Length should not exceed 16KB.
      id: user_data
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.update
- class: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.update_face
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations
  name: update_face(large_person_group_id, person_id, persisted_face_id, user_data=None,
    custom_headers=None, raw=False, **operation_config)
  summary: Update a person persisted face's userData field.
  syntax:
    content: update_face(large_person_group_id, person_id, persisted_face_id, user_data=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: 'Id referencing a particular large person

        group.'
      id: large_person_group_id
      type:
      - str
    - description: Id referencing a particular person.
      id: person_id
      type:
      - str
    - description: 'Id referencing a particular persistedFaceId

        of an existing face.'
      id: persisted_face_id
      type:
      - str
    - defaultValue: None
      description: 'User-provided data attached to the face. The size

        limit is 1KB.'
      id: user_data
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.update_face
- class: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.models
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations
  name: models
  syntax:
    content: models = <module 'azure.cognitiveservices.vision.face.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\cognitiveservices\\vision\\face\\models\\__init__.py'>
  type: attribute
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.models
references:
- fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.add_face_from_stream
  isExternal: false
  name: add_face_from_stream(large_person_group_id, person_id, image, user_data=None,
    target_face=None, custom_headers=None, raw=False, callback=None, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.add_face_from_stream
- fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.add_face_from_url
  isExternal: false
  name: add_face_from_url(large_person_group_id, person_id, url, user_data=None, target_face=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.add_face_from_url
- fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.create
  isExternal: false
  name: create(large_person_group_id, name=None, user_data=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.create
- fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.delete
  isExternal: false
  name: delete(large_person_group_id, person_id, custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.delete
- fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.delete_face
  isExternal: false
  name: delete_face(large_person_group_id, person_id, persisted_face_id, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.delete_face
- fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.get
  isExternal: false
  name: get(large_person_group_id, person_id, custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.get
- fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.get_face
  isExternal: false
  name: get_face(large_person_group_id, person_id, persisted_face_id, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.get_face
- fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.list
  isExternal: false
  name: list(large_person_group_id, start=None, top=None, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.list
- fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.update
  isExternal: false
  name: update(large_person_group_id, person_id, name=None, user_data=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.update
- fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.update_face
  isExternal: false
  name: update_face(large_person_group_id, person_id, persisted_face_id, user_data=None,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.update_face
- fullName: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.models
  isExternal: false
  name: models
  parent: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations
  uid: azure.cognitiveservices.vision.face.operations.large_person_group_person_operations.LargePersonGroupPersonOperations.models
- fullName: list[int]
  name: list[int]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: int
    name: int
    uid: int
  - fullName: ']'
    name: ']'
  uid: list[int]
- fullName: Callable[Bytes, response=None]
  name: Callable[Bytes, response=None]
  spec.python:
  - fullName: Callable
    name: Callable
    uid: Callable
  - fullName: '['
    name: '['
  - fullName: Bytes
    name: Bytes
    uid: Bytes
  - fullName: ', '
    name: ', '
  - fullName: response=None
    name: response=None
    uid: response=None
  - fullName: ']'
    name: ']'
  uid: Callable[Bytes, response=None]
- fullName: list[azure.cognitiveservices.vision.face.models.Person]
  name: list[Person]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.cognitiveservices.vision.face.models.Person
    name: Person
    uid: azure.cognitiveservices.vision.face.models.Person
  - fullName: ']'
    name: ']'
  uid: list[azure.cognitiveservices.vision.face.models.Person]
