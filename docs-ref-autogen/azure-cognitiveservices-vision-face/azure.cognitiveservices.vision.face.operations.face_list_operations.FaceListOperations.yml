### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.add_face_from_stream
  - azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.add_face_from_url
  - azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.create
  - azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.delete
  - azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.delete_face
  - azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.get
  - azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.list
  - azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.update
  - azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.models
  class: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  fullName: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.face_list_operations
  name: FaceListOperations
  summary: FaceListOperations operations.
  syntax:
    content: FaceListOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
  type: class
  uid: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
- class: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.add_face_from_stream
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.face_list_operations
  name: add_face_from_stream(face_list_id, image, user_data=None, target_face=None,
    custom_headers=None, raw=False, callback=None, **operation_config)
  summary: 'Add a face to a face list. The input face is specified as an image with

    a targetFace rectangle. It returns a persistedFaceId representing the

    added face, and persistedFaceId will not expire.'
  syntax:
    content: add_face_from_stream(face_list_id, image, user_data=None, target_face=None,
      custom_headers=None, raw=False, callback=None, **operation_config)
    parameters:
    - description: Id referencing a particular face list.
      id: face_list_id
      type:
      - str
    - description: An image stream.
      id: image
      type:
      - Generator
    - defaultValue: None
      description: 'User-specified data about the face for any purpose.

        The maximum length is 1KB.'
      id: user_data
      type:
      - str
    - defaultValue: None
      description: 'A face rectangle to specify the target face to be

        added to a person in the format of "targetFace=left,top,width,height".

        E.g. "targetFace=10,10,100,100". If there is more than one face in the

        image, targetFace is required to specify which face to add. No

        targetFace means there is only one face detected in the entire image.'
      id: target_face
      type:
      - list[int]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: None
      description: 'When specified, will be called with each chunk of

        data that is streamed. The callback should take two arguments, the

        bytes of the current chunk of data and the response object. If the

        data is uploading, response will be None.'
      id: callback
      type:
      - Callable[Bytes, response=None]
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: PersistedFace or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.face.models.PersistedFace
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.add_face_from_stream
- class: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.add_face_from_url
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.face_list_operations
  name: add_face_from_url(face_list_id, url, user_data=None, target_face=None, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Add a face to a face list. The input face is specified as an image with

    a targetFace rectangle. It returns a persistedFaceId representing the

    added face, and persistedFaceId will not expire.'
  syntax:
    content: add_face_from_url(face_list_id, url, user_data=None, target_face=None,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Id referencing a particular face list.
      id: face_list_id
      type:
      - str
    - description: Publicly reachable URL of an image
      id: url
      type:
      - str
    - defaultValue: None
      description: 'User-specified data about the face for any purpose.

        The maximum length is 1KB.'
      id: user_data
      type:
      - str
    - defaultValue: None
      description: 'A face rectangle to specify the target face to be

        added to a person in the format of "targetFace=left,top,width,height".

        E.g. "targetFace=10,10,100,100". If there is more than one face in the

        image, targetFace is required to specify which face to add. No

        targetFace means there is only one face detected in the entire image.'
      id: target_face
      type:
      - list[int]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: PersistedFace or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.face.models.PersistedFace
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.add_face_from_url
- class: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.create
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.face_list_operations
  name: create(face_list_id, name=None, user_data=None, recognition_model='recognition_01',
    custom_headers=None, raw=False, **operation_config)
  summary: 'Create an empty face list with user-specified faceListId, name, an

    optional userData and recognitionModel. Up to 64 face lists are allowed

    in one subscription.

    <br /> Face list is a list of faces, up to 1,000 faces, and used by

    [Face - Find

    Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).

    <br /> After creation, user should use [FaceList - Add

    Face](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395250)

    to import the faces. Faces are stored on server until [FaceList -

    Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524f)

    is called.

    <br /> Find Similar is used for scenario like finding celebrity-like

    faces, similar face filtering, or as a light way face identification.

    But if the actual use is to identify person, please use

    [PersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395244)

    /

    [LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d)

    and [Face -

    Identify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).

    <br /> Please consider

    [LargeFaceList](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc)

    when the face number is large. It can support up to 1,000,000 faces.

    ''recognitionModel'' should be specified to associate with this face

    list. The default value for ''recognitionModel'' is ''recognition_01'', if

    the latest model needed, please explicitly specify the model you need

    in this parameter. New faces that are added to an existing face list

    will use the recognition model that''s already associated with the

    collection. Existing face features in a face list can''t be updated to

    features extracted by another version of recognition model.

    .'
  syntax:
    content: create(face_list_id, name=None, user_data=None, recognition_model='recognition_01',
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Id referencing a particular face list.
      id: face_list_id
      type:
      - str
    - defaultValue: None
      description: User defined name, maximum length is 128.
      id: name
      type:
      - str
    - defaultValue: None
      description: User specified data. Length should not exceed 16KB.
      id: user_data
      type:
      - str
    - defaultValue: recognition_01
      description: 'Possible values include: ''recognition_01'',

        ''recognition_02'''
      id: recognition_model
      type:
      - str
      - azure.cognitiveservices.vision.face.models.RecognitionModel
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.create
- class: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.delete
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.face_list_operations
  name: delete(face_list_id, custom_headers=None, raw=False, **operation_config)
  summary: 'Delete an existing face list according to faceListId. Persisted face

    images in the face list will also be deleted.'
  syntax:
    content: delete(face_list_id, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Id referencing a particular face list.
      id: face_list_id
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.delete
- class: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.delete_face
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.face_list_operations
  name: delete_face(face_list_id, persisted_face_id, custom_headers=None, raw=False,
    **operation_config)
  summary: 'Delete an existing face from a face list (given by a persistedFaceId

    and a faceListId). Persisted image related to the face will also be

    deleted.'
  syntax:
    content: delete_face(face_list_id, persisted_face_id, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: Id referencing a particular face list.
      id: face_list_id
      type:
      - str
    - description: 'Id referencing a particular persistedFaceId

        of an existing face.'
      id: persisted_face_id
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.delete_face
- class: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.get
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.face_list_operations
  name: get(face_list_id, return_recognition_model=False, custom_headers=None, raw=False,
    **operation_config)
  summary: "Retrieve a face list\u2019s faceListId, name, userData, recognitionModel\
    \ and\nfaces in the face list.\n."
  syntax:
    content: get(face_list_id, return_recognition_model=False, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Id referencing a particular face list.
      id: face_list_id
      type:
      - str
    - defaultValue: 'False'
      description: 'A value indicating whether the

        operation should return ''recognitionModel'' in response.'
      id: return_recognition_model
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: FaceList or ClientRawResponse if raw=true
      type:
      - azure.cognitiveservices.vision.face.models.FaceList
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.get
- class: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.list
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.face_list_operations
  name: list(return_recognition_model=False, custom_headers=None, raw=False, **operation_config)
  summary: "List face lists\u2019 faceListId, name, userData and recognitionModel.\
    \ <br\n/>\nTo get face information inside faceList use [FaceList -\nGet](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524c)\n\
    ."
  syntax:
    content: list(return_recognition_model=False, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - defaultValue: 'False'
      description: 'A value indicating whether the

        operation should return ''recognitionModel'' in response.'
      id: return_recognition_model
      type:
      - bool
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: list or ClientRawResponse if raw=true
      type:
      - list[azure.cognitiveservices.vision.face.models.FaceList]
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.list
- class: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  exceptions:
  - type: azure.cognitiveservices.vision.face.models.APIErrorException
  fullName: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.update
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.face_list_operations
  name: update(face_list_id, name=None, user_data=None, custom_headers=None, raw=False,
    **operation_config)
  summary: Update information of a face list.
  syntax:
    content: update(face_list_id, name=None, user_data=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Id referencing a particular face list.
      id: face_list_id
      type:
      - str
    - defaultValue: None
      description: User defined name, maximum length is 128.
      id: name
      type:
      - str
    - defaultValue: None
      description: User specified data. Length should not exceed 16KB.
      id: user_data
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: None or ClientRawResponse if raw=true
      type:
      - None
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.update
- class: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  fullName: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.models
  langs:
  - python
  module: azure.cognitiveservices.vision.face.operations.face_list_operations
  name: models
  syntax:
    content: models = <module 'azure.cognitiveservices.vision.face.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\cognitiveservices\\vision\\face\\models\\__init__.py'>
  type: attribute
  uid: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.models
references:
- fullName: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.add_face_from_stream
  isExternal: false
  name: add_face_from_stream(face_list_id, image, user_data=None, target_face=None,
    custom_headers=None, raw=False, callback=None, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  uid: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.add_face_from_stream
- fullName: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.add_face_from_url
  isExternal: false
  name: add_face_from_url(face_list_id, url, user_data=None, target_face=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  uid: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.add_face_from_url
- fullName: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.create
  isExternal: false
  name: create(face_list_id, name=None, user_data=None, recognition_model='recognition_01',
    custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  uid: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.create
- fullName: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.delete
  isExternal: false
  name: delete(face_list_id, custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  uid: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.delete
- fullName: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.delete_face
  isExternal: false
  name: delete_face(face_list_id, persisted_face_id, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  uid: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.delete_face
- fullName: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.get
  isExternal: false
  name: get(face_list_id, return_recognition_model=False, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  uid: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.get
- fullName: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.list
  isExternal: false
  name: list(return_recognition_model=False, custom_headers=None, raw=False, **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  uid: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.list
- fullName: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.update
  isExternal: false
  name: update(face_list_id, name=None, user_data=None, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  uid: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.update
- fullName: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.models
  isExternal: false
  name: models
  parent: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations
  uid: azure.cognitiveservices.vision.face.operations.face_list_operations.FaceListOperations.models
- fullName: list[int]
  name: list[int]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: int
    name: int
    uid: int
  - fullName: ']'
    name: ']'
  uid: list[int]
- fullName: Callable[Bytes, response=None]
  name: Callable[Bytes, response=None]
  spec.python:
  - fullName: Callable
    name: Callable
    uid: Callable
  - fullName: '['
    name: '['
  - fullName: Bytes
    name: Bytes
    uid: Bytes
  - fullName: ', '
    name: ', '
  - fullName: response=None
    name: response=None
    uid: response=None
  - fullName: ']'
    name: ']'
  uid: Callable[Bytes, response=None]
- fullName: list[azure.cognitiveservices.vision.face.models.FaceList]
  name: list[FaceList]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.cognitiveservices.vision.face.models.FaceList
    name: FaceList
    uid: azure.cognitiveservices.vision.face.models.FaceList
  - fullName: ']'
    name: ']'
  uid: list[azure.cognitiveservices.vision.face.models.FaceList]
