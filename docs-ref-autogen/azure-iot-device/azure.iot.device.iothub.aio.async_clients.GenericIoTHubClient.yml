### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.connect
  - azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.disconnect
  - azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.receive_method_request
  - azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.send_event
  - azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.send_method_response
  class: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient
  fullName: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  langs:
  - python
  module: azure.iot.device.iothub.aio.async_clients
  name: GenericIoTHubClient
  source:
    id: GenericIoTHubClient
    path: azure-iot-device\azure\iot\device\iothub\aio\async_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\aio\async_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python-preview
    startLine: 25
  summary: 'A super class representing a generic asynchronous client.

    This class needs to be extended for specific clients.'
  syntax:
    content: GenericIoTHubClient(pipeline)
  type: class
  uid: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient
- class: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient
  fullName: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.connect
  langs:
  - python
  module: azure.iot.device.iothub.aio.async_clients
  name: connect()
  source:
    id: connect
    path: azure-iot-device\azure\iot\device\iothub\aio\async_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\aio\async_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python-preview
    startLine: 58
  summary: 'Connects the client to an Azure IoT Hub or Azure IoT Edge Hub instance.


    The destination is chosen based on the credentials passed via the auth_provider
    parameter

    that was provided when this object was initialized.'
  syntax:
    content: connect()
    parameters: []
  type: method
  uid: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.connect
- class: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient
  fullName: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.disconnect
  langs:
  - python
  module: azure.iot.device.iothub.aio.async_clients
  name: disconnect()
  source:
    id: disconnect
    path: azure-iot-device\azure\iot\device\iothub\aio\async_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\aio\async_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python-preview
    startLine: 75
  summary: Disconnect the client from the Azure IoT Hub or Azure IoT Edge Hub instance.
  syntax:
    content: disconnect()
    parameters: []
  type: method
  uid: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.disconnect
- class: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient
  fullName: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.receive_method_request
  langs:
  - python
  module: azure.iot.device.iothub.aio.async_clients
  name: receive_method_request(method_name=None)
  source:
    id: receive_method_request
    path: azure-iot-device\azure\iot\device\iothub\aio\async_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\aio\async_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python-preview
    startLine: 112
  summary: 'Receive a method request via the Azure IoT Hub or Azure IoT Edge Hub.


    If no method request is yet available, will wait until it is available.



    If this parameter is not given, all methods not already being specifically targeted
    by

    a different call to receive_method will be received.'
  syntax:
    content: receive_method_request(method_name=None)
    parameters:
    - defaultValue: None
      id: method_name
    return:
      description: MethodRequest object representing the received method request.
  type: method
  uid: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.receive_method_request
- class: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient
  fullName: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.send_event
  langs:
  - python
  module: azure.iot.device.iothub.aio.async_clients
  name: send_event(message)
  source:
    id: send_event
    path: azure-iot-device\azure\iot\device\iothub\aio\async_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\aio\async_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python-preview
    startLine: 89
  summary: 'Sends a message to the default events endpoint on the Azure IoT Hub or
    Azure IoT Edge Hub instance.


    If the connection to the service has not previously been opened by a call to connect,
    this

    function will open the connection before sending the event.



    Message class will be converted to Message object.'
  syntax:
    content: send_event(message)
    parameters:
    - description: The actual message to send. Anything passed that is not an instance
        of the
      id: message
  type: method
  uid: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.send_event
- class: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient
  fullName: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.send_method_response
  langs:
  - python
  module: azure.iot.device.iothub.aio.async_clients
  name: send_method_response(method_response)
  source:
    id: send_method_response
    path: azure-iot-device\azure\iot\device\iothub\aio\async_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\aio\async_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python-preview
    startLine: 133
  summary: 'Send a response to a method request via the Azure IoT Hub or Azure IoT
    Edge Hub.


    If the connection to the service has not previously been opened by a call to connect,
    this

    function will open the connection before sending the event.'
  syntax:
    content: send_method_response(method_response)
    parameters:
    - description: The MethodResponse to send
      id: method_response
  type: method
  uid: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.send_method_response
references:
- fullName: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.connect
  isExternal: false
  name: connect()
  parent: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient
  uid: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.connect
- fullName: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.disconnect
  isExternal: false
  name: disconnect()
  parent: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient
  uid: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.disconnect
- fullName: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.receive_method_request
  isExternal: false
  name: receive_method_request(method_name=None)
  parent: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient
  uid: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.receive_method_request
- fullName: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.send_event
  isExternal: false
  name: send_event(message)
  parent: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient
  uid: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.send_event
- fullName: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.send_method_response
  isExternal: false
  name: send_method_response(method_response)
  parent: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient
  uid: azure.iot.device.iothub.aio.async_clients.GenericIoTHubClient.send_method_response
