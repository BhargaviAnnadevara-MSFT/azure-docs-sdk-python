### YamlMime:UniversalReference
api_name: []
items:
- children:
  - tests.testcase.StorageTestCase.assertNamedItemInContainer
  - tests.testcase.StorageTestCase.assertNamedItemNotInContainer
  - tests.testcase.StorageTestCase.assert_download_progress
  - tests.testcase.StorageTestCase.assert_upload_progress
  - tests.testcase.StorageTestCase.get_random_bytes
  - tests.testcase.StorageTestCase.get_random_text_data
  - tests.testcase.StorageTestCase.get_resource_name
  - tests.testcase.StorageTestCase.is_file_encryption_enabled
  - tests.testcase.StorageTestCase.is_playback
  - tests.testcase.StorageTestCase.recording
  - tests.testcase.StorageTestCase.setUp
  - tests.testcase.StorageTestCase.sleep
  class: tests.testcase.StorageTestCase
  fullName: tests.testcase.StorageTestCase
  inheritance:
  - inheritance:
    - type: builtins.object
    type: unittest.case.TestCase
  langs:
  - python
  module: tests.testcase
  name: StorageTestCase
  summary: ''
  syntax:
    content: StorageTestCase(methodName='runTest')
  type: class
  uid: tests.testcase.StorageTestCase
- class: tests.testcase.StorageTestCase
  fullName: tests.testcase.StorageTestCase.assertNamedItemInContainer
  langs:
  - python
  module: tests.testcase
  name: assertNamedItemInContainer(container, item_name, msg=None)
  namewithoutparameters: assertNamedItemInContainer
  syntax:
    content: assertNamedItemInContainer(container, item_name, msg=None)
    parameters:
    - id: container
      isRequired: true
    - id: item_name
      isRequired: true
    - defaultValue: None
      id: msg
  type: method
  uid: tests.testcase.StorageTestCase.assertNamedItemInContainer
- class: tests.testcase.StorageTestCase
  fullName: tests.testcase.StorageTestCase.assertNamedItemNotInContainer
  langs:
  - python
  module: tests.testcase
  name: assertNamedItemNotInContainer(container, item_name, msg=None)
  namewithoutparameters: assertNamedItemNotInContainer
  syntax:
    content: assertNamedItemNotInContainer(container, item_name, msg=None)
    parameters:
    - id: container
      isRequired: true
    - id: item_name
      isRequired: true
    - defaultValue: None
      id: msg
  type: method
  uid: tests.testcase.StorageTestCase.assertNamedItemNotInContainer
- class: tests.testcase.StorageTestCase
  fullName: tests.testcase.StorageTestCase.assert_download_progress
  langs:
  - python
  module: tests.testcase
  name: assert_download_progress(size, max_chunk_size, max_get_size, progress, single_download=False)
  namewithoutparameters: assert_download_progress
  summary: Validates that the progress chunks align with our chunking procedure.
  syntax:
    content: assert_download_progress(size, max_chunk_size, max_get_size, progress,
      single_download=False)
    parameters:
    - id: size
      isRequired: true
    - id: max_chunk_size
      isRequired: true
    - id: max_get_size
      isRequired: true
    - id: progress
      isRequired: true
    - defaultValue: 'False'
      id: single_download
  type: method
  uid: tests.testcase.StorageTestCase.assert_download_progress
- class: tests.testcase.StorageTestCase
  fullName: tests.testcase.StorageTestCase.assert_upload_progress
  langs:
  - python
  module: tests.testcase
  name: assert_upload_progress(size, max_chunk_size, progress, unknown_size=False)
  namewithoutparameters: assert_upload_progress
  summary: Validates that the progress chunks align with our chunking procedure.
  syntax:
    content: assert_upload_progress(size, max_chunk_size, progress, unknown_size=False)
    parameters:
    - id: size
      isRequired: true
    - id: max_chunk_size
      isRequired: true
    - id: progress
      isRequired: true
    - defaultValue: 'False'
      id: unknown_size
  type: method
  uid: tests.testcase.StorageTestCase.assert_upload_progress
- class: tests.testcase.StorageTestCase
  fullName: tests.testcase.StorageTestCase.get_random_bytes
  langs:
  - python
  module: tests.testcase
  name: get_random_bytes(size)
  namewithoutparameters: get_random_bytes
  syntax:
    content: get_random_bytes(size)
    parameters:
    - id: size
      isRequired: true
  type: method
  uid: tests.testcase.StorageTestCase.get_random_bytes
- class: tests.testcase.StorageTestCase
  fullName: tests.testcase.StorageTestCase.get_random_text_data
  langs:
  - python
  module: tests.testcase
  name: get_random_text_data(size)
  namewithoutparameters: get_random_text_data
  summary: 'Returns random unicode text data exceeding the size threshold for

    chunking blob upload.'
  syntax:
    content: get_random_text_data(size)
    parameters:
    - id: size
      isRequired: true
  type: method
  uid: tests.testcase.StorageTestCase.get_random_text_data
- class: tests.testcase.StorageTestCase
  fullName: tests.testcase.StorageTestCase.get_resource_name
  langs:
  - python
  module: tests.testcase
  name: get_resource_name(prefix='')
  namewithoutparameters: get_resource_name
  syntax:
    content: get_resource_name(prefix='')
    parameters:
    - defaultValue: ''
      id: prefix
  type: method
  uid: tests.testcase.StorageTestCase.get_resource_name
- class: tests.testcase.StorageTestCase
  fullName: tests.testcase.StorageTestCase.is_file_encryption_enabled
  langs:
  - python
  module: tests.testcase
  name: is_file_encryption_enabled()
  namewithoutparameters: is_file_encryption_enabled
  syntax:
    content: is_file_encryption_enabled()
    parameters: []
  type: method
  uid: tests.testcase.StorageTestCase.is_file_encryption_enabled
- class: tests.testcase.StorageTestCase
  fullName: tests.testcase.StorageTestCase.is_playback
  langs:
  - python
  module: tests.testcase
  name: is_playback()
  namewithoutparameters: is_playback
  syntax:
    content: is_playback()
    parameters: []
  type: method
  uid: tests.testcase.StorageTestCase.is_playback
- class: tests.testcase.StorageTestCase
  fullName: tests.testcase.StorageTestCase.recording
  langs:
  - python
  module: tests.testcase
  name: recording()
  namewithoutparameters: recording
  syntax:
    content: recording()
    parameters: []
  type: method
  uid: tests.testcase.StorageTestCase.recording
- class: tests.testcase.StorageTestCase
  fullName: tests.testcase.StorageTestCase.setUp
  langs:
  - python
  module: tests.testcase
  name: setUp()
  namewithoutparameters: setUp
  syntax:
    content: setUp()
    parameters: []
  type: method
  uid: tests.testcase.StorageTestCase.setUp
- class: tests.testcase.StorageTestCase
  fullName: tests.testcase.StorageTestCase.sleep
  langs:
  - python
  module: tests.testcase
  name: sleep(seconds)
  namewithoutparameters: sleep
  syntax:
    content: sleep(seconds)
    parameters:
    - id: seconds
      isRequired: true
  type: method
  uid: tests.testcase.StorageTestCase.sleep
references:
- fullName: tests.testcase.StorageTestCase.assertNamedItemInContainer
  isExternal: false
  name: assertNamedItemInContainer(container, item_name, msg=None)
  parent: tests.testcase.StorageTestCase
  uid: tests.testcase.StorageTestCase.assertNamedItemInContainer
- fullName: tests.testcase.StorageTestCase.assertNamedItemNotInContainer
  isExternal: false
  name: assertNamedItemNotInContainer(container, item_name, msg=None)
  parent: tests.testcase.StorageTestCase
  uid: tests.testcase.StorageTestCase.assertNamedItemNotInContainer
- fullName: tests.testcase.StorageTestCase.assert_download_progress
  isExternal: false
  name: assert_download_progress(size, max_chunk_size, max_get_size, progress, single_download=False)
  parent: tests.testcase.StorageTestCase
  uid: tests.testcase.StorageTestCase.assert_download_progress
- fullName: tests.testcase.StorageTestCase.assert_upload_progress
  isExternal: false
  name: assert_upload_progress(size, max_chunk_size, progress, unknown_size=False)
  parent: tests.testcase.StorageTestCase
  uid: tests.testcase.StorageTestCase.assert_upload_progress
- fullName: tests.testcase.StorageTestCase.get_random_bytes
  isExternal: false
  name: get_random_bytes(size)
  parent: tests.testcase.StorageTestCase
  uid: tests.testcase.StorageTestCase.get_random_bytes
- fullName: tests.testcase.StorageTestCase.get_random_text_data
  isExternal: false
  name: get_random_text_data(size)
  parent: tests.testcase.StorageTestCase
  uid: tests.testcase.StorageTestCase.get_random_text_data
- fullName: tests.testcase.StorageTestCase.get_resource_name
  isExternal: false
  name: get_resource_name(prefix='')
  parent: tests.testcase.StorageTestCase
  uid: tests.testcase.StorageTestCase.get_resource_name
- fullName: tests.testcase.StorageTestCase.is_file_encryption_enabled
  isExternal: false
  name: is_file_encryption_enabled()
  parent: tests.testcase.StorageTestCase
  uid: tests.testcase.StorageTestCase.is_file_encryption_enabled
- fullName: tests.testcase.StorageTestCase.is_playback
  isExternal: false
  name: is_playback()
  parent: tests.testcase.StorageTestCase
  uid: tests.testcase.StorageTestCase.is_playback
- fullName: tests.testcase.StorageTestCase.recording
  isExternal: false
  name: recording()
  parent: tests.testcase.StorageTestCase
  uid: tests.testcase.StorageTestCase.recording
- fullName: tests.testcase.StorageTestCase.setUp
  isExternal: false
  name: setUp()
  parent: tests.testcase.StorageTestCase
  uid: tests.testcase.StorageTestCase.setUp
- fullName: tests.testcase.StorageTestCase.sleep
  isExternal: false
  name: sleep(seconds)
  parent: tests.testcase.StorageTestCase
  uid: tests.testcase.StorageTestCase.sleep
