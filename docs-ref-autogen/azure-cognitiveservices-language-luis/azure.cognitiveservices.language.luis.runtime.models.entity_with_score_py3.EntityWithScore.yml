### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.cognitiveservices.language.luis.runtime.models.entity_with_score_py3.EntityWithScore
  fullName: azure.cognitiveservices.language.luis.runtime.models.entity_with_score_py3.EntityWithScore
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.cognitiveservices.language.luis.runtime.models.entity_model_py3.EntityModel
  langs:
  - python
  module: azure.cognitiveservices.language.luis.runtime.models.entity_with_score_py3
  name: EntityWithScore
  summary: 'EntityWithScore.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'EntityWithScore(*, entity: str, type: str, start_index: int, end_index:
      int, score: float, additional_properties=None, **kwargs) -> None'
    parameters:
    - description: 'Unmatched properties from the message are

        deserialized this collection'
      id: additional_properties
      type:
      - dict[str, object]
    - description: Required. Name of the entity, as defined in LUIS.
      id: entity
      type:
      - str
    - description: Required. Type of the entity, as defined in LUIS.
      id: type
      type:
      - str
    - description: 'Required. The position of the first character of the

        matched entity within the utterance.'
      id: start_index
      type:
      - int
    - description: 'Required. The position of the last character of the

        matched entity within the utterance.'
      id: end_index
      type:
      - int
    - description: 'Required. Associated prediction score for the intent

        (float).'
      id: score
      type:
      - float
  type: class
  uid: azure.cognitiveservices.language.luis.runtime.models.entity_with_score_py3.EntityWithScore
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
