### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.affinity
  - azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.aligned_affinity
  - azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.invalid
  - azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.non_aligned_affinity
  class: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme
  fullName: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme
  inheritance:
  - inheritance:
    - type: builtins.object
    type: builtins.str
  - inheritance:
    - type: builtins.object
    type: enum.Enum
  langs:
  - python
  module: azure.mgmt.servicefabric.models.service_fabric_management_client_enums
  name: ServiceCorrelationScheme
  summary: An enumeration.
  syntax: {}
  type: class
  uid: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme
- class: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme
  fullName: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.affinity
  langs:
  - python
  module: azure.mgmt.servicefabric.models.service_fabric_management_client_enums
  name: affinity
  summary: Indicates that this service has an affinity relationship with another service.
    Provided for backwards compatibility, consider preferring the Aligned or NonAlignedAffinity
    options. The value is 1.
  syntax:
    content: affinity = 'Affinity'
  type: attribute
  uid: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.affinity
- class: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme
  fullName: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.aligned_affinity
  langs:
  - python
  module: azure.mgmt.servicefabric.models.service_fabric_management_client_enums
  name: aligned_affinity
  summary: Aligned affinity ensures that the primaries of the partitions of the affinitized
    services are collocated on the same nodes. This is the default and is the same
    as selecting the Affinity scheme. The value is 2.
  syntax:
    content: aligned_affinity = 'AlignedAffinity'
  type: attribute
  uid: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.aligned_affinity
- class: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme
  fullName: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.invalid
  langs:
  - python
  module: azure.mgmt.servicefabric.models.service_fabric_management_client_enums
  name: invalid
  summary: An invalid correlation scheme. Cannot be used. The value is zero.
  syntax:
    content: invalid = 'Invalid'
  type: attribute
  uid: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.invalid
- class: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme
  fullName: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.non_aligned_affinity
  langs:
  - python
  module: azure.mgmt.servicefabric.models.service_fabric_management_client_enums
  name: non_aligned_affinity
  summary: Non-Aligned affinity guarantees that all replicas of each service will
    be placed on the same nodes. Unlike Aligned Affinity, this does not guarantee
    that replicas of particular role will be collocated. The value is 3.
  syntax:
    content: non_aligned_affinity = 'NonAlignedAffinity'
  type: attribute
  uid: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.non_aligned_affinity
references:
- fullName: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.affinity
  isExternal: false
  name: affinity
  parent: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme
  uid: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.affinity
- fullName: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.aligned_affinity
  isExternal: false
  name: aligned_affinity
  parent: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme
  uid: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.aligned_affinity
- fullName: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.invalid
  isExternal: false
  name: invalid
  parent: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme
  uid: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.invalid
- fullName: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.non_aligned_affinity
  isExternal: false
  name: non_aligned_affinity
  parent: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme
  uid: azure.mgmt.servicefabric.models.service_fabric_management_client_enums.ServiceCorrelationScheme.non_aligned_affinity
