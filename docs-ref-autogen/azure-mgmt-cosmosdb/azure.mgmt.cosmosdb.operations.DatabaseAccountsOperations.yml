### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.check_name_exists
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_or_update
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_cassandra_keyspace
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_cassandra_table
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_gremlin_database
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_gremlin_graph
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_mongo_db_collection
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_mongo_db_database
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_sql_container
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_sql_database
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_table
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_cassandra_keyspace
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_cassandra_table
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_gremlin_database
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_gremlin_graph
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_mongo_db_collection
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_mongo_db_database
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_sql_container
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_sql_database
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_table
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.failover_priority_change
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_keyspace
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_keyspace_throughput
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_table
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_table_throughput
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_database
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_database_throughput
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_graph
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_graph_throughput
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_collection
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_collection_throughput
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_database
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_database_throughput
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_read_only_keys
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_container
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_container_throughput
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_database
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_database_throughput
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_table
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_table_throughput
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_by_resource_group
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_cassandra_keyspaces
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_cassandra_tables
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_connection_strings
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_gremlin_databases
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_gremlin_graphs
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_keys
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_metric_definitions
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_metrics
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_mongo_db_collections
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_mongo_db_databases
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_read_only_keys
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_sql_containers
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_sql_databases
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_tables
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_usages
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.offline_region
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.online_region
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.patch
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.regenerate_key
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_cassandra_keyspace_throughput
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_cassandra_table_throughput
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_gremlin_database_throughput
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_gremlin_graph_throughput
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_mongo_db_collection_throughput
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_mongo_db_database_throughput
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_sql_container_throughput
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_sql_database_throughput
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_table_throughput
  - azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.models
  class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: DatabaseAccountsOperations
  summary: 'DatabaseAccountsOperations operations.


    You should not instantiate directly this class, but create a Client instance that
    will create it for you and attach it as attribute.'
  syntax:
    content: DatabaseAccountsOperations(client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: 'Version of the API to be used with the client request. The current
        version is 2015-04-08. Constant value: "2015-04-08".'
      id: api_version
  type: class
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.check_name_exists
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: check_name_exists(account_name, custom_headers=None, raw=False, **operation_config)
  summary: 'Checks that the Azure Cosmos DB account name already exists. A valid

    account name may contain only lowercase letters, numbers, and the ''-''

    character, and must be between 3 and 50 characters.'
  syntax:
    content: check_name_exists(account_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: bool or ClientRawResponse if raw=true
      type:
      - bool
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.check_name_exists
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_or_update
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: create_or_update(resource_group_name, account_name, create_update_parameters,
    custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Creates or updates an Azure Cosmos DB database account.
  syntax:
    content: create_or_update(resource_group_name, account_name, create_update_parameters,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: 'The parameters to provide for the

        current database account.'
      id: create_update_parameters
      type:
      - azure.mgmt.cosmosdb.models.DatabaseAccountCreateUpdateParameters
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns DatabaseAccount or

        ClientRawResponse<DatabaseAccount> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.DatabaseAccount]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.DatabaseAccount]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_or_update
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_cassandra_keyspace
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: create_update_cassandra_keyspace(resource_group_name, account_name, keyspace_name,
    resource, options, custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Create or update an Azure Cosmos DB Cassandra keyspace.
  syntax:
    content: create_update_cassandra_keyspace(resource_group_name, account_name, keyspace_name,
      resource, options, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      type:
      - str
    - description: The standard JSON format of a Cassandra keyspace
      id: resource
      type:
      - azure.mgmt.cosmosdb.models.CassandraKeyspaceResource
    - description: 'A key-value pair of options to be applied for the

        request. This corresponds to the headers sent with the request.'
      id: options
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns CassandraKeyspace or

        ClientRawResponse<CassandraKeyspace> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.CassandraKeyspace]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.CassandraKeyspace]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_cassandra_keyspace
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_cassandra_table
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: create_update_cassandra_table(resource_group_name, account_name, keyspace_name,
    table_name, resource, options, custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Create or update an Azure Cosmos DB Cassandra Table.
  syntax:
    content: create_update_cassandra_table(resource_group_name, account_name, keyspace_name,
      table_name, resource, options, custom_headers=None, raw=False, polling=True,
      **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      type:
      - str
    - description: Cosmos DB table name.
      id: table_name
      type:
      - str
    - description: The standard JSON format of a Cassandra table
      id: resource
      type:
      - azure.mgmt.cosmosdb.models.CassandraTableResource
    - description: 'A key-value pair of options to be applied for the

        request. This corresponds to the headers sent with the request.'
      id: options
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns CassandraTable or

        ClientRawResponse<CassandraTable> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.CassandraTable]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.CassandraTable]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_cassandra_table
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_gremlin_database
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: create_update_gremlin_database(resource_group_name, account_name, database_name,
    resource, options, custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Create or update an Azure Cosmos DB Gremlin database.
  syntax:
    content: create_update_gremlin_database(resource_group_name, account_name, database_name,
      resource, options, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: The standard JSON format of a Gremlin database
      id: resource
      type:
      - azure.mgmt.cosmosdb.models.GremlinDatabaseResource
    - description: 'A key-value pair of options to be applied for the

        request. This corresponds to the headers sent with the request.'
      id: options
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns GremlinDatabase or

        ClientRawResponse<GremlinDatabase> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.GremlinDatabase]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.GremlinDatabase]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_gremlin_database
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_gremlin_graph
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: create_update_gremlin_graph(resource_group_name, account_name, database_name,
    graph_name, resource, options, custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Create or update an Azure Cosmos DB Gremlin graph.
  syntax:
    content: create_update_gremlin_graph(resource_group_name, account_name, database_name,
      graph_name, resource, options, custom_headers=None, raw=False, polling=True,
      **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: Cosmos DB graph name.
      id: graph_name
      type:
      - str
    - description: The standard JSON format of a Gremlin graph
      id: resource
      type:
      - azure.mgmt.cosmosdb.models.GremlinGraphResource
    - description: 'A key-value pair of options to be applied for the

        request. This corresponds to the headers sent with the request.'
      id: options
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns GremlinGraph or

        ClientRawResponse<GremlinGraph> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.GremlinGraph]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.GremlinGraph]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_gremlin_graph
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_mongo_db_collection
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: create_update_mongo_db_collection(resource_group_name, account_name, database_name,
    collection_name, resource, options, custom_headers=None, raw=False, polling=True,
    **operation_config)
  summary: Create or update an Azure Cosmos DB MongoDB Collection.
  syntax:
    content: create_update_mongo_db_collection(resource_group_name, account_name,
      database_name, collection_name, resource, options, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: Cosmos DB collection name.
      id: collection_name
      type:
      - str
    - description: The standard JSON format of a MongoDB collection
      id: resource
      type:
      - azure.mgmt.cosmosdb.models.MongoDBCollectionResource
    - description: 'A key-value pair of options to be applied for the

        request. This corresponds to the headers sent with the request.'
      id: options
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns MongoDBCollection or

        ClientRawResponse<MongoDBCollection> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.MongoDBCollection]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.MongoDBCollection]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_mongo_db_collection
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_mongo_db_database
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: create_update_mongo_db_database(resource_group_name, account_name, database_name,
    resource, options, custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Create or updates Azure Cosmos DB MongoDB database.
  syntax:
    content: create_update_mongo_db_database(resource_group_name, account_name, database_name,
      resource, options, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: The standard JSON format of a MongoDB database
      id: resource
      type:
      - azure.mgmt.cosmosdb.models.MongoDBDatabaseResource
    - description: 'A key-value pair of options to be applied for the

        request. This corresponds to the headers sent with the request.'
      id: options
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns MongoDBDatabase or

        ClientRawResponse<MongoDBDatabase> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.MongoDBDatabase]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.MongoDBDatabase]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_mongo_db_database
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_sql_container
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: create_update_sql_container(resource_group_name, account_name, database_name,
    container_name, resource, options, custom_headers=None, raw=False, polling=True,
    **operation_config)
  summary: Create or update an Azure Cosmos DB SQL container.
  syntax:
    content: create_update_sql_container(resource_group_name, account_name, database_name,
      container_name, resource, options, custom_headers=None, raw=False, polling=True,
      **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      type:
      - str
    - description: The standard JSON format of a container
      id: resource
      type:
      - azure.mgmt.cosmosdb.models.SqlContainerResource
    - description: 'A key-value pair of options to be applied for the

        request. This corresponds to the headers sent with the request.'
      id: options
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns SqlContainer or

        ClientRawResponse<SqlContainer> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlContainer]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlContainer]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_sql_container
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_sql_database
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: create_update_sql_database(resource_group_name, account_name, database_name,
    resource, options, custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Create or update an Azure Cosmos DB SQL database.
  syntax:
    content: create_update_sql_database(resource_group_name, account_name, database_name,
      resource, options, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: The standard JSON format of a SQL database
      id: resource
      type:
      - azure.mgmt.cosmosdb.models.SqlDatabaseResource
    - description: 'A key-value pair of options to be applied for the

        request. This corresponds to the headers sent with the request.'
      id: options
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns SqlDatabase or

        ClientRawResponse<SqlDatabase> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlDatabase]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlDatabase]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_sql_database
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_table
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: create_update_table(resource_group_name, account_name, table_name, resource,
    options, custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Create or update an Azure Cosmos DB Table.
  syntax:
    content: create_update_table(resource_group_name, account_name, table_name, resource,
      options, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB table name.
      id: table_name
      type:
      - str
    - description: The standard JSON format of a Table
      id: resource
      type:
      - azure.mgmt.cosmosdb.models.TableResource
    - description: 'A key-value pair of options to be applied for the

        request. This corresponds to the headers sent with the request.'
      id: options
      type:
      - dict[str, str]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns Table or

        ClientRawResponse<Table> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.Table]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.Table]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_table
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: delete(resource_group_name, account_name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  summary: Deletes an existing Azure Cosmos DB database account.
  syntax:
    content: delete(resource_group_name, account_name, custom_headers=None, raw=False,
      polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_cassandra_keyspace
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: delete_cassandra_keyspace(resource_group_name, account_name, keyspace_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Deletes an existing Azure Cosmos DB Cassandra keyspace.
  syntax:
    content: delete_cassandra_keyspace(resource_group_name, account_name, keyspace_name,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_cassandra_keyspace
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_cassandra_table
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: delete_cassandra_table(resource_group_name, account_name, keyspace_name, table_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Deletes an existing Azure Cosmos DB Cassandra table.
  syntax:
    content: delete_cassandra_table(resource_group_name, account_name, keyspace_name,
      table_name, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      type:
      - str
    - description: Cosmos DB table name.
      id: table_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_cassandra_table
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_gremlin_database
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: delete_gremlin_database(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Deletes an existing Azure Cosmos DB Gremlin database.
  syntax:
    content: delete_gremlin_database(resource_group_name, account_name, database_name,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_gremlin_database
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_gremlin_graph
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: delete_gremlin_graph(resource_group_name, account_name, database_name, graph_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Deletes an existing Azure Cosmos DB Gremlin graph.
  syntax:
    content: delete_gremlin_graph(resource_group_name, account_name, database_name,
      graph_name, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: Cosmos DB graph name.
      id: graph_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_gremlin_graph
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_mongo_db_collection
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: delete_mongo_db_collection(resource_group_name, account_name, database_name,
    collection_name, custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Deletes an existing Azure Cosmos DB MongoDB Collection.
  syntax:
    content: delete_mongo_db_collection(resource_group_name, account_name, database_name,
      collection_name, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: Cosmos DB collection name.
      id: collection_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_mongo_db_collection
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_mongo_db_database
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: delete_mongo_db_database(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Deletes an existing Azure Cosmos DB MongoDB database.
  syntax:
    content: delete_mongo_db_database(resource_group_name, account_name, database_name,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_mongo_db_database
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_sql_container
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: delete_sql_container(resource_group_name, account_name, database_name, container_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Deletes an existing Azure Cosmos DB SQL container.
  syntax:
    content: delete_sql_container(resource_group_name, account_name, database_name,
      container_name, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_sql_container
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_sql_database
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: delete_sql_database(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, polling=True, **operation_config)
  summary: Deletes an existing Azure Cosmos DB SQL database.
  syntax:
    content: delete_sql_database(resource_group_name, account_name, database_name,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_sql_database
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_table
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: delete_table(resource_group_name, account_name, table_name, custom_headers=None,
    raw=False, polling=True, **operation_config)
  summary: Deletes an existing Azure Cosmos DB Table.
  syntax:
    content: delete_table(resource_group_name, account_name, table_name, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB table name.
      id: table_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_table
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.failover_priority_change
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: failover_priority_change(resource_group_name, account_name, failover_policies,
    custom_headers=None, raw=False, polling=True, **operation_config)
  summary: 'Changes the failover priority for the Azure Cosmos DB database account.

    A failover priority of 0 indicates a write region. The maximum value

    for a failover priority = (total number of regions - 1). Failover

    priority values must be unique for each of the regions in which the

    database account exists.'
  syntax:
    content: failover_priority_change(resource_group_name, account_name, failover_policies,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: List of failover policies.
      id: failover_policies
      type:
      - list[azure.mgmt.cosmosdb.models.FailoverPolicy]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.failover_priority_change
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get(resource_group_name, account_name, custom_headers=None, raw=False, **operation_config)
  summary: 'Retrieves the properties of an existing Azure Cosmos DB database

    account.'
  syntax:
    content: get(resource_group_name, account_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: DatabaseAccount or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.DatabaseAccount
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_keyspace
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_cassandra_keyspace(resource_group_name, account_name, keyspace_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Gets the Cassandra keyspaces under an existing Azure Cosmos DB database

    account with the provided name.'
  syntax:
    content: get_cassandra_keyspace(resource_group_name, account_name, keyspace_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: CassandraKeyspace or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.CassandraKeyspace
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_keyspace
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_keyspace_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_cassandra_keyspace_throughput(resource_group_name, account_name, keyspace_name,
    custom_headers=None, raw=False, **operation_config)
  summary: 'Gets the RUs per second of the Cassandra Keyspace under an existing

    Azure Cosmos DB database account with the provided name.'
  syntax:
    content: get_cassandra_keyspace_throughput(resource_group_name, account_name,
      keyspace_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: Throughput or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.Throughput
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_keyspace_throughput
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_table
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_cassandra_table(resource_group_name, account_name, keyspace_name, table_name,
    custom_headers=None, raw=False, **operation_config)
  summary: 'Gets the Cassandra table under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: get_cassandra_table(resource_group_name, account_name, keyspace_name,
      table_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      type:
      - str
    - description: Cosmos DB table name.
      id: table_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: CassandraTable or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.CassandraTable
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_table
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_table_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_cassandra_table_throughput(resource_group_name, account_name, keyspace_name,
    table_name, custom_headers=None, raw=False, **operation_config)
  summary: 'Gets the RUs per second of the Cassandra table under an existing Azure

    Cosmos DB database account with the provided name.'
  syntax:
    content: get_cassandra_table_throughput(resource_group_name, account_name, keyspace_name,
      table_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      type:
      - str
    - description: Cosmos DB table name.
      id: table_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: Throughput or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.Throughput
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_table_throughput
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_database
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_gremlin_database(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Gets the Gremlin databases under an existing Azure Cosmos DB database

    account with the provided name.'
  syntax:
    content: get_gremlin_database(resource_group_name, account_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: GremlinDatabase or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.GremlinDatabase
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_database
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_database_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_gremlin_database_throughput(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, **operation_config)
  summary: 'Gets the RUs per second of the Gremlin database under an existing Azure

    Cosmos DB database account with the provided name.'
  syntax:
    content: get_gremlin_database_throughput(resource_group_name, account_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: Throughput or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.Throughput
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_database_throughput
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_graph
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_gremlin_graph(resource_group_name, account_name, database_name, graph_name,
    custom_headers=None, raw=False, **operation_config)
  summary: 'Gets the Gremlin graph under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: get_gremlin_graph(resource_group_name, account_name, database_name, graph_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: Cosmos DB graph name.
      id: graph_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: GremlinGraph or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.GremlinGraph
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_graph
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_graph_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_gremlin_graph_throughput(resource_group_name, account_name, database_name,
    graph_name, custom_headers=None, raw=False, **operation_config)
  summary: 'Gets the Gremlin graph throughput under an existing Azure Cosmos DB

    database account with the provided name.'
  syntax:
    content: get_gremlin_graph_throughput(resource_group_name, account_name, database_name,
      graph_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: Cosmos DB graph name.
      id: graph_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: Throughput or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.Throughput
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_graph_throughput
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_collection
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_mongo_db_collection(resource_group_name, account_name, database_name,
    collection_name, custom_headers=None, raw=False, **operation_config)
  summary: 'Gets the MongoDB collection under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: get_mongo_db_collection(resource_group_name, account_name, database_name,
      collection_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: Cosmos DB collection name.
      id: collection_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: MongoDBCollection or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.MongoDBCollection
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_collection
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_collection_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_mongo_db_collection_throughput(resource_group_name, account_name, database_name,
    collection_name, custom_headers=None, raw=False, **operation_config)
  summary: 'Gets the RUs per second of the MongoDB collection under an existing

    Azure Cosmos DB database account with the provided name.'
  syntax:
    content: get_mongo_db_collection_throughput(resource_group_name, account_name,
      database_name, collection_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: Cosmos DB collection name.
      id: collection_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: Throughput or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.Throughput
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_collection_throughput
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_database
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_mongo_db_database(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Gets the MongoDB databases under an existing Azure Cosmos DB database

    account with the provided name.'
  syntax:
    content: get_mongo_db_database(resource_group_name, account_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: MongoDBDatabase or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.MongoDBDatabase
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_database
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_database_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_mongo_db_database_throughput(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, **operation_config)
  summary: 'Gets the RUs per second of the MongoDB database under an existing Azure

    Cosmos DB database account with the provided name.'
  syntax:
    content: get_mongo_db_database_throughput(resource_group_name, account_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: Throughput or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.Throughput
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_database_throughput
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_read_only_keys
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_read_only_keys(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Lists the read-only access keys for the specified Azure Cosmos DB

    database account.'
  syntax:
    content: get_read_only_keys(resource_group_name, account_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: 'DatabaseAccountListReadOnlyKeysResult or ClientRawResponse if

        raw=true'
      type:
      - azure.mgmt.cosmosdb.models.DatabaseAccountListReadOnlyKeysResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_read_only_keys
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_container
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_sql_container(resource_group_name, account_name, database_name, container_name,
    custom_headers=None, raw=False, **operation_config)
  summary: 'Gets the SQL container under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: get_sql_container(resource_group_name, account_name, database_name, container_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: SqlContainer or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.SqlContainer
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_container
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_container_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_sql_container_throughput(resource_group_name, account_name, database_name,
    container_name, custom_headers=None, raw=False, **operation_config)
  summary: 'Gets the RUs per second of the SQL container under an existing Azure

    Cosmos DB database account.'
  syntax:
    content: get_sql_container_throughput(resource_group_name, account_name, database_name,
      container_name, custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: Throughput or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.Throughput
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_container_throughput
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_database
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_sql_database(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Gets the SQL database under an existing Azure Cosmos DB database

    account with the provided name.'
  syntax:
    content: get_sql_database(resource_group_name, account_name, database_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: SqlDatabase or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.SqlDatabase
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_database
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_database_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_sql_database_throughput(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, **operation_config)
  summary: 'Gets the RUs per second of the SQL database under an existing Azure

    Cosmos DB database account with the provided name.'
  syntax:
    content: get_sql_database_throughput(resource_group_name, account_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: Throughput or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.Throughput
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_database_throughput
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_table
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_table(resource_group_name, account_name, table_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Gets the Tables under an existing Azure Cosmos DB database account with

    the provided name.'
  syntax:
    content: get_table(resource_group_name, account_name, table_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB table name.
      id: table_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: Table or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.Table
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_table
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_table_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: get_table_throughput(resource_group_name, account_name, table_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Gets the RUs per second of the Table under an existing Azure Cosmos DB

    database account with the provided name.'
  syntax:
    content: get_table_throughput(resource_group_name, account_name, table_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB table name.
      id: table_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: Throughput or ClientRawResponse if raw=true
      type:
      - azure.mgmt.cosmosdb.models.Throughput
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_table_throughput
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list(custom_headers=None, raw=False, **operation_config)
  summary: 'Lists all the Azure Cosmos DB database accounts available under the

    subscription.'
  syntax:
    content: list(custom_headers=None, raw=False, **operation_config)
    parameters:
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of DatabaseAccount
      type:
      - azure.mgmt.cosmosdb.models.DatabaseAccountPaged[azure.mgmt.cosmosdb.models.DatabaseAccount]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_by_resource_group
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_by_resource_group(resource_group_name, custom_headers=None, raw=False,
    **operation_config)
  summary: 'Lists all the Azure Cosmos DB database accounts available under the

    given resource group.'
  syntax:
    content: list_by_resource_group(resource_group_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of DatabaseAccount
      type:
      - azure.mgmt.cosmosdb.models.DatabaseAccountPaged[azure.mgmt.cosmosdb.models.DatabaseAccount]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_by_resource_group
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_cassandra_keyspaces
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_cassandra_keyspaces(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Lists the Cassandra keyspaces under an existing Azure Cosmos DB

    database account.'
  syntax:
    content: list_cassandra_keyspaces(resource_group_name, account_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of CassandraKeyspace
      type:
      - azure.mgmt.cosmosdb.models.CassandraKeyspacePaged[azure.mgmt.cosmosdb.models.CassandraKeyspace]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_cassandra_keyspaces
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_cassandra_tables
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_cassandra_tables(resource_group_name, account_name, keyspace_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Lists the Cassandra table under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: list_cassandra_tables(resource_group_name, account_name, keyspace_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of CassandraTable
      type:
      - azure.mgmt.cosmosdb.models.CassandraTablePaged[azure.mgmt.cosmosdb.models.CassandraTable]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_cassandra_tables
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_connection_strings
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_connection_strings(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Lists the connection strings for the specified Azure Cosmos DB database

    account.'
  syntax:
    content: list_connection_strings(resource_group_name, account_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: 'DatabaseAccountListConnectionStringsResult or

        ClientRawResponse if raw=true'
      type:
      - azure.mgmt.cosmosdb.models.DatabaseAccountListConnectionStringsResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_connection_strings
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_gremlin_databases
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_gremlin_databases(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Lists the Gremlin databases under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: list_gremlin_databases(resource_group_name, account_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of GremlinDatabase
      type:
      - azure.mgmt.cosmosdb.models.GremlinDatabasePaged[azure.mgmt.cosmosdb.models.GremlinDatabase]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_gremlin_databases
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_gremlin_graphs
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_gremlin_graphs(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Lists the Gremlin graph under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: list_gremlin_graphs(resource_group_name, account_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of GremlinGraph
      type:
      - azure.mgmt.cosmosdb.models.GremlinGraphPaged[azure.mgmt.cosmosdb.models.GremlinGraph]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_gremlin_graphs
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_keys
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_keys(resource_group_name, account_name, custom_headers=None, raw=False,
    **operation_config)
  summary: 'Lists the access keys for the specified Azure Cosmos DB database

    account.'
  syntax:
    content: list_keys(resource_group_name, account_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: 'DatabaseAccountListKeysResult or ClientRawResponse if

        raw=true'
      type:
      - azure.mgmt.cosmosdb.models.DatabaseAccountListKeysResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_keys
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_metric_definitions
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_metric_definitions(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  summary: Retrieves metric definitions for the given database account.
  syntax:
    content: list_metric_definitions(resource_group_name, account_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of MetricDefinition
      type:
      - azure.mgmt.cosmosdb.models.MetricDefinitionPaged[azure.mgmt.cosmosdb.models.MetricDefinition]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_metric_definitions
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_metrics
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_metrics(resource_group_name, account_name, filter, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Retrieves the metrics determined by the given filter for the given

    database account.'
  syntax:
    content: list_metrics(resource_group_name, account_name, filter, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: 'An OData filter expression that describes a subset of

        metrics to return. The parameters that can be filtered are name.value

        (name of the metric, can have an or of multiple names), startTime,

        endTime, and timeGrain. The supported operator is eq.'
      id: filter
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of Metric
      type:
      - azure.mgmt.cosmosdb.models.MetricPaged[azure.mgmt.cosmosdb.models.Metric]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_metrics
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_mongo_db_collections
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_mongo_db_collections(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, **operation_config)
  summary: 'Lists the MongoDB collection under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: list_mongo_db_collections(resource_group_name, account_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of MongoDBCollection
      type:
      - azure.mgmt.cosmosdb.models.MongoDBCollectionPaged[azure.mgmt.cosmosdb.models.MongoDBCollection]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_mongo_db_collections
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_mongo_db_databases
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_mongo_db_databases(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Lists the MongoDB databases under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: list_mongo_db_databases(resource_group_name, account_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of MongoDBDatabase
      type:
      - azure.mgmt.cosmosdb.models.MongoDBDatabasePaged[azure.mgmt.cosmosdb.models.MongoDBDatabase]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_mongo_db_databases
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_read_only_keys
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_read_only_keys(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Lists the read-only access keys for the specified Azure Cosmos DB

    database account.'
  syntax:
    content: list_read_only_keys(resource_group_name, account_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: 'DatabaseAccountListReadOnlyKeysResult or ClientRawResponse if

        raw=true'
      type:
      - azure.mgmt.cosmosdb.models.DatabaseAccountListReadOnlyKeysResult
      - msrest.pipeline.ClientRawResponse
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_read_only_keys
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_sql_containers
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_sql_containers(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Lists the SQL container under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: list_sql_containers(resource_group_name, account_name, database_name,
      custom_headers=None, raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of SqlContainer
      type:
      - azure.mgmt.cosmosdb.models.SqlContainerPaged[azure.mgmt.cosmosdb.models.SqlContainer]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_sql_containers
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_sql_databases
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_sql_databases(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  summary: 'Lists the SQL databases under an existing Azure Cosmos DB database

    account.'
  syntax:
    content: list_sql_databases(resource_group_name, account_name, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of SqlDatabase
      type:
      - azure.mgmt.cosmosdb.models.SqlDatabasePaged[azure.mgmt.cosmosdb.models.SqlDatabase]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_sql_databases
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_tables
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_tables(resource_group_name, account_name, custom_headers=None, raw=False,
    **operation_config)
  summary: Lists the Tables under an existing Azure Cosmos DB database account.
  syntax:
    content: list_tables(resource_group_name, account_name, custom_headers=None, raw=False,
      **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of Table
      type:
      - azure.mgmt.cosmosdb.models.TablePaged[azure.mgmt.cosmosdb.models.Table]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_tables
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_usages
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: list_usages(resource_group_name, account_name, filter=None, custom_headers=None,
    raw=False, **operation_config)
  summary: Retrieves the usages (most recent data) for the given database account.
  syntax:
    content: list_usages(resource_group_name, account_name, filter=None, custom_headers=None,
      raw=False, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - defaultValue: None
      description: 'An OData filter expression that describes a subset of

        usages to return. The supported parameter is name.value (name of the

        metric, can have an or of multiple names).'
      id: filter
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'returns the direct response alongside the

        deserialized response'
      id: raw
      type:
      - bool
    - description: '*Operation configuration

        overrides*.'
      id: operation_config
    return:
      description: An iterator like instance of Usage
      type:
      - azure.mgmt.cosmosdb.models.UsagePaged[azure.mgmt.cosmosdb.models.Usage]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_usages
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: azure.mgmt.cosmosdb.models.ErrorResponseException
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.offline_region
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: offline_region(resource_group_name, account_name, region, custom_headers=None,
    raw=False, polling=True, **operation_config)
  summary: 'Offline the specified region for the specified Azure Cosmos DB database

    account.'
  syntax:
    content: offline_region(resource_group_name, account_name, region, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: 'Cosmos DB region, with spaces between words and each

        word capitalized.'
      id: region
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.offline_region
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: azure.mgmt.cosmosdb.models.ErrorResponseException
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.online_region
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: online_region(resource_group_name, account_name, region, custom_headers=None,
    raw=False, polling=True, **operation_config)
  summary: 'Online the specified region for the specified Azure Cosmos DB database

    account.'
  syntax:
    content: online_region(resource_group_name, account_name, region, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: 'Cosmos DB region, with spaces between words and each

        word capitalized.'
      id: region
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.online_region
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.patch
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: patch(resource_group_name, account_name, tags=None, capabilities=None, custom_headers=None,
    raw=False, polling=True, **operation_config)
  summary: Patches the properties of an existing Azure Cosmos DB database account.
  syntax:
    content: patch(resource_group_name, account_name, tags=None, capabilities=None,
      custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - defaultValue: None
      description: ''
      id: tags
      type:
      - dict[str, str]
    - defaultValue: None
      description: List of Cosmos DB capabilities for the account
      id: capabilities
      type:
      - list[azure.mgmt.cosmosdb.models.Capability]
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns DatabaseAccount or

        ClientRawResponse<DatabaseAccount> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.DatabaseAccount]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.DatabaseAccount]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.patch
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.regenerate_key
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: regenerate_key(resource_group_name, account_name, key_kind, custom_headers=None,
    raw=False, polling=True, **operation_config)
  summary: 'Regenerates an access key for the specified Azure Cosmos DB database

    account.'
  syntax:
    content: regenerate_key(resource_group_name, account_name, key_kind, custom_headers=None,
      raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: 'The access key to regenerate. Possible values

        include: ''primary'', ''secondary'', ''primaryReadonly'',

        ''secondaryReadonly'''
      id: key_kind
      type:
      - str
      - azure.mgmt.cosmosdb.models.KeyKind
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns None or

        ClientRawResponse<None> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[None]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.regenerate_key
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_cassandra_keyspace_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: update_cassandra_keyspace_throughput(resource_group_name, account_name, keyspace_name,
    resource, custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Update RUs per second of an Azure Cosmos DB Cassandra Keyspace.
  syntax:
    content: update_cassandra_keyspace_throughput(resource_group_name, account_name,
      keyspace_name, resource, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      type:
      - str
    - description: The standard JSON format of a resource throughput
      id: resource
      type:
      - azure.mgmt.cosmosdb.models.ThroughputResource
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns Throughput or

        ClientRawResponse<Throughput> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.Throughput]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.Throughput]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_cassandra_keyspace_throughput
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_cassandra_table_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: update_cassandra_table_throughput(resource_group_name, account_name, keyspace_name,
    table_name, resource, custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Update RUs per second of an Azure Cosmos DB Cassandra table.
  syntax:
    content: update_cassandra_table_throughput(resource_group_name, account_name,
      keyspace_name, table_name, resource, custom_headers=None, raw=False, polling=True,
      **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB keyspace name.
      id: keyspace_name
      type:
      - str
    - description: Cosmos DB table name.
      id: table_name
      type:
      - str
    - description: The standard JSON format of a resource throughput
      id: resource
      type:
      - azure.mgmt.cosmosdb.models.ThroughputResource
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns Throughput or

        ClientRawResponse<Throughput> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.Throughput]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.Throughput]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_cassandra_table_throughput
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_gremlin_database_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: update_gremlin_database_throughput(resource_group_name, account_name, database_name,
    resource, custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Update RUs per second of an Azure Cosmos DB Gremlin database.
  syntax:
    content: update_gremlin_database_throughput(resource_group_name, account_name,
      database_name, resource, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: The standard JSON format of a resource throughput
      id: resource
      type:
      - azure.mgmt.cosmosdb.models.ThroughputResource
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns Throughput or

        ClientRawResponse<Throughput> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.Throughput]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.Throughput]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_gremlin_database_throughput
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_gremlin_graph_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: update_gremlin_graph_throughput(resource_group_name, account_name, database_name,
    graph_name, resource, custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Update RUs per second of an Azure Cosmos DB Gremlin graph.
  syntax:
    content: update_gremlin_graph_throughput(resource_group_name, account_name, database_name,
      graph_name, resource, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: Cosmos DB graph name.
      id: graph_name
      type:
      - str
    - description: The standard JSON format of a resource throughput
      id: resource
      type:
      - azure.mgmt.cosmosdb.models.ThroughputResource
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns Throughput or

        ClientRawResponse<Throughput> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.Throughput]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.Throughput]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_gremlin_graph_throughput
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_mongo_db_collection_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: update_mongo_db_collection_throughput(resource_group_name, account_name, database_name,
    collection_name, resource, custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Update the RUs per second of an Azure Cosmos DB MongoDB collection.
  syntax:
    content: update_mongo_db_collection_throughput(resource_group_name, account_name,
      database_name, collection_name, resource, custom_headers=None, raw=False, polling=True,
      **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: Cosmos DB collection name.
      id: collection_name
      type:
      - str
    - description: The standard JSON format of a resource throughput
      id: resource
      type:
      - azure.mgmt.cosmosdb.models.ThroughputResource
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns Throughput or

        ClientRawResponse<Throughput> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.Throughput]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.Throughput]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_mongo_db_collection_throughput
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_mongo_db_database_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: update_mongo_db_database_throughput(resource_group_name, account_name, database_name,
    resource, custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Update RUs per second of the an Azure Cosmos DB MongoDB database.
  syntax:
    content: update_mongo_db_database_throughput(resource_group_name, account_name,
      database_name, resource, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: The standard JSON format of a resource throughput
      id: resource
      type:
      - azure.mgmt.cosmosdb.models.ThroughputResource
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns Throughput or

        ClientRawResponse<Throughput> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.Throughput]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.Throughput]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_mongo_db_database_throughput
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_sql_container_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: update_sql_container_throughput(resource_group_name, account_name, database_name,
    container_name, resource, custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Update RUs per second of an Azure Cosmos DB SQL container.
  syntax:
    content: update_sql_container_throughput(resource_group_name, account_name, database_name,
      container_name, resource, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: Cosmos DB container name.
      id: container_name
      type:
      - str
    - description: The standard JSON format of a resource throughput
      id: resource
      type:
      - azure.mgmt.cosmosdb.models.ThroughputResource
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns Throughput or

        ClientRawResponse<Throughput> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.Throughput]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.Throughput]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_sql_container_throughput
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_sql_database_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: update_sql_database_throughput(resource_group_name, account_name, database_name,
    resource, custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Update RUs per second of an Azure Cosmos DB SQL database.
  syntax:
    content: update_sql_database_throughput(resource_group_name, account_name, database_name,
      resource, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB database name.
      id: database_name
      type:
      - str
    - description: The standard JSON format of a resource throughput
      id: resource
      type:
      - azure.mgmt.cosmosdb.models.ThroughputResource
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns Throughput or

        ClientRawResponse<Throughput> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.Throughput]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.Throughput]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_sql_database_throughput
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  exceptions:
  - type: msrestazure.azure_exceptions.CloudError
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_table_throughput
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: update_table_throughput(resource_group_name, account_name, table_name, resource,
    custom_headers=None, raw=False, polling=True, **operation_config)
  summary: Update RUs per second of an Azure Cosmos DB Table.
  syntax:
    content: update_table_throughput(resource_group_name, account_name, table_name,
      resource, custom_headers=None, raw=False, polling=True, **operation_config)
    parameters:
    - description: Name of an Azure resource group.
      id: resource_group_name
      type:
      - str
    - description: Cosmos DB database account name.
      id: account_name
      type:
      - str
    - description: Cosmos DB table name.
      id: table_name
      type:
      - str
    - description: The standard JSON format of a resource throughput
      id: resource
      type:
      - azure.mgmt.cosmosdb.models.ThroughputResource
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: 'The poller return type is ClientRawResponse, the

        direct response alongside the deserialized response'
      id: raw
      type:
      - bool
    - defaultValue: 'True'
      description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
    return:
      description: 'An instance of LROPoller that returns Throughput or

        ClientRawResponse<Throughput> if raw==True'
      type:
      - msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.Throughput]
      - msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.Throughput]]
  type: method
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_table_throughput
- class: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.models
  langs:
  - python
  module: azure.mgmt.cosmosdb.operations
  name: models
  syntax:
    content: models = <module 'azure.mgmt.cosmosdb.models' from 'c:\\hostedtoolcache\\windows\\python\\3.6.8\\x64\\lib\\site-packages\\azure\\mgmt\\cosmosdb\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.models
references:
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.check_name_exists
  isExternal: false
  name: check_name_exists(account_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.check_name_exists
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_or_update
  isExternal: false
  name: create_or_update(resource_group_name, account_name, create_update_parameters,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_or_update
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_cassandra_keyspace
  isExternal: false
  name: create_update_cassandra_keyspace(resource_group_name, account_name, keyspace_name,
    resource, options, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_cassandra_keyspace
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_cassandra_table
  isExternal: false
  name: create_update_cassandra_table(resource_group_name, account_name, keyspace_name,
    table_name, resource, options, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_cassandra_table
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_gremlin_database
  isExternal: false
  name: create_update_gremlin_database(resource_group_name, account_name, database_name,
    resource, options, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_gremlin_database
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_gremlin_graph
  isExternal: false
  name: create_update_gremlin_graph(resource_group_name, account_name, database_name,
    graph_name, resource, options, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_gremlin_graph
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_mongo_db_collection
  isExternal: false
  name: create_update_mongo_db_collection(resource_group_name, account_name, database_name,
    collection_name, resource, options, custom_headers=None, raw=False, polling=True,
    **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_mongo_db_collection
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_mongo_db_database
  isExternal: false
  name: create_update_mongo_db_database(resource_group_name, account_name, database_name,
    resource, options, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_mongo_db_database
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_sql_container
  isExternal: false
  name: create_update_sql_container(resource_group_name, account_name, database_name,
    container_name, resource, options, custom_headers=None, raw=False, polling=True,
    **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_sql_container
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_sql_database
  isExternal: false
  name: create_update_sql_database(resource_group_name, account_name, database_name,
    resource, options, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_sql_database
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_table
  isExternal: false
  name: create_update_table(resource_group_name, account_name, table_name, resource,
    options, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.create_update_table
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete
  isExternal: false
  name: delete(resource_group_name, account_name, custom_headers=None, raw=False,
    polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_cassandra_keyspace
  isExternal: false
  name: delete_cassandra_keyspace(resource_group_name, account_name, keyspace_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_cassandra_keyspace
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_cassandra_table
  isExternal: false
  name: delete_cassandra_table(resource_group_name, account_name, keyspace_name, table_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_cassandra_table
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_gremlin_database
  isExternal: false
  name: delete_gremlin_database(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_gremlin_database
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_gremlin_graph
  isExternal: false
  name: delete_gremlin_graph(resource_group_name, account_name, database_name, graph_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_gremlin_graph
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_mongo_db_collection
  isExternal: false
  name: delete_mongo_db_collection(resource_group_name, account_name, database_name,
    collection_name, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_mongo_db_collection
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_mongo_db_database
  isExternal: false
  name: delete_mongo_db_database(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_mongo_db_database
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_sql_container
  isExternal: false
  name: delete_sql_container(resource_group_name, account_name, database_name, container_name,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_sql_container
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_sql_database
  isExternal: false
  name: delete_sql_database(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_sql_database
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_table
  isExternal: false
  name: delete_table(resource_group_name, account_name, table_name, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.delete_table
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.failover_priority_change
  isExternal: false
  name: failover_priority_change(resource_group_name, account_name, failover_policies,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.failover_priority_change
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get
  isExternal: false
  name: get(resource_group_name, account_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_keyspace
  isExternal: false
  name: get_cassandra_keyspace(resource_group_name, account_name, keyspace_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_keyspace
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_keyspace_throughput
  isExternal: false
  name: get_cassandra_keyspace_throughput(resource_group_name, account_name, keyspace_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_keyspace_throughput
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_table
  isExternal: false
  name: get_cassandra_table(resource_group_name, account_name, keyspace_name, table_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_table
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_table_throughput
  isExternal: false
  name: get_cassandra_table_throughput(resource_group_name, account_name, keyspace_name,
    table_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_cassandra_table_throughput
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_database
  isExternal: false
  name: get_gremlin_database(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_database
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_database_throughput
  isExternal: false
  name: get_gremlin_database_throughput(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_database_throughput
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_graph
  isExternal: false
  name: get_gremlin_graph(resource_group_name, account_name, database_name, graph_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_graph
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_graph_throughput
  isExternal: false
  name: get_gremlin_graph_throughput(resource_group_name, account_name, database_name,
    graph_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_gremlin_graph_throughput
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_collection
  isExternal: false
  name: get_mongo_db_collection(resource_group_name, account_name, database_name,
    collection_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_collection
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_collection_throughput
  isExternal: false
  name: get_mongo_db_collection_throughput(resource_group_name, account_name, database_name,
    collection_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_collection_throughput
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_database
  isExternal: false
  name: get_mongo_db_database(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_database
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_database_throughput
  isExternal: false
  name: get_mongo_db_database_throughput(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_mongo_db_database_throughput
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_read_only_keys
  isExternal: false
  name: get_read_only_keys(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_read_only_keys
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_container
  isExternal: false
  name: get_sql_container(resource_group_name, account_name, database_name, container_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_container
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_container_throughput
  isExternal: false
  name: get_sql_container_throughput(resource_group_name, account_name, database_name,
    container_name, custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_container_throughput
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_database
  isExternal: false
  name: get_sql_database(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_database
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_database_throughput
  isExternal: false
  name: get_sql_database_throughput(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_sql_database_throughput
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_table
  isExternal: false
  name: get_table(resource_group_name, account_name, table_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_table
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_table_throughput
  isExternal: false
  name: get_table_throughput(resource_group_name, account_name, table_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.get_table_throughput
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list
  isExternal: false
  name: list(custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_by_resource_group
  isExternal: false
  name: list_by_resource_group(resource_group_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_by_resource_group
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_cassandra_keyspaces
  isExternal: false
  name: list_cassandra_keyspaces(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_cassandra_keyspaces
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_cassandra_tables
  isExternal: false
  name: list_cassandra_tables(resource_group_name, account_name, keyspace_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_cassandra_tables
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_connection_strings
  isExternal: false
  name: list_connection_strings(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_connection_strings
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_gremlin_databases
  isExternal: false
  name: list_gremlin_databases(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_gremlin_databases
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_gremlin_graphs
  isExternal: false
  name: list_gremlin_graphs(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_gremlin_graphs
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_keys
  isExternal: false
  name: list_keys(resource_group_name, account_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_keys
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_metric_definitions
  isExternal: false
  name: list_metric_definitions(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_metric_definitions
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_metrics
  isExternal: false
  name: list_metrics(resource_group_name, account_name, filter, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_metrics
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_mongo_db_collections
  isExternal: false
  name: list_mongo_db_collections(resource_group_name, account_name, database_name,
    custom_headers=None, raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_mongo_db_collections
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_mongo_db_databases
  isExternal: false
  name: list_mongo_db_databases(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_mongo_db_databases
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_read_only_keys
  isExternal: false
  name: list_read_only_keys(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_read_only_keys
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_sql_containers
  isExternal: false
  name: list_sql_containers(resource_group_name, account_name, database_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_sql_containers
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_sql_databases
  isExternal: false
  name: list_sql_databases(resource_group_name, account_name, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_sql_databases
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_tables
  isExternal: false
  name: list_tables(resource_group_name, account_name, custom_headers=None, raw=False,
    **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_tables
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_usages
  isExternal: false
  name: list_usages(resource_group_name, account_name, filter=None, custom_headers=None,
    raw=False, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.list_usages
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.offline_region
  isExternal: false
  name: offline_region(resource_group_name, account_name, region, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.offline_region
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.online_region
  isExternal: false
  name: online_region(resource_group_name, account_name, region, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.online_region
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.patch
  isExternal: false
  name: patch(resource_group_name, account_name, tags=None, capabilities=None, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.patch
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.regenerate_key
  isExternal: false
  name: regenerate_key(resource_group_name, account_name, key_kind, custom_headers=None,
    raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.regenerate_key
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_cassandra_keyspace_throughput
  isExternal: false
  name: update_cassandra_keyspace_throughput(resource_group_name, account_name, keyspace_name,
    resource, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_cassandra_keyspace_throughput
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_cassandra_table_throughput
  isExternal: false
  name: update_cassandra_table_throughput(resource_group_name, account_name, keyspace_name,
    table_name, resource, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_cassandra_table_throughput
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_gremlin_database_throughput
  isExternal: false
  name: update_gremlin_database_throughput(resource_group_name, account_name, database_name,
    resource, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_gremlin_database_throughput
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_gremlin_graph_throughput
  isExternal: false
  name: update_gremlin_graph_throughput(resource_group_name, account_name, database_name,
    graph_name, resource, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_gremlin_graph_throughput
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_mongo_db_collection_throughput
  isExternal: false
  name: update_mongo_db_collection_throughput(resource_group_name, account_name, database_name,
    collection_name, resource, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_mongo_db_collection_throughput
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_mongo_db_database_throughput
  isExternal: false
  name: update_mongo_db_database_throughput(resource_group_name, account_name, database_name,
    resource, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_mongo_db_database_throughput
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_sql_container_throughput
  isExternal: false
  name: update_sql_container_throughput(resource_group_name, account_name, database_name,
    container_name, resource, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_sql_container_throughput
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_sql_database_throughput
  isExternal: false
  name: update_sql_database_throughput(resource_group_name, account_name, database_name,
    resource, custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_sql_database_throughput
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_table_throughput
  isExternal: false
  name: update_table_throughput(resource_group_name, account_name, table_name, resource,
    custom_headers=None, raw=False, polling=True, **operation_config)
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.update_table_throughput
- fullName: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations
  uid: azure.mgmt.cosmosdb.operations.DatabaseAccountsOperations.models
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.DatabaseAccount]
  name: AzureOperationPoller[DatabaseAccount]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.DatabaseAccount
    name: DatabaseAccount
    uid: azure.mgmt.cosmosdb.models.DatabaseAccount
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.DatabaseAccount]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.DatabaseAccount]]
  name: AzureOperationPoller[ClientRawResponse[DatabaseAccount]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.DatabaseAccount
    name: DatabaseAccount
    uid: azure.mgmt.cosmosdb.models.DatabaseAccount
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.DatabaseAccount]]
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.CassandraKeyspace]
  name: AzureOperationPoller[CassandraKeyspace]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.CassandraKeyspace
    name: CassandraKeyspace
    uid: azure.mgmt.cosmosdb.models.CassandraKeyspace
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.CassandraKeyspace]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.CassandraKeyspace]]
  name: AzureOperationPoller[ClientRawResponse[CassandraKeyspace]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.CassandraKeyspace
    name: CassandraKeyspace
    uid: azure.mgmt.cosmosdb.models.CassandraKeyspace
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.CassandraKeyspace]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.CassandraTable]
  name: AzureOperationPoller[CassandraTable]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.CassandraTable
    name: CassandraTable
    uid: azure.mgmt.cosmosdb.models.CassandraTable
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.CassandraTable]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.CassandraTable]]
  name: AzureOperationPoller[ClientRawResponse[CassandraTable]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.CassandraTable
    name: CassandraTable
    uid: azure.mgmt.cosmosdb.models.CassandraTable
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.CassandraTable]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.GremlinDatabase]
  name: AzureOperationPoller[GremlinDatabase]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.GremlinDatabase
    name: GremlinDatabase
    uid: azure.mgmt.cosmosdb.models.GremlinDatabase
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.GremlinDatabase]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.GremlinDatabase]]
  name: AzureOperationPoller[ClientRawResponse[GremlinDatabase]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.GremlinDatabase
    name: GremlinDatabase
    uid: azure.mgmt.cosmosdb.models.GremlinDatabase
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.GremlinDatabase]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.GremlinGraph]
  name: AzureOperationPoller[GremlinGraph]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.GremlinGraph
    name: GremlinGraph
    uid: azure.mgmt.cosmosdb.models.GremlinGraph
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.GremlinGraph]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.GremlinGraph]]
  name: AzureOperationPoller[ClientRawResponse[GremlinGraph]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.GremlinGraph
    name: GremlinGraph
    uid: azure.mgmt.cosmosdb.models.GremlinGraph
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.GremlinGraph]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.MongoDBCollection]
  name: AzureOperationPoller[MongoDBCollection]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.MongoDBCollection
    name: MongoDBCollection
    uid: azure.mgmt.cosmosdb.models.MongoDBCollection
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.MongoDBCollection]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.MongoDBCollection]]
  name: AzureOperationPoller[ClientRawResponse[MongoDBCollection]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.MongoDBCollection
    name: MongoDBCollection
    uid: azure.mgmt.cosmosdb.models.MongoDBCollection
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.MongoDBCollection]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.MongoDBDatabase]
  name: AzureOperationPoller[MongoDBDatabase]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.MongoDBDatabase
    name: MongoDBDatabase
    uid: azure.mgmt.cosmosdb.models.MongoDBDatabase
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.MongoDBDatabase]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.MongoDBDatabase]]
  name: AzureOperationPoller[ClientRawResponse[MongoDBDatabase]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.MongoDBDatabase
    name: MongoDBDatabase
    uid: azure.mgmt.cosmosdb.models.MongoDBDatabase
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.MongoDBDatabase]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlContainer]
  name: AzureOperationPoller[SqlContainer]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlContainer
    name: SqlContainer
    uid: azure.mgmt.cosmosdb.models.SqlContainer
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlContainer]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlContainer]]
  name: AzureOperationPoller[ClientRawResponse[SqlContainer]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlContainer
    name: SqlContainer
    uid: azure.mgmt.cosmosdb.models.SqlContainer
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlContainer]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlDatabase]
  name: AzureOperationPoller[SqlDatabase]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlDatabase
    name: SqlDatabase
    uid: azure.mgmt.cosmosdb.models.SqlDatabase
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.SqlDatabase]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlDatabase]]
  name: AzureOperationPoller[ClientRawResponse[SqlDatabase]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlDatabase
    name: SqlDatabase
    uid: azure.mgmt.cosmosdb.models.SqlDatabase
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.SqlDatabase]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.Table]
  name: AzureOperationPoller[Table]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.Table
    name: Table
    uid: azure.mgmt.cosmosdb.models.Table
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.Table]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.Table]]
  name: AzureOperationPoller[ClientRawResponse[Table]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.Table
    name: Table
    uid: azure.mgmt.cosmosdb.models.Table
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.Table]]
- fullName: msrestazure.azure_operation.AzureOperationPoller[None]
  name: AzureOperationPoller[None]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[None]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
  name: AzureOperationPoller[ClientRawResponse[None]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: None
    name: None
    uid: None
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[None]]
- fullName: list[azure.mgmt.cosmosdb.models.FailoverPolicy]
  name: list[FailoverPolicy]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.FailoverPolicy
    name: FailoverPolicy
    uid: azure.mgmt.cosmosdb.models.FailoverPolicy
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.cosmosdb.models.FailoverPolicy]
- fullName: azure.mgmt.cosmosdb.models.DatabaseAccountPaged[azure.mgmt.cosmosdb.models.DatabaseAccount]
  name: DatabaseAccountPaged[DatabaseAccount]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.DatabaseAccountPaged
    name: DatabaseAccountPaged
    uid: azure.mgmt.cosmosdb.models.DatabaseAccountPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.DatabaseAccount
    name: DatabaseAccount
    uid: azure.mgmt.cosmosdb.models.DatabaseAccount
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.DatabaseAccountPaged[azure.mgmt.cosmosdb.models.DatabaseAccount]
- fullName: azure.mgmt.cosmosdb.models.CassandraKeyspacePaged[azure.mgmt.cosmosdb.models.CassandraKeyspace]
  name: CassandraKeyspacePaged[CassandraKeyspace]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.CassandraKeyspacePaged
    name: CassandraKeyspacePaged
    uid: azure.mgmt.cosmosdb.models.CassandraKeyspacePaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.CassandraKeyspace
    name: CassandraKeyspace
    uid: azure.mgmt.cosmosdb.models.CassandraKeyspace
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.CassandraKeyspacePaged[azure.mgmt.cosmosdb.models.CassandraKeyspace]
- fullName: azure.mgmt.cosmosdb.models.CassandraTablePaged[azure.mgmt.cosmosdb.models.CassandraTable]
  name: CassandraTablePaged[CassandraTable]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.CassandraTablePaged
    name: CassandraTablePaged
    uid: azure.mgmt.cosmosdb.models.CassandraTablePaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.CassandraTable
    name: CassandraTable
    uid: azure.mgmt.cosmosdb.models.CassandraTable
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.CassandraTablePaged[azure.mgmt.cosmosdb.models.CassandraTable]
- fullName: azure.mgmt.cosmosdb.models.GremlinDatabasePaged[azure.mgmt.cosmosdb.models.GremlinDatabase]
  name: GremlinDatabasePaged[GremlinDatabase]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.GremlinDatabasePaged
    name: GremlinDatabasePaged
    uid: azure.mgmt.cosmosdb.models.GremlinDatabasePaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.GremlinDatabase
    name: GremlinDatabase
    uid: azure.mgmt.cosmosdb.models.GremlinDatabase
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.GremlinDatabasePaged[azure.mgmt.cosmosdb.models.GremlinDatabase]
- fullName: azure.mgmt.cosmosdb.models.GremlinGraphPaged[azure.mgmt.cosmosdb.models.GremlinGraph]
  name: GremlinGraphPaged[GremlinGraph]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.GremlinGraphPaged
    name: GremlinGraphPaged
    uid: azure.mgmt.cosmosdb.models.GremlinGraphPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.GremlinGraph
    name: GremlinGraph
    uid: azure.mgmt.cosmosdb.models.GremlinGraph
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.GremlinGraphPaged[azure.mgmt.cosmosdb.models.GremlinGraph]
- fullName: azure.mgmt.cosmosdb.models.MetricDefinitionPaged[azure.mgmt.cosmosdb.models.MetricDefinition]
  name: MetricDefinitionPaged[MetricDefinition]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.MetricDefinitionPaged
    name: MetricDefinitionPaged
    uid: azure.mgmt.cosmosdb.models.MetricDefinitionPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.MetricDefinition
    name: MetricDefinition
    uid: azure.mgmt.cosmosdb.models.MetricDefinition
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.MetricDefinitionPaged[azure.mgmt.cosmosdb.models.MetricDefinition]
- fullName: azure.mgmt.cosmosdb.models.MetricPaged[azure.mgmt.cosmosdb.models.Metric]
  name: MetricPaged[Metric]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.MetricPaged
    name: MetricPaged
    uid: azure.mgmt.cosmosdb.models.MetricPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.Metric
    name: Metric
    uid: azure.mgmt.cosmosdb.models.Metric
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.MetricPaged[azure.mgmt.cosmosdb.models.Metric]
- fullName: azure.mgmt.cosmosdb.models.MongoDBCollectionPaged[azure.mgmt.cosmosdb.models.MongoDBCollection]
  name: MongoDBCollectionPaged[MongoDBCollection]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.MongoDBCollectionPaged
    name: MongoDBCollectionPaged
    uid: azure.mgmt.cosmosdb.models.MongoDBCollectionPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.MongoDBCollection
    name: MongoDBCollection
    uid: azure.mgmt.cosmosdb.models.MongoDBCollection
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.MongoDBCollectionPaged[azure.mgmt.cosmosdb.models.MongoDBCollection]
- fullName: azure.mgmt.cosmosdb.models.MongoDBDatabasePaged[azure.mgmt.cosmosdb.models.MongoDBDatabase]
  name: MongoDBDatabasePaged[MongoDBDatabase]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.MongoDBDatabasePaged
    name: MongoDBDatabasePaged
    uid: azure.mgmt.cosmosdb.models.MongoDBDatabasePaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.MongoDBDatabase
    name: MongoDBDatabase
    uid: azure.mgmt.cosmosdb.models.MongoDBDatabase
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.MongoDBDatabasePaged[azure.mgmt.cosmosdb.models.MongoDBDatabase]
- fullName: azure.mgmt.cosmosdb.models.SqlContainerPaged[azure.mgmt.cosmosdb.models.SqlContainer]
  name: SqlContainerPaged[SqlContainer]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.SqlContainerPaged
    name: SqlContainerPaged
    uid: azure.mgmt.cosmosdb.models.SqlContainerPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlContainer
    name: SqlContainer
    uid: azure.mgmt.cosmosdb.models.SqlContainer
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.SqlContainerPaged[azure.mgmt.cosmosdb.models.SqlContainer]
- fullName: azure.mgmt.cosmosdb.models.SqlDatabasePaged[azure.mgmt.cosmosdb.models.SqlDatabase]
  name: SqlDatabasePaged[SqlDatabase]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.SqlDatabasePaged
    name: SqlDatabasePaged
    uid: azure.mgmt.cosmosdb.models.SqlDatabasePaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.SqlDatabase
    name: SqlDatabase
    uid: azure.mgmt.cosmosdb.models.SqlDatabase
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.SqlDatabasePaged[azure.mgmt.cosmosdb.models.SqlDatabase]
- fullName: azure.mgmt.cosmosdb.models.TablePaged[azure.mgmt.cosmosdb.models.Table]
  name: TablePaged[Table]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.TablePaged
    name: TablePaged
    uid: azure.mgmt.cosmosdb.models.TablePaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.Table
    name: Table
    uid: azure.mgmt.cosmosdb.models.Table
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.TablePaged[azure.mgmt.cosmosdb.models.Table]
- fullName: azure.mgmt.cosmosdb.models.UsagePaged[azure.mgmt.cosmosdb.models.Usage]
  name: UsagePaged[Usage]
  spec.python:
  - fullName: azure.mgmt.cosmosdb.models.UsagePaged
    name: UsagePaged
    uid: azure.mgmt.cosmosdb.models.UsagePaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.Usage
    name: Usage
    uid: azure.mgmt.cosmosdb.models.Usage
  - fullName: ']'
    name: ']'
  uid: azure.mgmt.cosmosdb.models.UsagePaged[azure.mgmt.cosmosdb.models.Usage]
- fullName: list[azure.mgmt.cosmosdb.models.Capability]
  name: list[Capability]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.Capability
    name: Capability
    uid: azure.mgmt.cosmosdb.models.Capability
  - fullName: ']'
    name: ']'
  uid: list[azure.mgmt.cosmosdb.models.Capability]
- fullName: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.Throughput]
  name: AzureOperationPoller[Throughput]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.Throughput
    name: Throughput
    uid: azure.mgmt.cosmosdb.models.Throughput
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[azure.mgmt.cosmosdb.models.Throughput]
- fullName: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.Throughput]]
  name: AzureOperationPoller[ClientRawResponse[Throughput]]
  spec.python:
  - fullName: msrestazure.azure_operation.AzureOperationPoller
    name: AzureOperationPoller
    uid: msrestazure.azure_operation.AzureOperationPoller
  - fullName: '['
    name: '['
  - fullName: msrest.pipeline.ClientRawResponse
    name: ClientRawResponse
    uid: msrest.pipeline.ClientRawResponse
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.cosmosdb.models.Throughput
    name: Throughput
    uid: azure.mgmt.cosmosdb.models.Throughput
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: msrestazure.azure_operation.AzureOperationPoller[msrest.pipeline.ClientRawResponse[azure.mgmt.cosmosdb.models.Throughput]]
