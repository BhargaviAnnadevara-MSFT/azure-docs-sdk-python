### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cognitiveservices.inkrecognizer.Line.alternates
  - azure.cognitiveservices.inkrecognizer.Line.bullet
  - azure.cognitiveservices.inkrecognizer.Line.recognized_text
  - azure.cognitiveservices.inkrecognizer.Line.words
  class: azure.cognitiveservices.inkrecognizer.Line
  fullName: azure.cognitiveservices.inkrecognizer.Line
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.cognitiveservices.inkrecognizer._models.InkRecognitionUnit
  langs:
  - python
  module: azure.cognitiveservices.inkrecognizer
  name: Line
  summary: 'A Line instance represents the collection of one or more ink strokes that

    were recognized as a line.'
  syntax:
    content: Line(json_object)
  type: class
  uid: azure.cognitiveservices.inkrecognizer.Line
- class: azure.cognitiveservices.inkrecognizer.Line
  fullName: azure.cognitiveservices.inkrecognizer.Line.alternates
  langs:
  - python
  module: azure.cognitiveservices.inkrecognizer
  name: alternates
  summary: A list of alternate strings reported by the service.
  syntax:
    return:
      type:
      - List[str]
  type: attribute
  uid: azure.cognitiveservices.inkrecognizer.Line.alternates
- class: azure.cognitiveservices.inkrecognizer.Line
  fullName: azure.cognitiveservices.inkrecognizer.Line.bullet
  langs:
  - python
  module: azure.cognitiveservices.inkrecognizer
  name: bullet
  summary: 'If the line has a bullet, return it as InkBullet. Otherwise, return None.

    One line can have at most one bullet.'
  syntax:
    return:
      type:
      - InkBullet
      - None
  type: attribute
  uid: azure.cognitiveservices.inkrecognizer.Line.bullet
- class: azure.cognitiveservices.inkrecognizer.Line
  fullName: azure.cognitiveservices.inkrecognizer.Line.recognized_text
  langs:
  - python
  module: azure.cognitiveservices.inkrecognizer
  name: recognized_text
  summary: 'The recognized string of the line. If the words in the line are not

    recognized, an empty string is returned.'
  syntax:
    return:
      type:
      - str
  type: attribute
  uid: azure.cognitiveservices.inkrecognizer.Line.recognized_text
- class: azure.cognitiveservices.inkrecognizer.Line
  fullName: azure.cognitiveservices.inkrecognizer.Line.words
  langs:
  - python
  module: azure.cognitiveservices.inkrecognizer
  name: words
  summary: All the words in this line.
  syntax:
    return:
      type:
      - List[InkWord]
  type: attribute
  uid: azure.cognitiveservices.inkrecognizer.Line.words
references:
- fullName: azure.cognitiveservices.inkrecognizer.Line.alternates
  isExternal: false
  name: alternates
  parent: azure.cognitiveservices.inkrecognizer.Line
  uid: azure.cognitiveservices.inkrecognizer.Line.alternates
- fullName: azure.cognitiveservices.inkrecognizer.Line.bullet
  isExternal: false
  name: bullet
  parent: azure.cognitiveservices.inkrecognizer.Line
  uid: azure.cognitiveservices.inkrecognizer.Line.bullet
- fullName: azure.cognitiveservices.inkrecognizer.Line.recognized_text
  isExternal: false
  name: recognized_text
  parent: azure.cognitiveservices.inkrecognizer.Line
  uid: azure.cognitiveservices.inkrecognizer.Line.recognized_text
- fullName: azure.cognitiveservices.inkrecognizer.Line.words
  isExternal: false
  name: words
  parent: azure.cognitiveservices.inkrecognizer.Line
  uid: azure.cognitiveservices.inkrecognizer.Line.words
- fullName: List[str]
  name: List[str]
  spec.python:
  - fullName: List
    name: List
    uid: List
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: List[str]
- fullName: List[InkWord]
  name: List[InkWord]
  spec.python:
  - fullName: List
    name: List
    uid: List
  - fullName: '['
    name: '['
  - fullName: InkWord
    name: InkWord
    uid: InkWord
  - fullName: ']'
    name: ']'
  uid: List[InkWord]
