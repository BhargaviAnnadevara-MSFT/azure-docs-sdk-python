### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.cognitiveservices.inkrecognizer.InkDrawing.alternates
  - azure.cognitiveservices.inkrecognizer.InkDrawing.center
  - azure.cognitiveservices.inkrecognizer.InkDrawing.confidence
  - azure.cognitiveservices.inkrecognizer.InkDrawing.points
  - azure.cognitiveservices.inkrecognizer.InkDrawing.recognized_shape
  - azure.cognitiveservices.inkrecognizer.InkDrawing.rotated_angle
  class: azure.cognitiveservices.inkrecognizer.InkDrawing
  fullName: azure.cognitiveservices.inkrecognizer.InkDrawing
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.cognitiveservices.inkrecognizer._models.InkRecognitionUnit
  langs:
  - python
  module: azure.cognitiveservices.inkrecognizer
  name: InkDrawing
  summary: 'An InkDrawing instance represents the collection of one or more ink strokes

    that were recognized as a drawing/shape.'
  syntax:
    content: InkDrawing(json_object)
  type: class
  uid: azure.cognitiveservices.inkrecognizer.InkDrawing
- class: azure.cognitiveservices.inkrecognizer.InkDrawing
  fullName: azure.cognitiveservices.inkrecognizer.InkDrawing.alternates
  langs:
  - python
  module: azure.cognitiveservices.inkrecognizer
  name: alternates
  summary: 'A list of alternate InkDrawings when the confidence isn''t 1.

    If this InkDrawing is an alternate, returns None.'
  syntax:
    return:
      type:
      - List[InkDrawing]
      - None
  type: attribute
  uid: azure.cognitiveservices.inkrecognizer.InkDrawing.alternates
- class: azure.cognitiveservices.inkrecognizer.InkDrawing
  fullName: azure.cognitiveservices.inkrecognizer.InkDrawing.center
  langs:
  - python
  module: azure.cognitiveservices.inkrecognizer
  name: center
  summary: 'The center point of the bounding box of the recognition

    unit as Point.'
  syntax:
    return:
      type:
      - Point
  type: attribute
  uid: azure.cognitiveservices.inkrecognizer.InkDrawing.center
- class: azure.cognitiveservices.inkrecognizer.InkDrawing
  fullName: azure.cognitiveservices.inkrecognizer.InkDrawing.confidence
  langs:
  - python
  module: azure.cognitiveservices.inkrecognizer
  name: confidence
  summary: 'A number between 0 and 1 which indicates the confidence level

    in the result.'
  syntax:
    return:
      type:
      - float
  type: attribute
  uid: azure.cognitiveservices.inkrecognizer.InkDrawing.confidence
- class: azure.cognitiveservices.inkrecognizer.InkDrawing
  fullName: azure.cognitiveservices.inkrecognizer.InkDrawing.points
  langs:
  - python
  module: azure.cognitiveservices.inkrecognizer
  name: points
  summary: 'A list of Point instances that represent points that are relevant to

    the type of recognition unit. For example, for a leaf node of inkDrawing

    kind that represents a triangle, points would include the x,y

    coordinates of the vertices of the recognized triangle. The points

    represent the coordinates of points used to create the perfectly drawn

    shape that is closest to the original input. They may not exactly match.'
  syntax:
    return:
      type:
      - List[Point]
  type: attribute
  uid: azure.cognitiveservices.inkrecognizer.InkDrawing.points
- class: azure.cognitiveservices.inkrecognizer.InkDrawing
  fullName: azure.cognitiveservices.inkrecognizer.InkDrawing.recognized_shape
  langs:
  - python
  module: azure.cognitiveservices.inkrecognizer
  name: recognized_shape
  summary: 'The ShapeKind enum representing the geometric shape that was

    recognized. If the drawing isn''t one of the known geometric shapes,

    an ShapeKind.DRAWING is returned.'
  syntax:
    return:
      type:
      - ShapeKind
  type: attribute
  uid: azure.cognitiveservices.inkrecognizer.InkDrawing.recognized_shape
- class: azure.cognitiveservices.inkrecognizer.InkDrawing
  fullName: azure.cognitiveservices.inkrecognizer.InkDrawing.rotated_angle
  langs:
  - python
  module: azure.cognitiveservices.inkrecognizer
  name: rotated_angle
  summary: The angular orientation of an object relative to the horizontal axis.
  syntax:
    return:
      type:
      - float
  type: attribute
  uid: azure.cognitiveservices.inkrecognizer.InkDrawing.rotated_angle
references:
- fullName: azure.cognitiveservices.inkrecognizer.InkDrawing.alternates
  isExternal: false
  name: alternates
  parent: azure.cognitiveservices.inkrecognizer.InkDrawing
  uid: azure.cognitiveservices.inkrecognizer.InkDrawing.alternates
- fullName: azure.cognitiveservices.inkrecognizer.InkDrawing.center
  isExternal: false
  name: center
  parent: azure.cognitiveservices.inkrecognizer.InkDrawing
  uid: azure.cognitiveservices.inkrecognizer.InkDrawing.center
- fullName: azure.cognitiveservices.inkrecognizer.InkDrawing.confidence
  isExternal: false
  name: confidence
  parent: azure.cognitiveservices.inkrecognizer.InkDrawing
  uid: azure.cognitiveservices.inkrecognizer.InkDrawing.confidence
- fullName: azure.cognitiveservices.inkrecognizer.InkDrawing.points
  isExternal: false
  name: points
  parent: azure.cognitiveservices.inkrecognizer.InkDrawing
  uid: azure.cognitiveservices.inkrecognizer.InkDrawing.points
- fullName: azure.cognitiveservices.inkrecognizer.InkDrawing.recognized_shape
  isExternal: false
  name: recognized_shape
  parent: azure.cognitiveservices.inkrecognizer.InkDrawing
  uid: azure.cognitiveservices.inkrecognizer.InkDrawing.recognized_shape
- fullName: azure.cognitiveservices.inkrecognizer.InkDrawing.rotated_angle
  isExternal: false
  name: rotated_angle
  parent: azure.cognitiveservices.inkrecognizer.InkDrawing
  uid: azure.cognitiveservices.inkrecognizer.InkDrawing.rotated_angle
- fullName: List[InkDrawing]
  name: List[InkDrawing]
  spec.python:
  - fullName: List
    name: List
    uid: List
  - fullName: '['
    name: '['
  - fullName: InkDrawing
    name: InkDrawing
    uid: InkDrawing
  - fullName: ']'
    name: ']'
  uid: List[InkDrawing]
- fullName: List[Point]
  name: List[Point]
  spec.python:
  - fullName: List
    name: List
    uid: List
  - fullName: '['
    name: '['
  - fullName: Point
    name: Point
    uid: Point
  - fullName: ']'
    name: ']'
  uid: List[Point]
