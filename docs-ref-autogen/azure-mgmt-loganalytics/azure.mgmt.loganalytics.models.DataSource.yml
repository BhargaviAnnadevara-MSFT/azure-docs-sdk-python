### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.loganalytics.models.DataSource
  fullName: azure.mgmt.loganalytics.models.DataSource
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.loganalytics.models.proxy_resource_py3.ProxyResource
  langs:
  - python
  module: azure.mgmt.loganalytics.models
  name: DataSource
  summary: 'Datasources under OMS Workspace.


    Variables are only populated by the server, and will be ignored when

    sending a request.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'DataSource(*, properties, kind, tags=None, e_tag: str = None, **kwargs)
      -> None'
    parameters:
    - description: Resource tags
      id: tags
      type:
      - dict[str, str]
    - description: 'Required. The data source properties in raw json

        format, each kind of data source have it''s own schema.'
      id: properties
      type:
      - object
    - description: The ETag of the data source.
      id: e_tag
      type:
      - str
    - description: 'Required. Possible values include: ''AzureActivityLog'',

        ''ChangeTrackingPath'', ''ChangeTrackingDefaultPath'',

        ''ChangeTrackingDefaultRegistry'', ''ChangeTrackingCustomRegistry'',

        ''CustomLog'', ''CustomLogCollection'', ''GenericDataSource'', ''IISLogs'',

        ''LinuxPerformanceObject'', ''LinuxPerformanceCollection'', ''LinuxSyslog'',

        ''LinuxSyslogCollection'', ''WindowsEvent'', ''WindowsPerformanceCounter'''
      id: kind
      type:
      - str
      - azure.mgmt.loganalytics.models.DataSourceKind
    variables:
    - description: Resource ID.
      id: id
      type:
      - str
    - description: Resource name.
      id: name
      type:
      - str
    - description: Resource type.
      id: type
      type:
      - str
  type: class
  uid: azure.mgmt.loganalytics.models.DataSource
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
