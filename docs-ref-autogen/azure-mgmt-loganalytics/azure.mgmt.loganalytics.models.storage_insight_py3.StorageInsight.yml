### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.loganalytics.models.storage_insight_py3.StorageInsight
  fullName: azure.mgmt.loganalytics.models.storage_insight_py3.StorageInsight
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.loganalytics.models.proxy_resource_py3.ProxyResource
  langs:
  - python
  module: azure.mgmt.loganalytics.models.storage_insight_py3
  name: StorageInsight
  summary: 'The top level storage insight resource container.


    Variables are only populated by the server, and will be ignored when

    sending a request.


    All required parameters must be populated in order to send to Azure.'
  syntax:
    content: 'StorageInsight(*, storage_account, tags=None, containers=None, tables=None,
      e_tag: str = None, **kwargs) -> None'
    parameters:
    - description: Resource tags
      id: tags
      type:
      - dict[str, str]
    - description: 'The names of the blob containers that the workspace

        should read'
      id: containers
      type:
      - list[str]
    - description: 'The names of the Azure tables that the workspace should

        read'
      id: tables
      type:
      - list[str]
    - description: Required. The storage account connection details
      id: storage_account
      type:
      - azure.mgmt.loganalytics.models.StorageAccount
    - description: The ETag of the storage insight.
      id: e_tag
      type:
      - str
    variables:
    - description: Resource ID.
      id: id
      type:
      - str
    - description: Resource name.
      id: name
      type:
      - str
    - description: Resource type.
      id: type
      type:
      - str
    - description: The status of the storage insight
      id: status
      type:
      - azure.mgmt.loganalytics.models.StorageInsightStatus
  type: class
  uid: azure.mgmt.loganalytics.models.storage_insight_py3.StorageInsight
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
