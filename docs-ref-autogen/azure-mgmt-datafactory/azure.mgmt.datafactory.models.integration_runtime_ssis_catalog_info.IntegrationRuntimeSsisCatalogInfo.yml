### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.datafactory.models.integration_runtime_ssis_catalog_info.IntegrationRuntimeSsisCatalogInfo
  fullName: azure.mgmt.datafactory.models.integration_runtime_ssis_catalog_info.IntegrationRuntimeSsisCatalogInfo
  inheritance:
  - inheritance:
    - type: builtins.object
    type: msrest.serialization.Model
  langs:
  - python
  module: azure.mgmt.datafactory.models.integration_runtime_ssis_catalog_info
  name: IntegrationRuntimeSsisCatalogInfo
  summary: Catalog information for managed dedicated integration runtime.
  syntax:
    content: IntegrationRuntimeSsisCatalogInfo(**kwargs)
    parameters:
    - description: 'Unmatched properties from the message are

        deserialized this collection'
      id: additional_properties
      type:
      - dict[str, object]
    - description: The catalog database server URL.
      id: catalog_server_endpoint
      type:
      - str
    - description: 'The administrator user name of catalog

        database.'
      id: catalog_admin_user_name
      type:
      - str
    - description: 'The password of the administrator user

        account of the catalog database.'
      id: catalog_admin_password
      type:
      - azure.mgmt.datafactory.models.SecureString
    - description: 'The pricing tier for the catalog database.

        The valid values could be found in

        [https://azure.microsoft.com/en-us/pricing/details/sql-database/](https://azure.microsoft.com/en-us/pricing/details/sql-database/).
        Possible

        values include: ''Basic'', ''Standard'', ''Premium'', ''PremiumRS'''
      id: catalog_pricing_tier
      type:
      - str
      - azure.mgmt.datafactory.models.IntegrationRuntimeSsisCatalogPricingTier
  type: class
  uid: azure.mgmt.datafactory.models.integration_runtime_ssis_catalog_info.IntegrationRuntimeSsisCatalogInfo
references:
- fullName: dict[str, object]
  name: dict[str, object]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: object
    name: object
    uid: object
  - fullName: ']'
    name: ']'
  uid: dict[str, object]
