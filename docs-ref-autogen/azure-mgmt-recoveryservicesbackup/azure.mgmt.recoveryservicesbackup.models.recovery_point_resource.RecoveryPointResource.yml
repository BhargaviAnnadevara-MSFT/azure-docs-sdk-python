### YamlMime:UniversalReference
api_name: []
items:
- children: []
  class: azure.mgmt.recoveryservicesbackup.models.recovery_point_resource.RecoveryPointResource
  fullName: azure.mgmt.recoveryservicesbackup.models.recovery_point_resource.RecoveryPointResource
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: msrest.serialization.Model
    type: azure.mgmt.recoveryservicesbackup.models.resource.Resource
  langs:
  - python
  module: azure.mgmt.recoveryservicesbackup.models.recovery_point_resource
  name: RecoveryPointResource
  summary: 'Base class for backup copies. Workload-specific backup copies are derived

    from this class.


    Variables are only populated by the server, and will be ignored when

    sending a request.'
  syntax:
    content: RecoveryPointResource(**kwargs)
    parameters:
    - description: Resource location.
      id: location
      type:
      - str
    - description: Resource tags.
      id: tags
      type:
      - dict[str, str]
    - description: Optional ETag.
      id: e_tag
      type:
      - str
    - description: RecoveryPointResource properties
      id: properties
      type:
      - azure.mgmt.recoveryservicesbackup.models.RecoveryPoint
    variables:
    - description: Resource Id represents the complete path to the resource.
      id: id
      type:
      - str
    - description: Resource name associated with the resource.
      id: name
      type:
      - str
    - description: 'Resource type represents the complete path of the form

        Namespace/ResourceType/ResourceType/...'
      id: type
      type:
      - str
  type: class
  uid: azure.mgmt.recoveryservicesbackup.models.recovery_point_resource.RecoveryPointResource
references:
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
