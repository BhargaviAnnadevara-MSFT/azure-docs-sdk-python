### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_create_or_update
  - azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_delete
  - azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_query
  - azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_start
  - azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_stop
  - azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.get
  - azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.list
  - azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.models
  class: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations
  fullName: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.network.v2018_07_01.aio.operations_async
  name: ConnectionMonitorsOperations
  summary: 'ConnectionMonitorsOperations async operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: ConnectionMonitorsOperations(client, config, serializer, deserializer)
      -> None
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations
- class: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_create_or_update
  langs:
  - python
  module: azure.mgmt.network.v2018_07_01.aio.operations_async
  name: 'begin_create_or_update(resource_group_name: str, network_watcher_name: str,
    connection_monitor_name: str, parameters: azure.mgmt.network.v2018_07_01.models._models_py3.ConnectionMonitor,
    **kwargs) -> azure.mgmt.network.v2018_07_01.models._models_py3.ConnectionMonitorResult'
  namewithoutparameters: begin_create_or_update
  summary: Create or update a connection monitor.
  syntax:
    content: 'begin_create_or_update(resource_group_name: str, network_watcher_name:
      str, connection_monitor_name: str, parameters: azure.mgmt.network.v2018_07_01.models._models_py3.ConnectionMonitor,
      **kwargs) -> azure.mgmt.network.v2018_07_01.models._models_py3.ConnectionMonitorResult'
    parameters:
    - description: The name of the resource group containing Network Watcher.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the Network Watcher resource.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: The name of the connection monitor.
      id: connection_monitor_name
      isRequired: true
      type:
      - str
    - description: Parameters that define the operation to create a connection monitor.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2018_07_01.models.ConnectionMonitor
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: ConnectionMonitorResult, or the result of cls(response)
      type:
      - azure.mgmt.network.v2018_07_01.models.ConnectionMonitorResult
  type: method
  uid: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_create_or_update
- class: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_delete
  langs:
  - python
  module: azure.mgmt.network.v2018_07_01.aio.operations_async
  name: 'begin_delete(resource_group_name: str, network_watcher_name: str, connection_monitor_name:
    str, **kwargs) -> None'
  namewithoutparameters: begin_delete
  summary: Deletes the specified connection monitor.
  syntax:
    content: 'begin_delete(resource_group_name: str, network_watcher_name: str, connection_monitor_name:
      str, **kwargs) -> None'
    parameters:
    - description: The name of the resource group containing Network Watcher.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the Network Watcher resource.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: The name of the connection monitor.
      id: connection_monitor_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_delete
- class: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_query
  langs:
  - python
  module: azure.mgmt.network.v2018_07_01.aio.operations_async
  name: 'begin_query(resource_group_name: str, network_watcher_name: str, connection_monitor_name:
    str, **kwargs) -> azure.mgmt.network.v2018_07_01.models._models_py3.ConnectionMonitorQueryResult'
  namewithoutparameters: begin_query
  summary: Query a snapshot of the most recent connection states.
  syntax:
    content: 'begin_query(resource_group_name: str, network_watcher_name: str, connection_monitor_name:
      str, **kwargs) -> azure.mgmt.network.v2018_07_01.models._models_py3.ConnectionMonitorQueryResult'
    parameters:
    - description: The name of the resource group containing Network Watcher.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the Network Watcher resource.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: The name given to the connection monitor.
      id: connection_monitor_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: ConnectionMonitorQueryResult, or the result of cls(response)
      type:
      - azure.mgmt.network.v2018_07_01.models.ConnectionMonitorQueryResult
  type: method
  uid: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_query
- class: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_start
  langs:
  - python
  module: azure.mgmt.network.v2018_07_01.aio.operations_async
  name: 'begin_start(resource_group_name: str, network_watcher_name: str, connection_monitor_name:
    str, **kwargs) -> None'
  namewithoutparameters: begin_start
  summary: Starts the specified connection monitor.
  syntax:
    content: 'begin_start(resource_group_name: str, network_watcher_name: str, connection_monitor_name:
      str, **kwargs) -> None'
    parameters:
    - description: The name of the resource group containing Network Watcher.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the Network Watcher resource.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: The name of the connection monitor.
      id: connection_monitor_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_start
- class: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_stop
  langs:
  - python
  module: azure.mgmt.network.v2018_07_01.aio.operations_async
  name: 'begin_stop(resource_group_name: str, network_watcher_name: str, connection_monitor_name:
    str, **kwargs) -> None'
  namewithoutparameters: begin_stop
  summary: Stops the specified connection monitor.
  syntax:
    content: 'begin_stop(resource_group_name: str, network_watcher_name: str, connection_monitor_name:
      str, **kwargs) -> None'
    parameters:
    - description: The name of the resource group containing Network Watcher.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the Network Watcher resource.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: The name of the connection monitor.
      id: connection_monitor_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_stop
- class: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations
  fullName: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.get
  langs:
  - python
  module: azure.mgmt.network.v2018_07_01.aio.operations_async
  name: 'get(resource_group_name: str, network_watcher_name: str, connection_monitor_name:
    str, **kwargs) -> azure.mgmt.network.v2018_07_01.models._models_py3.ConnectionMonitorResult'
  namewithoutparameters: get
  summary: Gets a connection monitor by name.
  syntax:
    content: 'get(resource_group_name: str, network_watcher_name: str, connection_monitor_name:
      str, **kwargs) -> azure.mgmt.network.v2018_07_01.models._models_py3.ConnectionMonitorResult'
    parameters:
    - description: The name of the resource group containing Network Watcher.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the Network Watcher resource.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: The name of the connection monitor.
      id: connection_monitor_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: ConnectionMonitorResult, or the result of cls(response)
      type:
      - azure.mgmt.network.v2018_07_01.models.ConnectionMonitorResult
  type: method
  uid: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.get
- class: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations
  fullName: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.list
  langs:
  - python
  module: azure.mgmt.network.v2018_07_01.aio.operations_async
  name: 'list(resource_group_name: str, network_watcher_name: str, **kwargs) -> typing.AsyncIterable[ForwardRef(''models.ConnectionMonitorListResult'')]'
  namewithoutparameters: list
  summary: Lists all connection monitors for the specified Network Watcher.
  syntax:
    content: 'list(resource_group_name: str, network_watcher_name: str, **kwargs)
      -> typing.AsyncIterable[ForwardRef(''models.ConnectionMonitorListResult'')]'
    parameters:
    - description: The name of the resource group containing Network Watcher.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the Network Watcher resource.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either ConnectionMonitorListResult
        or the result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2018_07_01.models.ConnectionMonitorListResult]
  type: method
  uid: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.list
- class: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations
  fullName: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.models
  langs:
  - python
  module: azure.mgmt.network.v2018_07_01.aio.operations_async
  name: models
  syntax:
    content: models = <module 'azure.mgmt.network.v2018_07_01.models' from 'c:\\repo\\venv\\lib\\site-packages\\azure\\mgmt\\network\\v2018_07_01\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.models
references:
- fullName: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_create_or_update
  isExternal: false
  name: 'begin_create_or_update(resource_group_name: str, network_watcher_name: str,
    connection_monitor_name: str, parameters: azure.mgmt.network.v2018_07_01.models._models_py3.ConnectionMonitor,
    **kwargs) -> azure.mgmt.network.v2018_07_01.models._models_py3.ConnectionMonitorResult'
  parent: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations
  uid: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_create_or_update
- fullName: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_delete
  isExternal: false
  name: 'begin_delete(resource_group_name: str, network_watcher_name: str, connection_monitor_name:
    str, **kwargs) -> None'
  parent: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations
  uid: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_delete
- fullName: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_query
  isExternal: false
  name: 'begin_query(resource_group_name: str, network_watcher_name: str, connection_monitor_name:
    str, **kwargs) -> azure.mgmt.network.v2018_07_01.models._models_py3.ConnectionMonitorQueryResult'
  parent: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations
  uid: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_query
- fullName: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_start
  isExternal: false
  name: 'begin_start(resource_group_name: str, network_watcher_name: str, connection_monitor_name:
    str, **kwargs) -> None'
  parent: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations
  uid: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_start
- fullName: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_stop
  isExternal: false
  name: 'begin_stop(resource_group_name: str, network_watcher_name: str, connection_monitor_name:
    str, **kwargs) -> None'
  parent: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations
  uid: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.begin_stop
- fullName: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.get
  isExternal: false
  name: 'get(resource_group_name: str, network_watcher_name: str, connection_monitor_name:
    str, **kwargs) -> azure.mgmt.network.v2018_07_01.models._models_py3.ConnectionMonitorResult'
  parent: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations
  uid: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.get
- fullName: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.list
  isExternal: false
  name: 'list(resource_group_name: str, network_watcher_name: str, **kwargs) -> typing.AsyncIterable[ForwardRef(''models.ConnectionMonitorListResult'')]'
  parent: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations
  uid: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.list
- fullName: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations
  uid: azure.mgmt.network.v2018_07_01.aio.operations_async.ConnectionMonitorsOperations.models
- fullName: azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2018_07_01.models.ConnectionMonitorListResult]
  name: AsyncItemPaged[ConnectionMonitorListResult]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.network.v2018_07_01.models.ConnectionMonitorListResult
    name: ConnectionMonitorListResult
    uid: azure.mgmt.network.v2018_07_01.models.ConnectionMonitorListResult
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2018_07_01.models.ConnectionMonitorListResult]
