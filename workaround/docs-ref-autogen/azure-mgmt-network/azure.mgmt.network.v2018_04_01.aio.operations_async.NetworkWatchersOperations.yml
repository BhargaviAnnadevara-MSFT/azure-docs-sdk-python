### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_check_connectivity
  - azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_delete
  - azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_azure_reachability_report
  - azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_flow_log_status
  - azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_next_hop
  - azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_troubleshooting
  - azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_troubleshooting_result
  - azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_vm_security_rules
  - azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_list_available_providers
  - azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_set_flow_log_configuration
  - azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_verify_ip_flow
  - azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.create_or_update
  - azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.get
  - azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.get_topology
  - azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.list
  - azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.list_all
  - azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.update_tags
  - azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.models
  class: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.network.v2018_04_01.aio.operations_async
  name: NetworkWatchersOperations
  summary: 'NetworkWatchersOperations async operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: NetworkWatchersOperations(client, config, serializer, deserializer) ->
      None
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
- class: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_check_connectivity
  langs:
  - python
  module: azure.mgmt.network.v2018_04_01.aio.operations_async
  name: 'begin_check_connectivity(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.ConnectivityParameters,
    **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.ConnectivityInformation'
  namewithoutparameters: begin_check_connectivity
  summary: "Verifies the possibility of establishing a direct TCP connection from\
    \ a virtual machine to a\ngiven endpoint including another VM or an arbitrary\
    \ remote server.\n\n   param resource_group_name:\n      The name of the network\
    \ watcher resource group.\n\n   type resource_group_name:\n      str\n\n   param\
    \ network_watcher_name:\n      The name of the network watcher resource.\n\n \
    \  type network_watcher_name:\n      str\n\n   param parameters:\n      Parameters\
    \ that determine how the connectivity check will be performed.\n\n   type parameters:\n\
    \      ~azure.mgmt.network.v2018_04_01.models.ConnectivityParameters\n\n   keyword\
    \ callable cls:\n      A custom type or function that will be passed the direct\
    \ response\n\n   keyword str continuation_token:\n      A continuation token to\
    \ restart a poller from a saved state.\n\n   keyword polling:\n      True for\
    \ ARMPolling, False for no polling, or a\n      polling object for personal polling\
    \ strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.AsyncPollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  ConnectivityInformation, or the result of cls(response)\n\n   rtype:\n    \
    \  ~azure.mgmt.network.v2018_04_01.models.ConnectivityInformation\n\n   raises\
    \ ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: 'begin_check_connectivity(resource_group_name: str, network_watcher_name:
      str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.ConnectivityParameters,
      **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.ConnectivityInformation'
  type: method
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_check_connectivity
- class: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_delete
  langs:
  - python
  module: azure.mgmt.network.v2018_04_01.aio.operations_async
  name: 'begin_delete(resource_group_name: str, network_watcher_name: str, **kwargs)
    -> None'
  namewithoutparameters: begin_delete
  summary: Deletes the specified network watcher resource.
  syntax:
    content: 'begin_delete(resource_group_name: str, network_watcher_name: str, **kwargs)
      -> None'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_delete
- class: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_azure_reachability_report
  langs:
  - python
  module: azure.mgmt.network.v2018_04_01.aio.operations_async
  name: 'begin_get_azure_reachability_report(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.AzureReachabilityReportParameters,
    **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.AzureReachabilityReport'
  namewithoutparameters: begin_get_azure_reachability_report
  summary: "Gets the relative latency score for internet service providers from a\
    \ specified location to\nAzure regions.\n\n   param resource_group_name:\n   \
    \   The name of the network watcher resource group.\n\n   type resource_group_name:\n\
    \      str\n\n   param network_watcher_name:\n      The name of the network watcher\
    \ resource.\n\n   type network_watcher_name:\n      str\n\n   param parameters:\n\
    \      Parameters that determine Azure reachability report configuration.\n\n\
    \   type parameters:\n      ~azure.mgmt.network.v2018_04_01.models.AzureReachabilityReportParameters\n\
    \n   keyword callable cls:\n      A custom type or function that will be passed\
    \ the direct response\n\n   keyword str continuation_token:\n      A continuation\
    \ token to restart a poller from a saved state.\n\n   keyword polling:\n     \
    \ True for ARMPolling, False for no polling, or a\n      polling object for personal\
    \ polling strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.AsyncPollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  AzureReachabilityReport, or the result of cls(response)\n\n   rtype:\n    \
    \  ~azure.mgmt.network.v2018_04_01.models.AzureReachabilityReport\n\n   raises\
    \ ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: 'begin_get_azure_reachability_report(resource_group_name: str, network_watcher_name:
      str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.AzureReachabilityReportParameters,
      **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.AzureReachabilityReport'
  type: method
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_azure_reachability_report
- class: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_flow_log_status
  langs:
  - python
  module: azure.mgmt.network.v2018_04_01.aio.operations_async
  name: 'begin_get_flow_log_status(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.FlowLogStatusParameters,
    **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.FlowLogInformation'
  namewithoutparameters: begin_get_flow_log_status
  summary: "Queries status of flow log and traffic analytics (optional) on a specified\
    \ resource.\n\n   param resource_group_name:\n      The name of the network watcher\
    \ resource group.\n\n   type resource_group_name:\n      str\n\n   param network_watcher_name:\n\
    \      The name of the network watcher resource.\n\n   type network_watcher_name:\n\
    \      str\n\n   param parameters:\n      Parameters that define a resource to\
    \ query flow log and traffic analytics\n\n\n(optional)  status.\n   type parameters:\n\
    \      ~azure.mgmt.network.v2018_04_01.models.FlowLogStatusParameters\n\n   keyword\
    \ callable cls:\n      A custom type or function that will be passed the direct\
    \ response\n\n   keyword str continuation_token:\n      A continuation token to\
    \ restart a poller from a saved state.\n\n   keyword polling:\n      True for\
    \ ARMPolling, False for no polling, or a\n      polling object for personal polling\
    \ strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.AsyncPollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  FlowLogInformation, or the result of cls(response)\n\n   rtype:\n      ~azure.mgmt.network.v2018_04_01.models.FlowLogInformation\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: 'begin_get_flow_log_status(resource_group_name: str, network_watcher_name:
      str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.FlowLogStatusParameters,
      **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.FlowLogInformation'
  type: method
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_flow_log_status
- class: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_next_hop
  langs:
  - python
  module: azure.mgmt.network.v2018_04_01.aio.operations_async
  name: 'begin_get_next_hop(resource_group_name: str, network_watcher_name: str, parameters:
    azure.mgmt.network.v2018_04_01.models._models_py3.NextHopParameters, **kwargs)
    -> azure.mgmt.network.v2018_04_01.models._models_py3.NextHopResult'
  namewithoutparameters: begin_get_next_hop
  summary: Gets the next hop from the specified VM.
  syntax:
    content: 'begin_get_next_hop(resource_group_name: str, network_watcher_name: str,
      parameters: azure.mgmt.network.v2018_04_01.models._models_py3.NextHopParameters,
      **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.NextHopResult'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that define the source and destination endpoint.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2018_04_01.models.NextHopParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: NextHopResult, or the result of cls(response)
      type:
      - azure.mgmt.network.v2018_04_01.models.NextHopResult
  type: method
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_next_hop
- class: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_troubleshooting
  langs:
  - python
  module: azure.mgmt.network.v2018_04_01.aio.operations_async
  name: 'begin_get_troubleshooting(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.TroubleshootingParameters,
    **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.TroubleshootingResult'
  namewithoutparameters: begin_get_troubleshooting
  summary: Initiate troubleshooting on a specified resource.
  syntax:
    content: 'begin_get_troubleshooting(resource_group_name: str, network_watcher_name:
      str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.TroubleshootingParameters,
      **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.TroubleshootingResult'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher resource.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that define the resource to troubleshoot.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2018_04_01.models.TroubleshootingParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: TroubleshootingResult, or the result of cls(response)
      type:
      - azure.mgmt.network.v2018_04_01.models.TroubleshootingResult
  type: method
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_troubleshooting
- class: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_troubleshooting_result
  langs:
  - python
  module: azure.mgmt.network.v2018_04_01.aio.operations_async
  name: 'begin_get_troubleshooting_result(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.QueryTroubleshootingParameters,
    **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.TroubleshootingResult'
  namewithoutparameters: begin_get_troubleshooting_result
  summary: Get the last completed troubleshooting result on a specified resource.
  syntax:
    content: 'begin_get_troubleshooting_result(resource_group_name: str, network_watcher_name:
      str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.QueryTroubleshootingParameters,
      **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.TroubleshootingResult'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher resource.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that define the resource to query the troubleshooting
        result.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2018_04_01.models.QueryTroubleshootingParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: TroubleshootingResult, or the result of cls(response)
      type:
      - azure.mgmt.network.v2018_04_01.models.TroubleshootingResult
  type: method
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_troubleshooting_result
- class: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_vm_security_rules
  langs:
  - python
  module: azure.mgmt.network.v2018_04_01.aio.operations_async
  name: 'begin_get_vm_security_rules(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.SecurityGroupViewParameters,
    **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.SecurityGroupViewResult'
  namewithoutparameters: begin_get_vm_security_rules
  summary: Gets the configured and effective security group rules on the specified
    VM.
  syntax:
    content: 'begin_get_vm_security_rules(resource_group_name: str, network_watcher_name:
      str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.SecurityGroupViewParameters,
      **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.SecurityGroupViewResult'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that define the VM to check security groups for.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2018_04_01.models.SecurityGroupViewParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: SecurityGroupViewResult, or the result of cls(response)
      type:
      - azure.mgmt.network.v2018_04_01.models.SecurityGroupViewResult
  type: method
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_vm_security_rules
- class: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_list_available_providers
  langs:
  - python
  module: azure.mgmt.network.v2018_04_01.aio.operations_async
  name: 'begin_list_available_providers(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.AvailableProvidersListParameters,
    **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.AvailableProvidersList'
  namewithoutparameters: begin_list_available_providers
  summary: Lists all available internet service providers for a specified Azure region.
  syntax:
    content: 'begin_list_available_providers(resource_group_name: str, network_watcher_name:
      str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.AvailableProvidersListParameters,
      **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.AvailableProvidersList'
    parameters:
    - description: The name of the network watcher resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher resource.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that scope the list of available providers.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2018_04_01.models.AvailableProvidersListParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: AvailableProvidersList, or the result of cls(response)
      type:
      - azure.mgmt.network.v2018_04_01.models.AvailableProvidersList
  type: method
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_list_available_providers
- class: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_set_flow_log_configuration
  langs:
  - python
  module: azure.mgmt.network.v2018_04_01.aio.operations_async
  name: 'begin_set_flow_log_configuration(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.FlowLogInformation,
    **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.FlowLogInformation'
  namewithoutparameters: begin_set_flow_log_configuration
  summary: Configures flow log  and traffic analytics (optional) on a specified resource.
  syntax:
    content: 'begin_set_flow_log_configuration(resource_group_name: str, network_watcher_name:
      str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.FlowLogInformation,
      **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.FlowLogInformation'
    parameters:
    - description: The name of the network watcher resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher resource.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that define the configuration of flow log.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2018_04_01.models.FlowLogInformation
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: FlowLogInformation, or the result of cls(response)
      type:
      - azure.mgmt.network.v2018_04_01.models.FlowLogInformation
  type: method
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_set_flow_log_configuration
- class: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_verify_ip_flow
  langs:
  - python
  module: azure.mgmt.network.v2018_04_01.aio.operations_async
  name: 'begin_verify_ip_flow(resource_group_name: str, network_watcher_name: str,
    parameters: azure.mgmt.network.v2018_04_01.models._models_py3.VerificationIPFlowParameters,
    **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.VerificationIPFlowResult'
  namewithoutparameters: begin_verify_ip_flow
  summary: Verify IP flow from the specified VM to a location given the currently
    configured NSG rules.
  syntax:
    content: 'begin_verify_ip_flow(resource_group_name: str, network_watcher_name:
      str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.VerificationIPFlowParameters,
      **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.VerificationIPFlowResult'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that define the IP flow to be verified.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2018_04_01.models.VerificationIPFlowParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: VerificationIPFlowResult, or the result of cls(response)
      type:
      - azure.mgmt.network.v2018_04_01.models.VerificationIPFlowResult
  type: method
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_verify_ip_flow
- class: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.create_or_update
  langs:
  - python
  module: azure.mgmt.network.v2018_04_01.aio.operations_async
  name: 'create_or_update(resource_group_name: str, network_watcher_name: str, parameters:
    azure.mgmt.network.v2018_04_01.models._models_py3.NetworkWatcher, **kwargs) ->
    azure.mgmt.network.v2018_04_01.models._models_py3.NetworkWatcher'
  namewithoutparameters: create_or_update
  summary: Creates or updates a network watcher in the specified resource group.
  syntax:
    content: 'create_or_update(resource_group_name: str, network_watcher_name: str,
      parameters: azure.mgmt.network.v2018_04_01.models._models_py3.NetworkWatcher,
      **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.NetworkWatcher'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that define the network watcher resource.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2018_04_01.models.NetworkWatcher
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: NetworkWatcher, or the result of cls(response)
      type:
      - azure.mgmt.network.v2018_04_01.models.NetworkWatcher
  type: method
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.create_or_update
- class: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.get
  langs:
  - python
  module: azure.mgmt.network.v2018_04_01.aio.operations_async
  name: 'get(resource_group_name: str, network_watcher_name: str, **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.NetworkWatcher'
  namewithoutparameters: get
  summary: Gets the specified network watcher by resource group.
  syntax:
    content: 'get(resource_group_name: str, network_watcher_name: str, **kwargs) ->
      azure.mgmt.network.v2018_04_01.models._models_py3.NetworkWatcher'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: NetworkWatcher, or the result of cls(response)
      type:
      - azure.mgmt.network.v2018_04_01.models.NetworkWatcher
  type: method
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.get
- class: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.get_topology
  langs:
  - python
  module: azure.mgmt.network.v2018_04_01.aio.operations_async
  name: 'get_topology(resource_group_name: str, network_watcher_name: str, parameters:
    azure.mgmt.network.v2018_04_01.models._models_py3.TopologyParameters, **kwargs)
    -> azure.mgmt.network.v2018_04_01.models._models_py3.Topology'
  namewithoutparameters: get_topology
  summary: Gets the current network topology by resource group.
  syntax:
    content: 'get_topology(resource_group_name: str, network_watcher_name: str, parameters:
      azure.mgmt.network.v2018_04_01.models._models_py3.TopologyParameters, **kwargs)
      -> azure.mgmt.network.v2018_04_01.models._models_py3.Topology'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters that define the representation of topology.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2018_04_01.models.TopologyParameters
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: Topology, or the result of cls(response)
      type:
      - azure.mgmt.network.v2018_04_01.models.Topology
  type: method
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.get_topology
- class: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.list
  langs:
  - python
  module: azure.mgmt.network.v2018_04_01.aio.operations_async
  name: 'list(resource_group_name: str, **kwargs) -> typing.AsyncIterable[ForwardRef(''models.NetworkWatcherListResult'')]'
  namewithoutparameters: list
  summary: Gets all network watchers by resource group.
  syntax:
    content: 'list(resource_group_name: str, **kwargs) -> typing.AsyncIterable[ForwardRef(''models.NetworkWatcherListResult'')]'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either NetworkWatcherListResult or
        the result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2018_04_01.models.NetworkWatcherListResult]
  type: method
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.list
- class: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.list_all
  langs:
  - python
  module: azure.mgmt.network.v2018_04_01.aio.operations_async
  name: list_all(**kwargs) -> typing.AsyncIterable[ForwardRef('models.NetworkWatcherListResult')]
  namewithoutparameters: list_all
  summary: Gets all network watchers by subscription.
  syntax:
    content: list_all(**kwargs) -> typing.AsyncIterable[ForwardRef('models.NetworkWatcherListResult')]
    parameters:
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either NetworkWatcherListResult or
        the result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2018_04_01.models.NetworkWatcherListResult]
  type: method
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.list_all
- class: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.update_tags
  langs:
  - python
  module: azure.mgmt.network.v2018_04_01.aio.operations_async
  name: 'update_tags(resource_group_name: str, network_watcher_name: str, parameters:
    azure.mgmt.network.v2018_04_01.models._models_py3.TagsObject, **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.NetworkWatcher'
  namewithoutparameters: update_tags
  summary: Updates a network watcher tags.
  syntax:
    content: 'update_tags(resource_group_name: str, network_watcher_name: str, parameters:
      azure.mgmt.network.v2018_04_01.models._models_py3.TagsObject, **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.NetworkWatcher'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the network watcher.
      id: network_watcher_name
      isRequired: true
      type:
      - str
    - description: Parameters supplied to update network watcher tags.
      id: parameters
      isRequired: true
      type:
      - azure.mgmt.network.v2018_04_01.models.TagsObject
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: NetworkWatcher, or the result of cls(response)
      type:
      - azure.mgmt.network.v2018_04_01.models.NetworkWatcher
  type: method
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.update_tags
- class: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.models
  langs:
  - python
  module: azure.mgmt.network.v2018_04_01.aio.operations_async
  name: models
  syntax:
    content: models = <module 'azure.mgmt.network.v2018_04_01.models' from 'c:\\repo\\venv\\lib\\site-packages\\azure\\mgmt\\network\\v2018_04_01\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.models
references:
- fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_check_connectivity
  isExternal: false
  name: 'begin_check_connectivity(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.ConnectivityParameters,
    **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.ConnectivityInformation'
  parent: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_check_connectivity
- fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_delete
  isExternal: false
  name: 'begin_delete(resource_group_name: str, network_watcher_name: str, **kwargs)
    -> None'
  parent: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_delete
- fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_azure_reachability_report
  isExternal: false
  name: 'begin_get_azure_reachability_report(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.AzureReachabilityReportParameters,
    **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.AzureReachabilityReport'
  parent: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_azure_reachability_report
- fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_flow_log_status
  isExternal: false
  name: 'begin_get_flow_log_status(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.FlowLogStatusParameters,
    **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.FlowLogInformation'
  parent: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_flow_log_status
- fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_next_hop
  isExternal: false
  name: 'begin_get_next_hop(resource_group_name: str, network_watcher_name: str, parameters:
    azure.mgmt.network.v2018_04_01.models._models_py3.NextHopParameters, **kwargs)
    -> azure.mgmt.network.v2018_04_01.models._models_py3.NextHopResult'
  parent: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_next_hop
- fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_troubleshooting
  isExternal: false
  name: 'begin_get_troubleshooting(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.TroubleshootingParameters,
    **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.TroubleshootingResult'
  parent: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_troubleshooting
- fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_troubleshooting_result
  isExternal: false
  name: 'begin_get_troubleshooting_result(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.QueryTroubleshootingParameters,
    **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.TroubleshootingResult'
  parent: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_troubleshooting_result
- fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_vm_security_rules
  isExternal: false
  name: 'begin_get_vm_security_rules(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.SecurityGroupViewParameters,
    **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.SecurityGroupViewResult'
  parent: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_get_vm_security_rules
- fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_list_available_providers
  isExternal: false
  name: 'begin_list_available_providers(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.AvailableProvidersListParameters,
    **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.AvailableProvidersList'
  parent: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_list_available_providers
- fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_set_flow_log_configuration
  isExternal: false
  name: 'begin_set_flow_log_configuration(resource_group_name: str, network_watcher_name:
    str, parameters: azure.mgmt.network.v2018_04_01.models._models_py3.FlowLogInformation,
    **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.FlowLogInformation'
  parent: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_set_flow_log_configuration
- fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_verify_ip_flow
  isExternal: false
  name: 'begin_verify_ip_flow(resource_group_name: str, network_watcher_name: str,
    parameters: azure.mgmt.network.v2018_04_01.models._models_py3.VerificationIPFlowParameters,
    **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.VerificationIPFlowResult'
  parent: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.begin_verify_ip_flow
- fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.create_or_update
  isExternal: false
  name: 'create_or_update(resource_group_name: str, network_watcher_name: str, parameters:
    azure.mgmt.network.v2018_04_01.models._models_py3.NetworkWatcher, **kwargs) ->
    azure.mgmt.network.v2018_04_01.models._models_py3.NetworkWatcher'
  parent: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.create_or_update
- fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.get
  isExternal: false
  name: 'get(resource_group_name: str, network_watcher_name: str, **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.NetworkWatcher'
  parent: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.get
- fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.get_topology
  isExternal: false
  name: 'get_topology(resource_group_name: str, network_watcher_name: str, parameters:
    azure.mgmt.network.v2018_04_01.models._models_py3.TopologyParameters, **kwargs)
    -> azure.mgmt.network.v2018_04_01.models._models_py3.Topology'
  parent: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.get_topology
- fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.list
  isExternal: false
  name: 'list(resource_group_name: str, **kwargs) -> typing.AsyncIterable[ForwardRef(''models.NetworkWatcherListResult'')]'
  parent: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.list
- fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.list_all
  isExternal: false
  name: list_all(**kwargs) -> typing.AsyncIterable[ForwardRef('models.NetworkWatcherListResult')]
  parent: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.list_all
- fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.update_tags
  isExternal: false
  name: 'update_tags(resource_group_name: str, network_watcher_name: str, parameters:
    azure.mgmt.network.v2018_04_01.models._models_py3.TagsObject, **kwargs) -> azure.mgmt.network.v2018_04_01.models._models_py3.NetworkWatcher'
  parent: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.update_tags
- fullName: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations
  uid: azure.mgmt.network.v2018_04_01.aio.operations_async.NetworkWatchersOperations.models
- fullName: azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2018_04_01.models.NetworkWatcherListResult]
  name: AsyncItemPaged[NetworkWatcherListResult]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.network.v2018_04_01.models.NetworkWatcherListResult
    name: NetworkWatcherListResult
    uid: azure.mgmt.network.v2018_04_01.models.NetworkWatcherListResult
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2018_04_01.models.NetworkWatcherListResult]
