### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.begin_create_or_update
  - azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.begin_delete
  - azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.begin_update
  - azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.get
  - azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.list_by_route_filter
  - azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.models
  class: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations
  fullName: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.network.v2019_04_01.aio.operations_async
  name: RouteFilterRulesOperations
  summary: 'RouteFilterRulesOperations async operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: RouteFilterRulesOperations(client, config, serializer, deserializer)
      -> None
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations
- class: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations
  fullName: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.begin_create_or_update
  langs:
  - python
  module: azure.mgmt.network.v2019_04_01.aio.operations_async
  name: 'begin_create_or_update(resource_group_name: str, route_filter_name: str,
    rule_name: str, route_filter_rule_parameters: azure.mgmt.network.v2019_04_01.models._models_py3.RouteFilterRule,
    **kwargs) -> azure.mgmt.network.v2019_04_01.models._models_py3.RouteFilterRule'
  namewithoutparameters: begin_create_or_update
  summary: "Creates or updates a route in the specified route filter.\n\n   param\
    \ resource_group_name:\n      The name of the resource group.\n\n   type resource_group_name:\n\
    \      str\n\n   param route_filter_name:\n      The name of the route filter.\n\
    \n   type route_filter_name:\n      str\n\n   param rule_name:\n      The name\
    \ of the route filter rule.\n\n   type rule_name:\n      str\n\n   param route_filter_rule_parameters:\n\
    \      Parameters supplied to the create or update route filter\n\n\nrule operation.\n\
    \   type route_filter_rule_parameters:\n      ~azure.mgmt.network.v2019_04_01.models.RouteFilterRule\n\
    \n   keyword callable cls:\n      A custom type or function that will be passed\
    \ the direct response\n\n   keyword str continuation_token:\n      A continuation\
    \ token to restart a poller from a saved state.\n\n   keyword polling:\n     \
    \ True for ARMPolling, False for no polling, or a\n      polling object for personal\
    \ polling strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.AsyncPollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  RouteFilterRule, or the result of cls(response)\n\n   rtype:\n      ~azure.mgmt.network.v2019_04_01.models.RouteFilterRule\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: 'begin_create_or_update(resource_group_name: str, route_filter_name:
      str, rule_name: str, route_filter_rule_parameters: azure.mgmt.network.v2019_04_01.models._models_py3.RouteFilterRule,
      **kwargs) -> azure.mgmt.network.v2019_04_01.models._models_py3.RouteFilterRule'
  type: method
  uid: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.begin_create_or_update
- class: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations
  exceptions:
  - description: ''
    type: ~azure.core.exceptions.HttpResponseError
  fullName: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.begin_delete
  langs:
  - python
  module: azure.mgmt.network.v2019_04_01.aio.operations_async
  name: 'begin_delete(resource_group_name: str, route_filter_name: str, rule_name:
    str, **kwargs) -> None'
  namewithoutparameters: begin_delete
  summary: Deletes the specified rule from a route filter.
  syntax:
    content: 'begin_delete(resource_group_name: str, route_filter_name: str, rule_name:
      str, **kwargs) -> None'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the route filter.
      id: route_filter_name
      isRequired: true
      type:
      - str
    - description: The name of the rule.
      id: rule_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    - description: A continuation token to restart a poller from a saved state.
      id: continuation_token
      isRequired: true
      type:
      - str
    - description: 'True for ARMPolling, False for no polling, or a

        polling object for personal polling strategy'
      id: polling
      isRequired: true
      type:
      - bool
      - azure.core.polling.AsyncPollingMethod
    - description: Default waiting time between two polls for LRO operations if no
        Retry-After header is present.
      id: polling_interval
      isRequired: true
      type:
      - int
    return:
      description: None, or the result of cls(response)
      type:
      - None
  type: method
  uid: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.begin_delete
- class: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations
  fullName: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.begin_update
  langs:
  - python
  module: azure.mgmt.network.v2019_04_01.aio.operations_async
  name: 'begin_update(resource_group_name: str, route_filter_name: str, rule_name:
    str, route_filter_rule_parameters: azure.mgmt.network.v2019_04_01.models._models_py3.PatchRouteFilterRule,
    **kwargs) -> azure.mgmt.network.v2019_04_01.models._models_py3.RouteFilterRule'
  namewithoutparameters: begin_update
  summary: "Updates a route in the specified route filter.\n\n   param resource_group_name:\n\
    \      The name of the resource group.\n\n   type resource_group_name:\n     \
    \ str\n\n   param route_filter_name:\n      The name of the route filter.\n\n\
    \   type route_filter_name:\n      str\n\n   param rule_name:\n      The name\
    \ of the route filter rule.\n\n   type rule_name:\n      str\n\n   param route_filter_rule_parameters:\n\
    \      Parameters supplied to the update route filter rule\n\n\noperation.\n \
    \  type route_filter_rule_parameters:\n      ~azure.mgmt.network.v2019_04_01.models.PatchRouteFilterRule\n\
    \n   keyword callable cls:\n      A custom type or function that will be passed\
    \ the direct response\n\n   keyword str continuation_token:\n      A continuation\
    \ token to restart a poller from a saved state.\n\n   keyword polling:\n     \
    \ True for ARMPolling, False for no polling, or a\n      polling object for personal\
    \ polling strategy\n\n   paramtype polling:\n      bool or ~azure.core.polling.AsyncPollingMethod\n\
    \n   keyword int polling_interval:\n      Default waiting time between two polls\
    \ for LRO operations if no Retry-After header is present.\n\n   return:\n    \
    \  RouteFilterRule, or the result of cls(response)\n\n   rtype:\n      ~azure.mgmt.network.v2019_04_01.models.RouteFilterRule\n\
    \n   raises ~azure.core.exceptions.HttpResponseError:"
  syntax:
    content: 'begin_update(resource_group_name: str, route_filter_name: str, rule_name:
      str, route_filter_rule_parameters: azure.mgmt.network.v2019_04_01.models._models_py3.PatchRouteFilterRule,
      **kwargs) -> azure.mgmt.network.v2019_04_01.models._models_py3.RouteFilterRule'
  type: method
  uid: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.begin_update
- class: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations
  fullName: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.get
  langs:
  - python
  module: azure.mgmt.network.v2019_04_01.aio.operations_async
  name: 'get(resource_group_name: str, route_filter_name: str, rule_name: str, **kwargs)
    -> azure.mgmt.network.v2019_04_01.models._models_py3.RouteFilterRule'
  namewithoutparameters: get
  summary: Gets the specified rule from a route filter.
  syntax:
    content: 'get(resource_group_name: str, route_filter_name: str, rule_name: str,
      **kwargs) -> azure.mgmt.network.v2019_04_01.models._models_py3.RouteFilterRule'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the route filter.
      id: route_filter_name
      isRequired: true
      type:
      - str
    - description: The name of the rule.
      id: rule_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: RouteFilterRule, or the result of cls(response)
      type:
      - azure.mgmt.network.v2019_04_01.models.RouteFilterRule
  type: method
  uid: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.get
- class: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations
  fullName: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.list_by_route_filter
  langs:
  - python
  module: azure.mgmt.network.v2019_04_01.aio.operations_async
  name: 'list_by_route_filter(resource_group_name: str, route_filter_name: str, **kwargs)
    -> typing.AsyncIterable[ForwardRef(''models.RouteFilterRuleListResult'')]'
  namewithoutparameters: list_by_route_filter
  summary: Gets all RouteFilterRules in a route filter.
  syntax:
    content: 'list_by_route_filter(resource_group_name: str, route_filter_name: str,
      **kwargs) -> typing.AsyncIterable[ForwardRef(''models.RouteFilterRuleListResult'')]'
    parameters:
    - description: The name of the resource group.
      id: resource_group_name
      isRequired: true
      type:
      - str
    - description: The name of the route filter.
      id: route_filter_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: An iterator like instance of either RouteFilterRuleListResult or
        the result of cls(response)
      type:
      - azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2019_04_01.models.RouteFilterRuleListResult]
  type: method
  uid: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.list_by_route_filter
- class: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations
  fullName: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.models
  langs:
  - python
  module: azure.mgmt.network.v2019_04_01.aio.operations_async
  name: models
  syntax:
    content: models = <module 'azure.mgmt.network.v2019_04_01.models' from 'c:\\repo\\venv\\lib\\site-packages\\azure\\mgmt\\network\\v2019_04_01\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.models
references:
- fullName: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.begin_create_or_update
  isExternal: false
  name: 'begin_create_or_update(resource_group_name: str, route_filter_name: str,
    rule_name: str, route_filter_rule_parameters: azure.mgmt.network.v2019_04_01.models._models_py3.RouteFilterRule,
    **kwargs) -> azure.mgmt.network.v2019_04_01.models._models_py3.RouteFilterRule'
  parent: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations
  uid: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.begin_create_or_update
- fullName: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.begin_delete
  isExternal: false
  name: 'begin_delete(resource_group_name: str, route_filter_name: str, rule_name:
    str, **kwargs) -> None'
  parent: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations
  uid: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.begin_delete
- fullName: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.begin_update
  isExternal: false
  name: 'begin_update(resource_group_name: str, route_filter_name: str, rule_name:
    str, route_filter_rule_parameters: azure.mgmt.network.v2019_04_01.models._models_py3.PatchRouteFilterRule,
    **kwargs) -> azure.mgmt.network.v2019_04_01.models._models_py3.RouteFilterRule'
  parent: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations
  uid: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.begin_update
- fullName: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.get
  isExternal: false
  name: 'get(resource_group_name: str, route_filter_name: str, rule_name: str, **kwargs)
    -> azure.mgmt.network.v2019_04_01.models._models_py3.RouteFilterRule'
  parent: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations
  uid: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.get
- fullName: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.list_by_route_filter
  isExternal: false
  name: 'list_by_route_filter(resource_group_name: str, route_filter_name: str, **kwargs)
    -> typing.AsyncIterable[ForwardRef(''models.RouteFilterRuleListResult'')]'
  parent: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations
  uid: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.list_by_route_filter
- fullName: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations
  uid: azure.mgmt.network.v2019_04_01.aio.operations_async.RouteFilterRulesOperations.models
- fullName: azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2019_04_01.models.RouteFilterRuleListResult]
  name: AsyncItemPaged[RouteFilterRuleListResult]
  spec.python:
  - fullName: azure.core.async_paging.AsyncItemPaged
    name: AsyncItemPaged
    uid: azure.core.async_paging.AsyncItemPaged
  - fullName: '['
    name: '['
  - fullName: azure.mgmt.network.v2019_04_01.models.RouteFilterRuleListResult
    name: RouteFilterRuleListResult
    uid: azure.mgmt.network.v2019_04_01.models.RouteFilterRuleListResult
  - fullName: ']'
    name: ']'
  uid: azure.core.async_paging.AsyncItemPaged[azure.mgmt.network.v2019_04_01.models.RouteFilterRuleListResult]
