### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.search.aio.AsyncSearchItemPaged.get_facets
  class: azure.search.aio.AsyncSearchItemPaged
  fullName: azure.search.aio.AsyncSearchItemPaged
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - inheritance:
          - type: builtins.object
          type: collections.abc.AsyncIterable
        type: collections.abc.AsyncIterator
      - inheritance:
        - inheritance:
          - type: builtins.object
          type: collections.abc.AsyncIterable
        - inheritance:
          - type: builtins.object
          type: typing.Generic
        type: typing.AsyncIterable
      type: typing.AsyncIterator
    type: azure.core.async_paging.AsyncItemPaged
  langs:
  - python
  module: azure.search.aio
  name: AsyncSearchItemPaged
  syntax:
    content: AsyncSearchItemPaged(*args, **kwargs)
  type: class
  uid: azure.search.aio.AsyncSearchItemPaged
- class: azure.search.aio.AsyncSearchItemPaged
  fullName: azure.search.aio.AsyncSearchItemPaged.get_facets
  langs:
  - python
  module: azure.search.aio
  name: get_facets() -> typing.Union[dict, NoneType]
  summary: Return any facet results if faceting was requested.
  syntax:
    content: get_facets() -> typing.Union[dict, NoneType]
  type: method
  uid: azure.search.aio.AsyncSearchItemPaged.get_facets
references:
- fullName: azure.search.aio.AsyncSearchItemPaged.get_facets
  isExternal: false
  name: get_facets() -> typing.Union[dict, NoneType]
  parent: azure.search.aio.AsyncSearchItemPaged
  uid: azure.search.aio.AsyncSearchItemPaged.get_facets
