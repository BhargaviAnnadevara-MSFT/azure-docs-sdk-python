### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.claim_ownership
  - azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.close
  - azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.from_connection_string
  - azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.list_checkpoints
  - azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.list_ownership
  - azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.update_checkpoint
  class: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore
  fullName: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.eventhub._eventprocessor.checkpoint_store.CheckpointStore
  langs:
  - python
  module: azure.eventhub.extensions.checkpointstoreblob
  name: BlobCheckpointStore
  summary: 'A CheckpointStore that uses Azure Blob Storage to store the partition
    ownership and checkpoint data.


    This class implements methods list_ownership, claim_ownership, update_checkpoint
    and list_checkpoints that are

    defined in class azure.eventhub.aio.CheckpointStore of package azure-eventhub.'
  syntax:
    content: BlobCheckpointStore(blob_account_url, container_name, credential=None,
      **kwargs)
  type: class
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore
- class: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore
  fullName: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.claim_ownership
  langs:
  - python
  module: azure.eventhub.extensions.checkpointstoreblob
  name: claim_ownership(ownership_list)
  syntax:
    content: claim_ownership(ownership_list)
    parameters:
    - id: ownership_list
  type: method
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.claim_ownership
- class: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore
  fullName: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.close
  langs:
  - python
  module: azure.eventhub.extensions.checkpointstoreblob
  name: close()
  syntax:
    content: close()
    parameters: []
  type: method
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.close
- class: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore
  fullName: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.from_connection_string
  langs:
  - python
  module: azure.eventhub.extensions.checkpointstoreblob
  name: from_connection_string(conn_str, container_name, credential=None, **kwargs)
  syntax:
    content: from_connection_string(conn_str, container_name, credential=None, **kwargs)
    parameters:
    - id: cls
    - id: conn_str
    - id: container_name
    - defaultValue: None
      id: credential
  type: method
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.from_connection_string
- class: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore
  fullName: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.list_checkpoints
  langs:
  - python
  module: azure.eventhub.extensions.checkpointstoreblob
  name: list_checkpoints(fully_qualified_namespace, eventhub_name, consumer_group)
  syntax:
    content: list_checkpoints(fully_qualified_namespace, eventhub_name, consumer_group)
    parameters:
    - id: fully_qualified_namespace
    - id: eventhub_name
    - id: consumer_group
  type: method
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.list_checkpoints
- class: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore
  fullName: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.list_ownership
  langs:
  - python
  module: azure.eventhub.extensions.checkpointstoreblob
  name: list_ownership(fully_qualified_namespace, eventhub_name, consumer_group)
  syntax:
    content: list_ownership(fully_qualified_namespace, eventhub_name, consumer_group)
    parameters:
    - id: fully_qualified_namespace
    - id: eventhub_name
    - id: consumer_group
  type: method
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.list_ownership
- class: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore
  fullName: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.update_checkpoint
  langs:
  - python
  module: azure.eventhub.extensions.checkpointstoreblob
  name: update_checkpoint(checkpoint)
  syntax:
    content: update_checkpoint(checkpoint)
    parameters:
    - id: checkpoint
  type: method
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.update_checkpoint
references:
- fullName: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.claim_ownership
  isExternal: false
  name: claim_ownership(ownership_list)
  parent: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.claim_ownership
- fullName: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.close
  isExternal: false
  name: close()
  parent: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.close
- fullName: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.from_connection_string
  isExternal: false
  name: from_connection_string(conn_str, container_name, credential=None, **kwargs)
  parent: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.from_connection_string
- fullName: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.list_checkpoints
  isExternal: false
  name: list_checkpoints(fully_qualified_namespace, eventhub_name, consumer_group)
  parent: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.list_checkpoints
- fullName: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.list_ownership
  isExternal: false
  name: list_ownership(fully_qualified_namespace, eventhub_name, consumer_group)
  parent: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.list_ownership
- fullName: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.update_checkpoint
  isExternal: false
  name: update_checkpoint(checkpoint)
  parent: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobCheckpointStore.update_checkpoint
