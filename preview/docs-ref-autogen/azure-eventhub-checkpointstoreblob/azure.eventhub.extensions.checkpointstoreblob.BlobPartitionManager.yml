### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.claim_ownership
  - azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.list_checkpoints
  - azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.list_ownership
  - azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.update_checkpoint
  class: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager
  fullName: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.eventhub._eventprocessor.partition_manager.PartitionManager
  langs:
  - python
  module: azure.eventhub.extensions.checkpointstoreblob
  name: BlobPartitionManager
  summary: 'An PartitionManager that uses Azure Blob Storage to store the partition
    ownership and checkpoint data.


    This class implements methods list_ownership, claim_ownership, update_checkpoint
    and list_checkpoints that are

    defined in class azure.eventhub.aio.PartitionManager of package azure-eventhub.'
  syntax:
    content: BlobPartitionManager(container_client)
  type: class
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager
- class: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager
  fullName: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.claim_ownership
  langs:
  - python
  module: azure.eventhub.extensions.checkpointstoreblob
  name: claim_ownership(ownership_list)
  syntax:
    content: claim_ownership(ownership_list)
    parameters:
    - id: ownership_list
  type: method
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.claim_ownership
- class: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager
  fullName: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.list_checkpoints
  langs:
  - python
  module: azure.eventhub.extensions.checkpointstoreblob
  name: list_checkpoints(fully_qualified_namespace, eventhub_name, consumer_group_name)
  syntax:
    content: list_checkpoints(fully_qualified_namespace, eventhub_name, consumer_group_name)
    parameters:
    - id: fully_qualified_namespace
    - id: eventhub_name
    - id: consumer_group_name
  type: method
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.list_checkpoints
- class: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager
  fullName: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.list_ownership
  langs:
  - python
  module: azure.eventhub.extensions.checkpointstoreblob
  name: list_ownership(fully_qualified_namespace, eventhub_name, consumer_group_name)
  syntax:
    content: list_ownership(fully_qualified_namespace, eventhub_name, consumer_group_name)
    parameters:
    - id: fully_qualified_namespace
    - id: eventhub_name
    - id: consumer_group_name
  type: method
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.list_ownership
- class: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager
  fullName: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.update_checkpoint
  langs:
  - python
  module: azure.eventhub.extensions.checkpointstoreblob
  name: update_checkpoint(fully_qualified_namespace, eventhub_name, consumer_group_name,
    partition_id, offset, sequence_number)
  syntax:
    content: update_checkpoint(fully_qualified_namespace, eventhub_name, consumer_group_name,
      partition_id, offset, sequence_number)
    parameters:
    - id: fully_qualified_namespace
    - id: eventhub_name
    - id: consumer_group_name
    - id: partition_id
    - id: offset
    - id: sequence_number
  type: method
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.update_checkpoint
references:
- fullName: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.claim_ownership
  isExternal: false
  name: claim_ownership(ownership_list)
  parent: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.claim_ownership
- fullName: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.list_checkpoints
  isExternal: false
  name: list_checkpoints(fully_qualified_namespace, eventhub_name, consumer_group_name)
  parent: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.list_checkpoints
- fullName: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.list_ownership
  isExternal: false
  name: list_ownership(fully_qualified_namespace, eventhub_name, consumer_group_name)
  parent: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.list_ownership
- fullName: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.update_checkpoint
  isExternal: false
  name: update_checkpoint(fully_qualified_namespace, eventhub_name, consumer_group_name,
    partition_id, offset, sequence_number)
  parent: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager
  uid: azure.eventhub.extensions.checkpointstoreblob.BlobPartitionManager.update_checkpoint
