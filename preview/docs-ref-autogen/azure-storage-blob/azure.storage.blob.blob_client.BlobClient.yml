### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.storage.blob.blob_client.BlobClient.abort_copy
  - azure.storage.blob.blob_client.BlobClient.acquire_lease
  - azure.storage.blob.blob_client.BlobClient.append_block
  - azure.storage.blob.blob_client.BlobClient.append_block_from_url
  - azure.storage.blob.blob_client.BlobClient.clear_page
  - azure.storage.blob.blob_client.BlobClient.commit_block_list
  - azure.storage.blob.blob_client.BlobClient.create_append_blob
  - azure.storage.blob.blob_client.BlobClient.create_page_blob
  - azure.storage.blob.blob_client.BlobClient.create_snapshot
  - azure.storage.blob.blob_client.BlobClient.delete_blob
  - azure.storage.blob.blob_client.BlobClient.download_blob
  - azure.storage.blob.blob_client.BlobClient.from_connection_string
  - azure.storage.blob.blob_client.BlobClient.generate_shared_access_signature
  - azure.storage.blob.blob_client.BlobClient.get_account_information
  - azure.storage.blob.blob_client.BlobClient.get_blob_properties
  - azure.storage.blob.blob_client.BlobClient.get_block_list
  - azure.storage.blob.blob_client.BlobClient.get_page_ranges
  - azure.storage.blob.blob_client.BlobClient.resize_blob
  - azure.storage.blob.blob_client.BlobClient.set_blob_metadata
  - azure.storage.blob.blob_client.BlobClient.set_http_headers
  - azure.storage.blob.blob_client.BlobClient.set_premium_page_blob_tier
  - azure.storage.blob.blob_client.BlobClient.set_sequence_number
  - azure.storage.blob.blob_client.BlobClient.set_standard_blob_tier
  - azure.storage.blob.blob_client.BlobClient.stage_block
  - azure.storage.blob.blob_client.BlobClient.stage_block_from_url
  - azure.storage.blob.blob_client.BlobClient.start_copy_from_url
  - azure.storage.blob.blob_client.BlobClient.undelete_blob
  - azure.storage.blob.blob_client.BlobClient.upload_blob
  - azure.storage.blob.blob_client.BlobClient.upload_page
  - azure.storage.blob.blob_client.BlobClient.upload_pages_from_url
  class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.storage.blob._shared.base_client.StorageAccountHostsMixin
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: BlobClient
  summary: A client to interact with a specific blob, although that blob may not yet
    exist.
  syntax:
    content: BlobClient(blob_url, container=None, blob=None, snapshot=None, credential=None,
      **kwargs)
    parameters:
    - description: 'The full URI to the blob. This can also be a URL to the storage
        account

        or container, in which case the blob and/or container must also be specified.'
      id: blob_url
      type:
      - str
    - description: 'The container for the blob. If specified, this value will override

        a container value specified in the blob URL.'
      id: container
      type:
      - str
      - azure.storage.blob.models.ContainerProperties
    - description: 'The blob with which to interact. If specified, this value will
        override

        a blob value specified in the blob URL.'
      id: blob
      type:
      - str
      - azure.storage.blob.models.BlobProperties
    - description: The optional blob snapshot on which to operate.
      id: snapshot
      type:
      - str
    - description: 'The credentials with which to authenticate. This is optional if
        the

        account URL already has a SAS token. The value can be a SAS token string,
        and account

        shared access key, or an instance of a TokenCredentials class from azure.identity.

        If the URL already has a SAS token, specifying an explicit credential will
        take priority.'
      id: credential
    variables:
    - description: 'The full endpoint URL to the Blob, including snapshot and SAS
        token if used. This could be

        either the primary endpoint, or the secondary endpoint depending on the current
        *location_mode*.'
      id: url
      type:
      - str
    - description: The full primary endpoint URL.
      id: primary_endpoint
      type:
      - str
    - description: The hostname of the primary endpoint.
      id: primary_hostname
      type:
      - str
    - description: 'The full secondary endpoint URL if configured. If not available

        a ValueError will be raised. To explicitly specify a secondary hostname, use
        the optional

        *secondary_hostname* keyword argument on instantiation.'
      id: secondary_endpoint
      type:
      - str
    - description: 'The hostname of the secondary endpoint. If not available this

        will be None. To explicitly specify a secondary hostname, use the optional

        *secondary_hostname* keyword argument on instantiation.'
      id: secondary_hostname
      type:
      - str
    - description: 'The location mode that the client is currently using. By default

        this will be "primary". Options include "primary" and "secondary".'
      id: location_mode
      type:
      - str
  type: class
  uid: azure.storage.blob.blob_client.BlobClient
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.abort_copy
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: abort_copy(copy_id, **kwargs)
  summary: 'Abort an ongoing copy operation.


    This will leave a destination blob with zero length and full metadata.

    This will raise an error if the copy operation has already ended.'
  syntax:
    content: abort_copy(copy_id, **kwargs)
    parameters:
    - description: 'The copy operation to abort. This can be either an ID, or an

        instance of BlobProperties.'
      id: copy_id
      type:
      - str
      - azure.storage.blob.models.BlobProperties
    return:
      type:
      - None
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.abort_copy
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.acquire_lease
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: acquire_lease(lease_duration=-1, lease_id=None, **kwargs)
  summary: 'Requests a new lease.


    If the blob does not have an active lease, the Blob

    Service creates a lease on the blob and returns a new lease.'
  syntax:
    content: acquire_lease(lease_duration=-1, lease_id=None, **kwargs)
    parameters:
    - description: 'Specifies the duration of the lease, in seconds, or negative one

        (-1) for a lease that never expires. A non-infinite lease can be

        between 15 and 60 seconds. A lease duration cannot be changed

        using renew or change. Default is -1 (infinite lease).'
      id: lease_duration
      type:
      - int
    - description: 'Proposed lease ID, in a GUID string format. The Blob Service

        returns 400 (Invalid request) if the proposed lease ID is not

        in the correct format.'
      id: lease_id
      type:
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.'
      id: if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.'
      id: if_none_match
      type:
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: A LeaseClient object.
      type:
      - azure.storage.blob.lease.LeaseClient
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.acquire_lease
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.append_block
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: append_block(data, length=None, validate_content=False, maxsize_condition=None,
    appendpos_condition=None, **kwargs)
  summary: Commits a new block of data to the end of the existing append blob.
  syntax:
    content: append_block(data, length=None, validate_content=False, maxsize_condition=None,
      appendpos_condition=None, **kwargs)
    parameters:
    - description: Content of the block.
      id: data
    - description: Size of the block in bytes.
      id: length
      type:
      - int
    - description: 'If true, calculates an MD5 hash of the block content. The storage

        service checks the hash of the content that has arrived

        with the hash that was sent. This is primarily valuable for detecting

        bitflips on the wire if using http instead of https as https (the default)

        will already validate. Note that this MD5 hash is not stored with the

        blob.'
      id: validate_content
      type:
      - bool
    - description: 'Optional conditional header. The max length in bytes permitted
        for

        the append blob. If the Append Block operation would cause the blob

        to exceed that limit or if the blob size is already greater than the

        value specified in this header, the request will fail with

        MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed).'
      id: maxsize_condition
      type:
      - int
    - description: 'Optional conditional header, used only for the Append Block operation.

        A number indicating the byte offset to compare. Append Block will

        succeed only if the append position is equal to this number. If it

        is not, the request will fail with the AppendPositionConditionNotMet error

        (HTTP status code 412 - Precondition Failed).'
      id: appendpos_condition
      type:
      - int
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.'
      id: if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.'
      id: if_none_match
      type:
      - str
    - description: Defaults to UTF-8.
      id: encoding
      type:
      - str
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      type:
      - azure.storage.blob.models.CustomerProvidedEncryptionKey
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: Blob-updated property dict (Etag, last modified, append offset,
        committed block count).
      type:
      - dict(str, Any)
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.append_block
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.append_block_from_url
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: append_block_from_url(copy_source_url, source_range_start=None, source_range_end=None,
    source_content_md5=None, maxsize_condition=None, appendpos_condition=None, **kwargs)
  summary: Creates a new block to be committed as part of a blob, where the contents
    are read from a source url.
  syntax:
    content: append_block_from_url(copy_source_url, source_range_start=None, source_range_end=None,
      source_content_md5=None, maxsize_condition=None, appendpos_condition=None, **kwargs)
    parameters:
    - description: 'The URL of the source data. It can point to any Azure Blob or
        File, that is either public or has a

        shared access signature attached.'
      id: copy_source_url
      type:
      - str
    - description: This indicates the start of the range of bytes(inclusive) that
        has to be taken from the copy source.
      id: source_range_start
      type:
      - int
    - description: This indicates the end of the range of bytes(inclusive) that has
        to be taken from the copy source.
      id: source_range_end
      type:
      - int
    - description: If given, the service will calculate the MD5 hash of the block
        content and compare against this value.
      id: source_content_md5
      type:
      - bytearray
    - description: 'Optional conditional header. The max length in bytes permitted
        for

        the append blob. If the Append Block operation would cause the blob

        to exceed that limit or if the blob size is already greater than the

        value specified in this header, the request will fail with

        MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed).'
      id: maxsize_condition
      type:
      - int
    - description: 'Optional conditional header, used only for the Append Block operation.

        A number indicating the byte offset to compare. Append Block will

        succeed only if the append position is equal to this number. If it

        is not, the request will fail with the

        AppendPositionConditionNotMet error

        (HTTP status code 412 - Precondition Failed).'
      id: appendpos_condition
      type:
      - int
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: or str lease
      type:
      - azure.storage.blob.lease.LeaseClient
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.'
      id: if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.'
      id: if_none_match
      type:
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the source resource has been modified since the specified time.'
      id: source_if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the source resource has not been modified since the specified date/time.'
      id: source_if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the source resource''s ETag matches the value specified.'
      id: source_if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the source resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the source resource does not exist, and fail the

        operation if it does exist.'
      id: source_if_none_match
      type:
      - str
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      type:
      - azure.storage.blob.models.CustomerProvidedEncryptionKey
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.append_block_from_url
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.clear_page
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: clear_page(start_range, end_range, **kwargs)
  summary: Clears a range of pages.
  syntax:
    content: clear_page(start_range, end_range, **kwargs)
    parameters:
    - description: 'Start of byte range to use for writing to a section of the blob.

        Pages must be aligned with 512-byte boundaries, the start offset

        must be a modulus of 512 and the end offset must be a modulus of

        512-1. Examples of valid byte ranges are 0-511, 512-1023, etc.'
      id: start_range
      type:
      - int
    - description: 'End of byte range to use for writing to a section of the blob.

        Pages must be aligned with 512-byte boundaries, the start offset

        must be a modulus of 512 and the end offset must be a modulus of

        512-1. Examples of valid byte ranges are 0-511, 512-1023, etc.'
      id: end_range
      type:
      - int
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: 'If the blob''s sequence number is less than or equal to

        the specified value, the request proceeds; otherwise it fails.'
      id: if_sequence_number_lte
      type:
      - int
    - description: 'If the blob''s sequence number is less than the specified

        value, the request proceeds; otherwise it fails.'
      id: if_sequence_number_lt
      type:
      - int
    - description: 'If the blob''s sequence number is equal to the specified

        value, the request proceeds; otherwise it fails.'
      id: if_sequence_number_eq
      type:
      - int
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify an ETag
        value for this conditional

        header to write the page only if the blob''s ETag value matches the

        value specified. If the values do not match, the Blob service fails.'
      id: if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify an ETag
        value for this conditional

        header to write the page only if the blob''s ETag value does not

        match the value specified. If the values are identical, the Blob

        service fails.'
      id: if_none_match
      type:
      - str
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      type:
      - azure.storage.blob.models.CustomerProvidedEncryptionKey
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: Blob-updated property dict (Etag and last modified).
      type:
      - dict(str, Any)
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.clear_page
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.commit_block_list
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: commit_block_list(block_list, content_settings=None, metadata=None, validate_content=False,
    **kwargs)
  summary: 'The Commit Block List operation writes a blob by specifying the list of

    block IDs that make up the blob.'
  syntax:
    content: commit_block_list(block_list, content_settings=None, metadata=None, validate_content=False,
      **kwargs)
    parameters:
    - description: List of Blockblobs.
      id: block_list
      type:
      - list
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: ContentSettings object used to set blob properties.
      id: content_settings
      type:
      - azure.storage.blob.models.ContentSettings
    - description: Name-value pairs associated with the blob as metadata.
      id: metadata
      type:
      - dict[str, str]
    - description: 'If true, calculates an MD5 hash of the page content. The storage

        service checks the hash of the content that has arrived

        with the hash that was sent. This is primarily valuable for detecting

        bitflips on the wire if using http instead of https as https (the default)

        will already validate. Note that this MD5 hash is not stored with the

        blob.'
      id: validate_content
      type:
      - bool
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.'
      id: if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.'
      id: if_none_match
      type:
      - str
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      type:
      - azure.storage.blob.models.CustomerProvidedEncryptionKey
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: Blob-updated property dict (Etag and last modified).
      type:
      - dict(str, Any)
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.commit_block_list
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.create_append_blob
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: create_append_blob(content_settings=None, metadata=None, **kwargs)
  summary: Creates a new Append Blob.
  syntax:
    content: create_append_blob(content_settings=None, metadata=None, **kwargs)
    parameters:
    - description: ContentSettings object used to set properties on the blob.
      id: content_settings
      type:
      - azure.storage.blob.models.ContentSettings
    - description: Name-value pairs associated with the blob as metadata.
      id: metadata
      type:
      - dict(str, str)
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.'
      id: if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.'
      id: if_none_match
      type:
      - str
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      type:
      - azure.storage.blob.models.CustomerProvidedEncryptionKey
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: Blob-updated property dict (Etag and last modified).
      type:
      - dict[str, Any]
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.create_append_blob
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.create_page_blob
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: create_page_blob(size, content_settings=None, sequence_number=None, metadata=None,
    premium_page_blob_tier=None, **kwargs)
  summary: Creates a new Page Blob of the specified size.
  syntax:
    content: create_page_blob(size, content_settings=None, sequence_number=None, metadata=None,
      premium_page_blob_tier=None, **kwargs)
    parameters:
    - description: 'This header specifies the maximum size

        for the page blob, up to 1 TB. The page blob size must be aligned

        to a 512-byte boundary.'
      id: size
      type:
      - int
    - description: ContentSettings object used to set properties on the blob.
      id: content_settings
      type:
      - azure.storage.blob.models.ContentSettings
    - description: 'Only for Page blobs. The sequence number is a user-controlled
        value that you can use to

        track requests. The value of the sequence number must be between 0

        and 2^63 - 1.The default value is 0.'
      id: sequence_number
      type:
      - int
    - description: Name-value pairs associated with the blob as metadata.
      id: metadata
      type:
      - dict(str, str)
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.'
      id: if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.'
      id: if_none_match
      type:
      - str
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      type:
      - azure.storage.blob.models.CustomerProvidedEncryptionKey
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    - description: 'A page blob tier value to set the blob to. The tier correlates
        to the size of the

        blob and number of allowed IOPS. This is only applicable to page blobs on

        premium storage accounts.'
      id: premium_page_blob_tier
      type:
      - azure.storage.blob.models.PremiumPageBlobTier
    return:
      description: Blob-updated property dict (Etag and last modified).
      type:
      - dict[str, Any]
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.create_page_blob
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.create_snapshot
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: create_snapshot(metadata=None, **kwargs)
  summary: 'Creates a snapshot of the blob.


    A snapshot is a read-only version of a blob that''s taken at a point in time.

    It can be read, copied, or deleted, but not modified. Snapshots provide a way

    to back up a blob as it appears at a moment in time.


    A snapshot of a blob has the same name as the base blob from which the snapshot

    is taken, with a DateTime value appended to indicate the time at which the

    snapshot was taken.'
  syntax:
    content: create_snapshot(metadata=None, **kwargs)
    parameters:
    - description: Name-value pairs associated with the blob as metadata.
      id: metadata
      type:
      - dict(str, str)
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.'
      id: if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.'
      id: if_none_match
      type:
      - str
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      type:
      - azure.storage.blob.models.CustomerProvidedEncryptionKey
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: Blob-updated property dict (Snapshot ID, Etag, and last modified).
      type:
      - dict[str, Any]
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.create_snapshot
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.delete_blob
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: delete_blob(delete_snapshots=False, **kwargs)
  summary: 'Marks the specified blob for deletion.


    The blob is later deleted during garbage collection.

    Note that in order to delete a blob, you must delete all of its

    snapshots. You can delete both at the same time with the Delete

    Blob operation.


    If a delete retention policy is enabled for the service, then this operation soft
    deletes the blob

    and retains the blob for a specified number of days.

    After the specified number of days, the blob''s data is removed from the service
    during garbage collection.

    Soft deleted blob is accessible through List Blobs API specifying *include=''deleted''*
    option.

    Soft-deleted blob can be restored using Undelete API.'
  syntax:
    content: delete_blob(delete_snapshots=False, **kwargs)
    parameters:
    - description: "Required if the blob has associated snapshots. Values include:\n\
        \   * \"only\": Deletes only the blobs snapshots. \n\n   * \"include\": Deletes\
        \ the blob along with all snapshots."
      id: delete_snapshots
      type:
      - str
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.'
      id: if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.'
      id: if_none_match
      type:
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      type:
      - None
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.delete_blob
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.download_blob
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: download_blob(offset=None, length=None, validate_content=False, **kwargs)
  summary: Downloads a blob to a stream with automatic chunking.
  syntax:
    content: download_blob(offset=None, length=None, validate_content=False, **kwargs)
    parameters:
    - description: 'Start of byte range to use for downloading a section of the blob.

        Must be set if length is provided.'
      id: offset
      type:
      - int
    - description: 'Number of bytes to read from the stream. This is optional, but

        should be supplied for optimal performance.'
      id: length
      type:
      - int
    - description: 'If true, calculates an MD5 hash for each chunk of the blob. The
        storage

        service checks the hash of the content that has arrived with the hash

        that was sent. This is primarily valuable for detecting bitflips on

        the wire if using http instead of https as https (the default) will

        already validate. Note that this MD5 hash is not stored with the

        blob. Also note that if enabled, the memory-efficient upload algorithm

        will not be used, because computing the MD5 hash requires buffering

        entire blocks, and doing so defeats the purpose of the memory-efficient algorithm.'
      id: validate_content
      type:
      - bool
    - description: 'If specified, download_blob only succeeds if the blob''s lease
        is active

        and matches this ID. Required if the blob has an active lease.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.'
      id: if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.'
      id: if_none_match
      type:
      - str
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      type:
      - azure.storage.blob.models.CustomerProvidedEncryptionKey
    - description: 'The timeout parameter is expressed in seconds. This method may
        make

        multiple calls to the Azure service and the timeout will apply to

        each call individually.'
      id: timeout
      type:
      - int
    return:
      description: A iterable data generator (stream)
      type:
      - azure.storage.blob._blob_utils.StorageStreamDownloader
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.download_blob
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.from_connection_string
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: from_connection_string(conn_str, container, blob, snapshot=None, credential=None,
    **kwargs)
  summary: Create BlobClient from a Connection String.
  syntax:
    content: from_connection_string(conn_str, container, blob, snapshot=None, credential=None,
      **kwargs)
    parameters:
    - description: A connection string to an Azure Storage account.
      id: conn_str
      type:
      - str
    - description: 'The container for the blob. This can either be the name of the
        container,

        or an instance of ContainerProperties'
      id: container
      type:
      - str
      - azure.storage.blob.models.ContainerProperties
    - description: 'The blob with which to interact. This can either be the name of
        the blob,

        or an instance of BlobProperties.'
      id: blob
      type:
      - str
      - azure.storage.blob.models.BlobProperties
    - description: The optional blob snapshot on which to operate.
      id: snapshot
      type:
      - str
    - defaultValue: None
      description: 'The credentials with which to authenticate. This is optional if
        the

        account URL already has a SAS token, or the connection string already has
        shared

        access key values. The value can be a SAS token string, and account shared
        access

        key, or an instance of a TokenCredentials class from azure.identity.

        Credentials provided here will take precedence over those in the connection
        string.'
      id: credential
    - defaultValue: None
      id: credential
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.from_connection_string
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.generate_shared_access_signature
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: generate_shared_access_signature(permission=None, expiry=None, start=None,
    policy_id=None, ip=None, protocol=None, account_name=None, cache_control=None,
    content_disposition=None, content_encoding=None, content_language=None, content_type=None,
    user_delegation_key=None)
  summary: 'Generates a shared access signature for the blob.

    Use the returned signature with the credential parameter of any BlobServiceClient,

    ContainerClient or BlobClient.'
  syntax:
    content: generate_shared_access_signature(permission=None, expiry=None, start=None,
      policy_id=None, ip=None, protocol=None, account_name=None, cache_control=None,
      content_disposition=None, content_encoding=None, content_language=None, content_type=None,
      user_delegation_key=None)
    parameters:
    - defaultValue: None
      description: 'The permissions associated with the shared access signature. The

        user is restricted to operations allowed by the permissions.

        Permissions must be ordered read, write, delete, list.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has been

        specified in an associated stored access policy.'
      id: permission
      type:
      - str
      - azure.storage.blob.models.BlobPermissions
    - defaultValue: None
      description: 'The time at which the shared access signature becomes invalid.

        Required unless an id is given referencing a stored access policy

        which contains this field. This field must be omitted if it has

        been specified in an associated stored access policy. Azure will always

        convert values to UTC. If a date is passed in without timezone info, it

        is assumed to be UTC.'
      id: expiry
      type:
      - datetime
      - str
    - defaultValue: None
      description: 'The time at which the shared access signature becomes valid. If

        omitted, start time for this call is assumed to be the time when the

        storage service receives the request. Azure will always convert values

        to UTC. If a date is passed in without timezone info, it is assumed to

        be UTC.'
      id: start
      type:
      - datetime
      - str
    - defaultValue: None
      description: 'A unique value up to 64 characters in length that correlates to
        a

        stored access policy. To create a stored access policy, use

        <xref:ContainerClient.set_container_access_policy>.'
      id: policy_id
      type:
      - str
    - defaultValue: None
      description: 'Specifies an IP address or a range of IP addresses from which
        to accept requests.

        If the IP address from which the request originates does not match the IP
        address

        or address range specified on the SAS token, the request is not authenticated.

        For example, specifying ip=168.1.5.65 or ip=168.1.5.60-168.1.5.70 on the SAS

        restricts the request to those IP addresses.'
      id: ip
      type:
      - str
    - defaultValue: None
      description: Specifies the protocol permitted for a request made. The default
        value is https.
      id: protocol
      type:
      - str
    - defaultValue: None
      description: Specifies the account_name when using oauth token as credential.
        If you use oauth token as credential.
      id: account_name
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Cache-Control when resource is accessed

        using this shared access signature.'
      id: cache_control
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Content-Disposition when resource is
        accessed

        using this shared access signature.'
      id: content_disposition
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Content-Encoding when resource is accessed

        using this shared access signature.'
      id: content_encoding
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Content-Language when resource is accessed

        using this shared access signature.'
      id: content_language
      type:
      - str
    - defaultValue: None
      description: 'Response header value for Content-Type when resource is accessed

        using this shared access signature.'
      id: content_type
      type:
      - str
    - defaultValue: None
      description: 'Instead of an account key, the user could pass in a user delegation
        key.

        A user delegation key can be obtained from the service by authenticating with
        an AAD identity;

        this can be accomplished by calling get_user_delegation_key.

        When present, the SAS is signed with the user delegation key instead.'
      id: user_delegation_key
      type:
      - azure.storage.blob._shared.models.UserDelegationKey
    return:
      description: A Shared Access Signature (sas) token.
      type:
      - str
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.generate_shared_access_signature
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.get_account_information
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: get_account_information(**kwargs)
  summary: 'Gets information related to the storage account in which the blob resides.


    The information can also be retrieved if the user has a SAS to a container or
    blob.

    The keys in the returned dictionary include ''sku_name'' and ''account_kind''.'
  syntax:
    content: get_account_information(**kwargs)
    return:
      description: A dict of account information (SKU and account type).
      type:
      - dict(str, str)
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.get_account_information
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.get_blob_properties
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: get_blob_properties(**kwargs)
  summary: 'Returns all user-defined metadata, standard HTTP properties, and

    system properties for the blob. It does not return the content of the blob.'
  syntax:
    content: get_blob_properties(**kwargs)
    parameters:
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.'
      id: if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.'
      id: if_none_match
      type:
      - str
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      type:
      - azure.storage.blob.models.CustomerProvidedEncryptionKey
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: BlobProperties
      type:
      - azure.storage.blob.models.BlobProperties
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.get_blob_properties
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.get_block_list
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: get_block_list(block_list_type='committed', **kwargs)
  summary: 'The Get Block List operation retrieves the list of blocks that have

    been uploaded as part of a block blob.'
  syntax:
    content: get_block_list(block_list_type='committed', **kwargs)
    parameters:
    - description: 'Specifies whether to return the list of committed

        blocks, the list of uncommitted blocks, or both lists together.

        Possible values include: ''committed'', ''uncommitted'', ''all'''
      id: block_list_type
      type:
      - str
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: A tuple of two lists - committed and uncommitted blocks
      type:
      - tuple(list(azure.storage.blob.models.BlobBlock), list(azure.storage.blob.models.BlobBlock))
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.get_block_list
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.get_page_ranges
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: get_page_ranges(start_range=None, end_range=None, previous_snapshot_diff=None,
    **kwargs)
  summary: 'Returns the list of valid page ranges for a Page Blob or snapshot

    of a page blob.'
  syntax:
    content: get_page_ranges(start_range=None, end_range=None, previous_snapshot_diff=None,
      **kwargs)
    parameters:
    - description: 'Start of byte range to use for getting valid page ranges.

        If no end_range is given, all bytes after the start_range will be searched.

        Pages must be aligned with 512-byte boundaries, the start offset

        must be a modulus of 512 and the end offset must be a modulus of

        512-1. Examples of valid byte ranges are 0-511, 512-, etc.'
      id: start_range
      type:
      - int
    - description: 'End of byte range to use for getting valid page ranges.

        If end_range is given, start_range must be provided.

        This range will return valid page ranges for from the offset start up to

        offset end.

        Pages must be aligned with 512-byte boundaries, the start offset

        must be a modulus of 512 and the end offset must be a modulus of

        512-1. Examples of valid byte ranges are 0-511, 512-, etc.'
      id: end_range
      type:
      - int
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: 'The snapshot diff parameter that contains an opaque DateTime value
        that

        specifies a previous blob snapshot to be compared

        against a more recent snapshot or the current blob.'
      id: previous_snapshot_diff
      type:
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.'
      id: if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.'
      id: if_none_match
      type:
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: 'A tuple of two lists of page ranges as dictionaries with ''start''
        and ''end'' keys.

        The first element are filled page ranges, the 2nd element is cleared page
        ranges.'
      type:
      - tuple(list(dict(str, str), list(dict(str, str))
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.get_page_ranges
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.resize_blob
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: resize_blob(size, **kwargs)
  summary: 'Resizes a page blob to the specified size.


    If the specified value is less than the current size of the blob,

    then all pages above the specified value are cleared.'
  syntax:
    content: resize_blob(size, **kwargs)
    parameters:
    - description: Size to resize blob to.
      id: size
      type:
      - int
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.'
      id: if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.'
      id: if_none_match
      type:
      - str
    - description: 'A page blob tier value to set the blob to. The tier correlates
        to the size of the

        blob and number of allowed IOPS. This is only applicable to page blobs on

        premium storage accounts.'
      id: premium_page_blob_tier
      type:
      - azure.storage.blob.models.PremiumPageBlobTier
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: Blob-updated property dict (Etag and last modified).
      type:
      - dict(str, Any)
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.resize_blob
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.set_blob_metadata
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: set_blob_metadata(metadata=None, **kwargs)
  summary: Sets user-defined metadata for the blob as one or more name-value pairs.
  syntax:
    content: set_blob_metadata(metadata=None, **kwargs)
    parameters:
    - description: 'Dict containing name and value pairs. Each call to this operation

        replaces all existing metadata attached to the blob. To remove all

        metadata from the blob, call this operation with no metadata headers.'
      id: metadata
      type:
      - dict(str, str)
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.'
      id: if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.'
      id: if_none_match
      type:
      - str
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      type:
      - azure.storage.blob.models.CustomerProvidedEncryptionKey
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: Blob-updated property dict (Etag and last modified)
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.set_blob_metadata
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.set_http_headers
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: set_http_headers(content_settings=None, **kwargs)
  summary: 'Sets system properties on the blob.


    If one property is set for the content_settings, all properties will be overriden.'
  syntax:
    content: set_http_headers(content_settings=None, **kwargs)
    parameters:
    - description: ContentSettings object used to set blob properties.
      id: content_settings
      type:
      - azure.storage.blob.models.ContentSettings
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.'
      id: if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.'
      id: if_none_match
      type:
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: Blob-updated property dict (Etag and last modified)
      type:
      - Dict[str, Any]
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.set_http_headers
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.set_premium_page_blob_tier
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: set_premium_page_blob_tier(premium_page_blob_tier, **kwargs)
  summary: Sets the page blob tiers on the blob. This API is only supported for page
    blobs on premium accounts.
  syntax:
    content: set_premium_page_blob_tier(premium_page_blob_tier, **kwargs)
    parameters:
    - description: 'A page blob tier value to set the blob to. The tier correlates
        to the size of the

        blob and number of allowed IOPS. This is only applicable to page blobs on

        premium storage accounts.'
      id: premium_page_blob_tier
      type:
      - azure.storage.blob.models.PremiumPageBlobTier
    - description: 'The timeout parameter is expressed in seconds. This method may
        make

        multiple calls to the Azure service and the timeout will apply to

        each call individually.'
      id: timeout
      type:
      - int
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    return:
      type:
      - None
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.set_premium_page_blob_tier
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.set_sequence_number
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: set_sequence_number(sequence_number_action, sequence_number=None, **kwargs)
  summary: Sets the blob sequence number.
  syntax:
    content: set_sequence_number(sequence_number_action, sequence_number=None, **kwargs)
    parameters:
    - description: 'This property indicates how the service should modify the blob''s
        sequence

        number. See <xref:azure.storage.blob.models.SequenceNumberAction> for more
        information.'
      id: sequence_number_action
      type:
      - str
    - description: 'This property sets the blob''s sequence number. The sequence number
        is a

        user-controlled property that you can use to track requests and manage

        concurrency issues.'
      id: sequence_number
      type:
      - str
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.'
      id: if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.'
      id: if_none_match
      type:
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: Blob-updated property dict (Etag and last modified).
      type:
      - dict(str, Any)
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.set_sequence_number
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.set_standard_blob_tier
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: set_standard_blob_tier(standard_blob_tier, **kwargs)
  summary: 'This operation sets the tier on a block blob.


    A block blob''s tier determines Hot/Cool/Archive storage type.

    This operation does not update the blob''s ETag.'
  syntax:
    content: set_standard_blob_tier(standard_blob_tier, **kwargs)
    parameters:
    - description: 'Indicates the tier to be set on the blob. Options include ''Hot'',
        ''Cool'',

        ''Archive''. The hot tier is optimized for storing data that is accessed

        frequently. The cool storage tier is optimized for storing data that

        is infrequently accessed and stored for at least a month. The archive

        tier is optimized for storing data that is rarely accessed and stored

        for at least six months with flexible latency requirements.'
      id: standard_blob_tier
      type:
      - str
      - azure.storage.blob.models.StandardBlobTier
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    return:
      type:
      - None
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.set_standard_blob_tier
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.stage_block
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: stage_block(block_id, data, length=None, validate_content=False, **kwargs)
  summary: Creates a new block to be committed as part of a blob.
  syntax:
    content: stage_block(block_id, data, length=None, validate_content=False, **kwargs)
    parameters:
    - description: 'A valid Base64 string value that identifies the

        block. Prior to encoding, the string must be less than or equal to 64

        bytes in size. For a given blob, the length of the value specified for

        the block_id parameter must be the same size for each block.'
      id: block_id
      type:
      - str
    - description: The blob data.
      id: data
    - description: Size of the block.
      id: length
      type:
      - int
    - description: 'If true, calculates an MD5 hash for each chunk of the blob. The
        storage

        service checks the hash of the content that has arrived with the hash

        that was sent. This is primarily valuable for detecting bitflips on

        the wire if using http instead of https as https (the default) will

        already validate. Note that this MD5 hash is not stored with the

        blob. Also note that if enabled, the memory-efficient upload algorithm

        will not be used, because computing the MD5 hash requires buffering

        entire blocks, and doing so defeats the purpose of the memory-efficient algorithm.'
      id: validate_content
      type:
      - bool
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: Defaults to UTF-8.
      id: encoding
      type:
      - str
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      type:
      - azure.storage.blob.models.CustomerProvidedEncryptionKey
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      type:
      - None
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.stage_block
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.stage_block_from_url
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: stage_block_from_url(block_id, source_url, source_offset=None, source_length=None,
    source_content_md5=None, **kwargs)
  summary: 'Creates a new block to be committed as part of a blob where

    the contents are read from a URL.'
  syntax:
    content: stage_block_from_url(block_id, source_url, source_offset=None, source_length=None,
      source_content_md5=None, **kwargs)
    parameters:
    - description: 'A valid Base64 string value that identifies the

        block. Prior to encoding, the string must be less than or equal to 64

        bytes in size. For a given blob, the length of the value specified for

        the block_id parameter must be the same size for each block.'
      id: block_id
      type:
      - str
    - description: The URL.
      id: source_url
    - description: 'Start of byte range to use for the block.

        Must be set if source length is provided.'
      id: source_offset
    - description: The size of the block in bytes.
      id: source_length
    - description: 'Specify the md5 calculated for the range of

        bytes that must be read from the copy source.'
      id: source_content_md5
      type:
      - bytearray
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      type:
      - azure.storage.blob.models.CustomerProvidedEncryptionKey
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      type:
      - None
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.stage_block_from_url
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.start_copy_from_url
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: start_copy_from_url(source_url, metadata=None, incremental_copy=False, **kwargs)
  summary: 'Copies a blob asynchronously.


    This operation returns a copy operation

    object that can be used to wait on the completion of the operation,

    as well as check status or abort the copy operation.

    The Blob service copies blobs on a best-effort basis.


    The source blob for a copy operation may be a block blob, an append blob,

    or a page blob. If the destination blob already exists, it must be of the

    same blob type as the source blob. Any existing destination blob will be

    overwritten. The destination blob cannot be modified while a copy operation

    is in progress.


    When copying from a page blob, the Blob service creates a destination page

    blob of the source blob''s length, initially containing all zeroes. Then

    the source page ranges are enumerated, and non-empty ranges are copied.


    For a block blob or an append blob, the Blob service creates a committed

    blob of zero length before returning from this operation. When copying

    from a block blob, all committed blocks and their block IDs are copied.

    Uncommitted blocks are not copied. At the end of the copy operation, the

    destination blob will have the same committed block count as the source.


    When copying from an append blob, all committed blocks are copied. At the

    end of the copy operation, the destination blob will have the same committed

    block count as the source.


    For all blob types, you can call status() on the returned polling object

    to check the status of the copy operation, or wait() to block until the

    operation is complete. The final blob will be committed when the copy completes.'
  syntax:
    content: start_copy_from_url(source_url, metadata=None, incremental_copy=False,
      **kwargs)
    parameters:
    - description: 'A URL of up to 2 KB in length that specifies an Azure file or
        blob.

        The value should be URL-encoded as it would appear in a request URI.

        If the source is in another account, the source must either be public

        or must be authenticated via a shared access signature. If the source

        is public, no authentication is required.

        Examples:

        [https://myaccount.blob.core.windows.net/mycontainer/myblob](https://myaccount.blob.core.windows.net/mycontainer/myblob)


        [https://myaccount.blob.core.windows.net/mycontainer/myblob](https://myaccount.blob.core.windows.net/mycontainer/myblob)?snapshot=<DateTime>


        [https://otheraccount.blob.core.windows.net/mycontainer/myblob?sastoken](https://otheraccount.blob.core.windows.net/mycontainer/myblob?sastoken)'
      id: source_url
      type:
      - str
    - description: 'Name-value pairs associated with the blob as metadata. If no name-value

        pairs are specified, the operation will copy the metadata from the

        source blob or file to the destination blob. If one or more name-value

        pairs are specified, the destination blob is created with the specified

        metadata, and metadata is not copied from the source blob or file.'
      id: metadata
      type:
      - dict(str, str)
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this conditional header to copy the blob only if the source

        blob has been modified since the specified date/time.'
      id: source_if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this conditional header to copy the blob only if the source blob

        has not been modified since the specified date/time.'
      id: source_if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this conditional

        header to copy the source blob only if its ETag matches the value

        specified. If the ETag values do not match, the Blob service returns

        status code 412 (Precondition Failed). This header cannot be specified

        if the source is an Azure File.'
      id: source_if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this conditional

        header to copy the blob only if its ETag does not match the value

        specified. If the values are identical, the Blob service returns status

        code 412 (Precondition Failed). This header cannot be specified if the

        source is an Azure File.'
      id: source_if_none_match
      type:
      - str
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this conditional header to copy the blob only

        if the destination blob has been modified since the specified date/time.

        If the destination blob has not been modified, the Blob service returns

        status code 412 (Precondition Failed).'
      id: destination_if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this conditional header to copy the blob only

        if the destination blob has not been modified since the specified

        date/time. If the destination blob has been modified, the Blob service

        returns status code 412 (Precondition Failed).'
      id: destination_if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify an ETag
        value for

        this conditional header to copy the blob only if the specified ETag value

        matches the ETag value for an existing destination blob. If the ETag for

        the destination blob does not match the ETag specified for If-Match, the

        Blob service returns status code 412 (Precondition Failed).'
      id: destination_if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify an ETag
        value for

        this conditional header to copy the blob only if the specified ETag value

        does not match the ETag value for the destination blob. Specify the wildcard

        character (*) to perform the operation only if the destination blob does not

        exist. If the specified condition isn''t met, the Blob service returns status

        code 412 (Precondition Failed).'
      id: destination_if_none_match
      type:
      - str
    - description: 'The lease ID specified for this header must match the lease ID
        of the

        destination blob. If the request does not include the lease ID or it is not

        valid, the operation fails with status code 412 (Precondition Failed).'
      id: destination_lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: 'Specify this to perform the Copy Blob operation only if

        the lease ID given matches the active lease ID of the source blob.'
      id: source_lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    - description: 'Copies the snapshot of the source page blob to a destination page
        blob.

        The snapshot is copied such that only the differential changes between

        the previously copied snapshot are transferred to the destination.

        The copied snapshots are complete copies of the original snapshot and

        can be read or copied from as usual. Defaults to False.'
      id: incremental_copy
      type:
      - bool
    - description: 'A page blob tier value to set the blob to. The tier correlates
        to the size of the

        blob and number of allowed IOPS. This is only applicable to page blobs on

        premium storage accounts.'
      id: premium_page_blob_tier
      type:
      - azure.storage.blob.models.PremiumPageBlobTier
    - description: Enforces that the service will not return a response until the
        copy is complete.
      id: requires_sync
      type:
      - bool
    return:
      description: A dictionary of copy properties (etag, last_modified, copy_id,
        copy_status).
      type:
      - Dict[str, Union[str, datetime]]
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.start_copy_from_url
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.undelete_blob
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: undelete_blob(**kwargs)
  summary: 'Restores soft-deleted blobs or snapshots.


    Operation will only be successful if used within the specified number of days

    set in the delete retention policy.'
  syntax:
    content: undelete_blob(**kwargs)
    parameters:
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      type:
      - None
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.undelete_blob
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.upload_blob
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: 'upload_blob(data, blob_type=<BlobType.BlockBlob: ''BlockBlob''>, overwrite=False,
    length=None, metadata=None, content_settings=None, validate_content=False, max_connections=1,
    **kwargs)'
  summary: Creates a new blob from a data source with automatic chunking.
  syntax:
    content: 'upload_blob(data, blob_type=<BlobType.BlockBlob: ''BlockBlob''>, overwrite=False,
      length=None, metadata=None, content_settings=None, validate_content=False, max_connections=1,
      **kwargs)'
    parameters:
    - description: The blob data to upload.
      id: data
    - description: 'The type of the blob. This can be

        either BlockBlob, PageBlob or AppendBlob. The default value is BlockBlob.'
      id: blob_type
      type:
      - azure.storage.blob.models.BlobType
    - description: 'Whether the blob to be uploaded should overwrite the current data.

        If True, upload_blob will silently overwrite the existing data. If set to
        False, the

        operation will fail with ResourceExistsError. The exception to the above is
        with Append

        blob types. In this case, if data already exists, an error will not be raised
        and

        the data will be appended to the existing blob. If you set overwrite=True,
        then the existing

        blob will be deleted, and a new one created.'
      id: overwrite
      type:
      - bool
    - description: 'Number of bytes to read from the stream. This is optional, but

        should be supplied for optimal performance.'
      id: length
      type:
      - int
    - description: Name-value pairs associated with the blob as metadata.
      id: metadata
      type:
      - dict(str, str)
    - description: ContentSettings object used to set blob properties.
      id: content_settings
      type:
      - azure.storage.blob.models.ContentSettings
    - description: 'If true, calculates an MD5 hash for each chunk of the blob. The
        storage

        service checks the hash of the content that has arrived with the hash

        that was sent. This is primarily valuable for detecting bitflips on

        the wire if using http instead of https as https (the default) will

        already validate. Note that this MD5 hash is not stored with the

        blob. Also note that if enabled, the memory-efficient upload algorithm

        will not be used, because computing the MD5 hash requires buffering

        entire blocks, and doing so defeats the purpose of the memory-efficient algorithm.'
      id: validate_content
      type:
      - bool
    - description: 'If specified, upload_blob only succeeds if the

        blob''s lease is active and matches this ID.

        Required if the blob has an active lease.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.'
      id: if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.'
      id: if_none_match
      type:
      - str
    - description: 'A page blob tier value to set the blob to. The tier correlates
        to the size of the

        blob and number of allowed IOPS. This is only applicable to page blobs on

        premium storage accounts.'
      id: premium_page_blob_tier
      type:
      - azure.storage.blob.models.PremiumPageBlobTier
    - description: 'Optional conditional header. The max length in bytes permitted
        for

        the append blob. If the Append Block operation would cause the blob

        to exceed that limit or if the blob size is already greater than the

        value specified in this header, the request will fail with

        MaxBlobSizeConditionNotMet error (HTTP status code 412 - Precondition Failed).'
      id: maxsize_condition
      type:
      - int
    - description: 'Maximum number of parallel connections to use when the blob size
        exceeds

        64MB.'
      id: max_connections
      type:
      - int
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      type:
      - azure.storage.blob.models.CustomerProvidedEncryptionKey
    - description: Defaults to UTF-8.
      id: encoding
      type:
      - str
    - description: 'The timeout parameter is expressed in seconds. This method may
        make

        multiple calls to the Azure service and the timeout will apply to

        each call individually.'
      id: timeout
      type:
      - int
    return:
      description: Blob-updated property dict (Etag and last modified)
      type:
      - dict[str, Any]
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.upload_blob
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.upload_page
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: upload_page(page, start_range, end_range, length=None, validate_content=False,
    **kwargs)
  summary: The Upload Pages operation writes a range of pages to a page blob.
  syntax:
    content: upload_page(page, start_range, end_range, length=None, validate_content=False,
      **kwargs)
    parameters:
    - description: Content of the page.
      id: page
      type:
      - bytes
    - description: 'Start of byte range to use for writing to a section of the blob.

        Pages must be aligned with 512-byte boundaries, the start offset

        must be a modulus of 512 and the end offset must be a modulus of

        512-1. Examples of valid byte ranges are 0-511, 512-1023, etc.'
      id: start_range
      type:
      - int
    - description: 'End of byte range to use for writing to a section of the blob.

        Pages must be aligned with 512-byte boundaries, the start offset

        must be a modulus of 512 and the end offset must be a modulus of

        512-1. Examples of valid byte ranges are 0-511, 512-1023, etc.'
      id: end_range
      type:
      - int
    - description: Length of the page
      id: length
      type:
      - int
    - description: 'Required if the blob has an active lease. Value can be a LeaseClient
        object

        or the lease ID as a string.'
      id: lease
      type:
      - azure.storage.blob.lease.LeaseClient
      - str
    - description: 'If true, calculates an MD5 hash of the page content. The storage

        service checks the hash of the content that has arrived

        with the hash that was sent. This is primarily valuable for detecting

        bitflips on the wire if using http instead of https as https (the default)

        will already validate. Note that this MD5 hash is not stored with the

        blob.'
      id: validate_content
      type:
      - bool
    - description: 'If the blob''s sequence number is less than or equal to

        the specified value, the request proceeds; otherwise it fails.'
      id: if_sequence_number_lte
      type:
      - int
    - description: 'If the blob''s sequence number is less than the specified

        value, the request proceeds; otherwise it fails.'
      id: if_sequence_number_lt
      type:
      - int
    - description: 'If the blob''s sequence number is equal to the specified

        value, the request proceeds; otherwise it fails.'
      id: if_sequence_number_eq
      type:
      - int
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify an ETag
        value for this conditional

        header to write the page only if the blob''s ETag value matches the

        value specified. If the values do not match, the Blob service fails.'
      id: if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify an ETag
        value for this conditional

        header to write the page only if the blob''s ETag value does not

        match the value specified. If the values are identical, the Blob

        service fails.'
      id: if_none_match
      type:
      - str
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      type:
      - azure.storage.blob.models.CustomerProvidedEncryptionKey
    - description: Defaults to UTF-8.
      id: encoding
      type:
      - str
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
    return:
      description: Blob-updated property dict (Etag and last modified).
      type:
      - dict(str, Any)
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.upload_page
- class: azure.storage.blob.blob_client.BlobClient
  fullName: azure.storage.blob.blob_client.BlobClient.upload_pages_from_url
  langs:
  - python
  module: azure.storage.blob.blob_client
  name: upload_pages_from_url(source_url, range_start, range_end, source_range_start,
    source_content_md5=None, **kwargs)
  summary: Updates a range of pages to a page blob where the contents are read from
    a URL.
  syntax:
    content: upload_pages_from_url(source_url, range_start, range_end, source_range_start,
      source_content_md5=None, **kwargs)
    parameters:
    - description: 'The URL of the source data. It can point to any Azure Blob or
        File, that is either public or has a

        shared access signature attached.'
      id: source_url
      type:
      - str
    - description: 'Start of byte range to use for writing to a section of the blob.

        Pages must be aligned with 512-byte boundaries, the start offset

        must be a modulus of 512 and the end offset must be a modulus of

        512-1. Examples of valid byte ranges are 0-511, 512-1023, etc.'
      id: range_start
      type:
      - int
    - description: 'End of byte range to use for writing to a section of the blob.

        Pages must be aligned with 512-byte boundaries, the start offset

        must be a modulus of 512 and the end offset must be a modulus of

        512-1. Examples of valid byte ranges are 0-511, 512-1023, etc.'
      id: range_end
      type:
      - int
    - description: 'This indicates the start of the range of bytes(inclusive) that
        has to be taken from the copy source.

        The service will read the same number of bytes as the destination range (end_range-start_range).'
      id: source_range_start
      type:
      - int
    - description: If given, the service will calculate the MD5 hash of the block
        content and compare against this value.
      id: source_content_md5
      type:
      - bytes
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the source resource has been modified since the specified time.'
      id: source_if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the source resource has not been modified since the specified date/time.'
      id: source_if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the source resource''s ETag matches the value specified.'
      id: source_if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the source resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the source resource does not exist, and fail the

        operation if it does exist.'
      id: source_if_none_match
      type:
      - str
    - description: Required if the blob has an active lease.
      id: lease
      type:
      - str
    - description: 'If the blob''s sequence number is less than or equal to

        the specified value, the request proceeds; otherwise it fails.'
      id: if_sequence_number_lte
      type:
      - int
    - description: 'If the blob''s sequence number is less than the specified

        value, the request proceeds; otherwise it fails.'
      id: if_sequence_number_lt
      type:
      - int
    - description: 'If the blob''s sequence number is equal to the specified

        value, the request proceeds; otherwise it fails.'
      id: if_sequence_number_eq
      type:
      - int
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only

        if the resource has been modified since the specified time.'
      id: if_modified_since
      type:
      - datetime
    - description: 'A DateTime value. Azure expects the date value passed in to be
        UTC.

        If timezone is included, any non-UTC datetimes will be converted to UTC.

        If a date is passed in without timezone info, it is assumed to be UTC.

        Specify this header to perform the operation only if

        the resource has not been modified since the specified date/time.'
      id: if_unmodified_since
      type:
      - datetime
    - description: 'An ETag value, or the wildcard character (*). Specify this header
        to perform

        the operation only if the resource''s ETag matches the value specified.'
      id: if_match
      type:
      - str
    - description: 'An ETag value, or the wildcard character (*). Specify this header

        to perform the operation only if the resource''s ETag does not match

        the value specified. Specify the wildcard character (*) to perform

        the operation only if the resource does not exist, and fail the

        operation if it does exist.'
      id: if_none_match
      type:
      - str
    - description: 'Encrypts the data on the service-side with the given key.

        Use of customer-provided keys must be done over HTTPS.

        As the encryption key itself is provided in the request,

        a secure connection must be established to transfer the key.'
      id: cpk
      type:
      - azure.storage.blob.models.CustomerProvidedEncryptionKey
    - description: The timeout parameter is expressed in seconds.
      id: timeout
      type:
      - int
  type: method
  uid: azure.storage.blob.blob_client.BlobClient.upload_pages_from_url
references:
- fullName: azure.storage.blob.blob_client.BlobClient.abort_copy
  isExternal: false
  name: abort_copy(copy_id, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.abort_copy
- fullName: azure.storage.blob.blob_client.BlobClient.acquire_lease
  isExternal: false
  name: acquire_lease(lease_duration=-1, lease_id=None, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.acquire_lease
- fullName: azure.storage.blob.blob_client.BlobClient.append_block
  isExternal: false
  name: append_block(data, length=None, validate_content=False, maxsize_condition=None,
    appendpos_condition=None, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.append_block
- fullName: azure.storage.blob.blob_client.BlobClient.append_block_from_url
  isExternal: false
  name: append_block_from_url(copy_source_url, source_range_start=None, source_range_end=None,
    source_content_md5=None, maxsize_condition=None, appendpos_condition=None, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.append_block_from_url
- fullName: azure.storage.blob.blob_client.BlobClient.clear_page
  isExternal: false
  name: clear_page(start_range, end_range, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.clear_page
- fullName: azure.storage.blob.blob_client.BlobClient.commit_block_list
  isExternal: false
  name: commit_block_list(block_list, content_settings=None, metadata=None, validate_content=False,
    **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.commit_block_list
- fullName: azure.storage.blob.blob_client.BlobClient.create_append_blob
  isExternal: false
  name: create_append_blob(content_settings=None, metadata=None, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.create_append_blob
- fullName: azure.storage.blob.blob_client.BlobClient.create_page_blob
  isExternal: false
  name: create_page_blob(size, content_settings=None, sequence_number=None, metadata=None,
    premium_page_blob_tier=None, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.create_page_blob
- fullName: azure.storage.blob.blob_client.BlobClient.create_snapshot
  isExternal: false
  name: create_snapshot(metadata=None, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.create_snapshot
- fullName: azure.storage.blob.blob_client.BlobClient.delete_blob
  isExternal: false
  name: delete_blob(delete_snapshots=False, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.delete_blob
- fullName: azure.storage.blob.blob_client.BlobClient.download_blob
  isExternal: false
  name: download_blob(offset=None, length=None, validate_content=False, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.download_blob
- fullName: azure.storage.blob.blob_client.BlobClient.from_connection_string
  isExternal: false
  name: from_connection_string(conn_str, container, blob, snapshot=None, credential=None,
    **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.from_connection_string
- fullName: azure.storage.blob.blob_client.BlobClient.generate_shared_access_signature
  isExternal: false
  name: generate_shared_access_signature(permission=None, expiry=None, start=None,
    policy_id=None, ip=None, protocol=None, account_name=None, cache_control=None,
    content_disposition=None, content_encoding=None, content_language=None, content_type=None,
    user_delegation_key=None)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.generate_shared_access_signature
- fullName: azure.storage.blob.blob_client.BlobClient.get_account_information
  isExternal: false
  name: get_account_information(**kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.get_account_information
- fullName: azure.storage.blob.blob_client.BlobClient.get_blob_properties
  isExternal: false
  name: get_blob_properties(**kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.get_blob_properties
- fullName: azure.storage.blob.blob_client.BlobClient.get_block_list
  isExternal: false
  name: get_block_list(block_list_type='committed', **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.get_block_list
- fullName: azure.storage.blob.blob_client.BlobClient.get_page_ranges
  isExternal: false
  name: get_page_ranges(start_range=None, end_range=None, previous_snapshot_diff=None,
    **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.get_page_ranges
- fullName: azure.storage.blob.blob_client.BlobClient.resize_blob
  isExternal: false
  name: resize_blob(size, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.resize_blob
- fullName: azure.storage.blob.blob_client.BlobClient.set_blob_metadata
  isExternal: false
  name: set_blob_metadata(metadata=None, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.set_blob_metadata
- fullName: azure.storage.blob.blob_client.BlobClient.set_http_headers
  isExternal: false
  name: set_http_headers(content_settings=None, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.set_http_headers
- fullName: azure.storage.blob.blob_client.BlobClient.set_premium_page_blob_tier
  isExternal: false
  name: set_premium_page_blob_tier(premium_page_blob_tier, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.set_premium_page_blob_tier
- fullName: azure.storage.blob.blob_client.BlobClient.set_sequence_number
  isExternal: false
  name: set_sequence_number(sequence_number_action, sequence_number=None, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.set_sequence_number
- fullName: azure.storage.blob.blob_client.BlobClient.set_standard_blob_tier
  isExternal: false
  name: set_standard_blob_tier(standard_blob_tier, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.set_standard_blob_tier
- fullName: azure.storage.blob.blob_client.BlobClient.stage_block
  isExternal: false
  name: stage_block(block_id, data, length=None, validate_content=False, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.stage_block
- fullName: azure.storage.blob.blob_client.BlobClient.stage_block_from_url
  isExternal: false
  name: stage_block_from_url(block_id, source_url, source_offset=None, source_length=None,
    source_content_md5=None, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.stage_block_from_url
- fullName: azure.storage.blob.blob_client.BlobClient.start_copy_from_url
  isExternal: false
  name: start_copy_from_url(source_url, metadata=None, incremental_copy=False, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.start_copy_from_url
- fullName: azure.storage.blob.blob_client.BlobClient.undelete_blob
  isExternal: false
  name: undelete_blob(**kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.undelete_blob
- fullName: azure.storage.blob.blob_client.BlobClient.upload_blob
  isExternal: false
  name: 'upload_blob(data, blob_type=<BlobType.BlockBlob: ''BlockBlob''>, overwrite=False,
    length=None, metadata=None, content_settings=None, validate_content=False, max_connections=1,
    **kwargs)'
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.upload_blob
- fullName: azure.storage.blob.blob_client.BlobClient.upload_page
  isExternal: false
  name: upload_page(page, start_range, end_range, length=None, validate_content=False,
    **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.upload_page
- fullName: azure.storage.blob.blob_client.BlobClient.upload_pages_from_url
  isExternal: false
  name: upload_pages_from_url(source_url, range_start, range_end, source_range_start,
    source_content_md5=None, **kwargs)
  parent: azure.storage.blob.blob_client.BlobClient
  uid: azure.storage.blob.blob_client.BlobClient.upload_pages_from_url
- fullName: dict(str, Any)
  name: dict(str, Any)
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: Any
    name: Any
    uid: Any
  - fullName: )
    name: )
  uid: dict(str, Any)
- fullName: dict[str, str]
  name: dict[str, str]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: dict[str, str]
- fullName: dict(str, str)
  name: dict(str, str)
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: )
    name: )
  uid: dict(str, str)
- fullName: dict[str, Any]
  name: dict[str, Any]
  spec.python:
  - fullName: dict
    name: dict
    uid: dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: Any
    name: Any
    uid: Any
  - fullName: ']'
    name: ']'
  uid: dict[str, Any]
- fullName: tuple(list(azure.storage.blob.models.BlobBlock), list(azure.storage.blob.models.BlobBlock))
  name: tuple(list(BlobBlock), list(BlobBlock))
  spec.python:
  - fullName: tuple
    name: tuple
    uid: tuple
  - fullName: (
    name: (
  - fullName: list
    name: list
    uid: list
  - fullName: (
    name: (
  - fullName: azure.storage.blob.models.BlobBlock
    name: BlobBlock
    uid: azure.storage.blob.models.BlobBlock
  - fullName: )
    name: )
  - fullName: ', '
    name: ', '
  - fullName: list
    name: list
    uid: list
  - fullName: (
    name: (
  - fullName: azure.storage.blob.models.BlobBlock
    name: BlobBlock
    uid: azure.storage.blob.models.BlobBlock
  - fullName: )
    name: )
  - fullName: )
    name: )
  uid: tuple(list(azure.storage.blob.models.BlobBlock), list(azure.storage.blob.models.BlobBlock))
- fullName: tuple(list(dict(str, str), list(dict(str, str))
  name: tuple(list(dict(str, str), list(dict(str, str))
  spec.python:
  - fullName: tuple
    name: tuple
    uid: tuple
  - fullName: (
    name: (
  - fullName: list
    name: list
    uid: list
  - fullName: (
    name: (
  - fullName: dict
    name: dict
    uid: dict
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: )
    name: )
  - fullName: ', '
    name: ', '
  - fullName: list
    name: list
    uid: list
  - fullName: (
    name: (
  - fullName: dict
    name: dict
    uid: dict
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: str
    name: str
    uid: str
  - fullName: )
    name: )
  - fullName: )
    name: )
  uid: tuple(list(dict(str, str), list(dict(str, str))
- fullName: Dict[str, Any]
  name: Dict[str, Any]
  spec.python:
  - fullName: Dict
    name: Dict
    uid: Dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: Any
    name: Any
    uid: Any
  - fullName: ']'
    name: ']'
  uid: Dict[str, Any]
- fullName: Dict[str, Union[str, datetime]]
  name: Dict[str, Union[str, datetime]]
  spec.python:
  - fullName: Dict
    name: Dict
    uid: Dict
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: Union
    name: Union
    uid: Union
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ', '
    name: ', '
  - fullName: datetime
    name: datetime
    uid: datetime
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: Dict[str, Union[str, datetime]]
