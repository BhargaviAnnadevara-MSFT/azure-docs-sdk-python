### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations.get
  - azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations.list
  - azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations.models
  class: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations
  fullName: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.network.v2020_03_01.aio.operations_async
  name: ExpressRoutePortsLocationsOperations
  summary: 'ExpressRoutePortsLocationsOperations async operations.


    You should not instantiate this class directly. Instead, you should create a Client
    instance that

    instantiates it for you and attaches it as an attribute.'
  syntax:
    content: ExpressRoutePortsLocationsOperations(client, config, serializer, deserializer)
      -> None
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An object model deserializer.
      id: deserializer
    variables:
    - description: Alias to model classes used in this operation group.
      id: models
  type: class
  uid: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations
- class: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations
  fullName: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations.get
  langs:
  - python
  module: azure.mgmt.network.v2020_03_01.aio.operations_async
  name: 'get(location_name: str, **kwargs) -> azure.mgmt.network.v2020_03_01.models._models_py3.ExpressRoutePortsLocation'
  namewithoutparameters: get
  summary: 'Retrieves a single ExpressRoutePort peering location, including the list
    of available

    bandwidths available at said peering location.'
  syntax:
    content: 'get(location_name: str, **kwargs) -> azure.mgmt.network.v2020_03_01.models._models_py3.ExpressRoutePortsLocation'
    parameters:
    - description: Name of the requested ExpressRoutePort peering location.
      id: location_name
      isRequired: true
      type:
      - str
    - description: A custom type or function that will be passed the direct response
      id: cls
      isRequired: true
      type:
      - callable
    return:
      description: ExpressRoutePortsLocation, or the result of cls(response)
      type:
      - azure.mgmt.network.v2020_03_01.models.ExpressRoutePortsLocation
  type: method
  uid: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations.get
- class: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations
  fullName: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations.list
  langs:
  - python
  module: azure.mgmt.network.v2020_03_01.aio.operations_async
  name: list(**kwargs) -> typing.AsyncIterable[ForwardRef('models.ExpressRoutePortsLocationListResult')]
  namewithoutparameters: list
  summary: "Retrieves all ExpressRoutePort peering locations. Does not return available\
    \ bandwidths for each\nlocation. Available bandwidths can only be obtained when\
    \ retrieving a specific peering\nlocation.\n\n   keyword callable cls:\n     \
    \ A custom type or function that will be passed the direct response\n\n   return:\n\
    \      An iterator like instance of either ExpressRoutePortsLocationListResult\
    \ or the result of cls(response)\n\n   rtype:\n      ~azure.core.async_paging.AsyncItemPaged[~azure.mgmt.network.v2020_03_01.models.ExpressRoutePortsLocationListResult]\n\
    \n   raises:\n      ~azure.core.exceptions.HttpResponseError"
  syntax:
    content: list(**kwargs) -> typing.AsyncIterable[ForwardRef('models.ExpressRoutePortsLocationListResult')]
  type: method
  uid: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations.list
- class: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations
  fullName: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations.models
  langs:
  - python
  module: azure.mgmt.network.v2020_03_01.aio.operations_async
  name: models
  syntax:
    content: models = <module 'azure.mgmt.network.v2020_03_01.models' from 'c:\\repo\\venv\\lib\\site-packages\\azure\\mgmt\\network\\v2020_03_01\\models\\__init__.py'>
  type: attribute
  uid: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations.models
references:
- fullName: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations.get
  isExternal: false
  name: 'get(location_name: str, **kwargs) -> azure.mgmt.network.v2020_03_01.models._models_py3.ExpressRoutePortsLocation'
  parent: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations
  uid: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations.get
- fullName: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations.list
  isExternal: false
  name: list(**kwargs) -> typing.AsyncIterable[ForwardRef('models.ExpressRoutePortsLocationListResult')]
  parent: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations
  uid: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations.list
- fullName: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations.models
  isExternal: false
  name: models
  parent: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations
  uid: azure.mgmt.network.v2020_03_01.aio.operations_async.ExpressRoutePortsLocationsOperations.models
