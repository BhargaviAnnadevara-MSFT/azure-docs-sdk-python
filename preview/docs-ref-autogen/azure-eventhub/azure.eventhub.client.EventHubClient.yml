### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.eventhub.client.EventHubClient.close
  - azure.eventhub.client.EventHubClient.create_consumer
  - azure.eventhub.client.EventHubClient.create_producer
  - azure.eventhub.client.EventHubClient.get_partition_ids
  - azure.eventhub.client.EventHubClient.get_partition_properties
  - azure.eventhub.client.EventHubClient.get_properties
  class: azure.eventhub.client.EventHubClient
  fullName: azure.eventhub.client.EventHubClient
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.eventhub.client_abstract.EventHubClientAbstract
  langs:
  - python
  module: azure.eventhub.client
  name: EventHubClient
  summary: 'The EventHubClient class defines a high level interface for sending

    events to and receiving events from the Azure Event Hubs service.'
  syntax:
    content: EventHubClient(host, event_hub_path, credential, **kwargs)
  type: class
  uid: azure.eventhub.client.EventHubClient
- class: azure.eventhub.client.EventHubClient
  fullName: azure.eventhub.client.EventHubClient.close
  langs:
  - python
  module: azure.eventhub.client
  name: close()
  syntax:
    content: close()
    parameters: []
  type: method
  uid: azure.eventhub.client.EventHubClient.close
- class: azure.eventhub.client.EventHubClient
  fullName: azure.eventhub.client.EventHubClient.create_consumer
  langs:
  - python
  module: azure.eventhub.client
  name: create_consumer(consumer_group, partition_id, event_position, **kwargs)
  summary: Create a consumer to the client for a particular consumer group and partition.
  syntax:
    content: create_consumer(consumer_group, partition_id, event_position, **kwargs)
    parameters:
    - description: 'The name of the consumer group this consumer is associated with.

        Events are read in the context of this group. The default consumer_group for
        an event hub is "$Default".'
      id: consumer_group
      type:
      - str
    - description: The identifier of the Event Hub partition from which events will
        be received.
      id: partition_id
      type:
      - str
    - description: The position within the partition where the consumer should begin
        reading events.
      id: event_position
      type:
      - azure.eventhub.common.EventPosition
    - description: 'The priority of the exclusive consumer. The client will create
        an exclusive

        consumer if owner_level is set.'
      id: owner_level
      type:
      - int
    - description: The message prefetch count of the consumer. Default is 300.
      id: prefetch
      type:
      - int
    - description: 'Indicates whether or not the consumer should request information

        on the last enqueued event on its associated partition, and track that information
        as events are received.

        When information about the partition''s last enqueued event is being tracked,
        each event received from the

        Event Hubs service will carry metadata about the partition. This results in
        a small amount of additional

        network bandwidth consumption that is generally a favorable trade-off when
        considered against periodically

        making requests for partition properties using the Event Hub client.

        It is set to *False* by default.'
      id: track_last_enqueued_event_properties
      type:
      - bool
    return:
      type:
      - azure.eventhub.consumer.EventHubConsumer
  type: method
  uid: azure.eventhub.client.EventHubClient.create_consumer
- class: azure.eventhub.client.EventHubClient
  fullName: azure.eventhub.client.EventHubClient.create_producer
  langs:
  - python
  module: azure.eventhub.client
  name: create_producer(partition_id=None, send_timeout=None)
  summary: Create an producer to send EventData object to an EventHub.
  syntax:
    content: create_producer(partition_id=None, send_timeout=None)
    parameters:
    - defaultValue: None
      description: 'Optionally specify a particular partition to send to.

        If omitted, the events will be distributed to available partitions via

        round-robin.'
      id: partition_id
      type:
      - str
    - defaultValue: None
      description: 'An optional operation to be appended to the hostname in the target
        URL.

        The value must start with */* character.'
      id: operation
      type:
      - str
    - description: 'The timeout in seconds for an individual event to be sent from
        the time that it is

        queued. Default value is 60 seconds. If set to 0, there will be no timeout.'
      id: send_timeout
      type:
      - float
    return:
      type:
      - azure.eventhub.producer.EventHubProducer
  type: method
  uid: azure.eventhub.client.EventHubClient.create_producer
- class: azure.eventhub.client.EventHubClient
  fullName: azure.eventhub.client.EventHubClient.get_partition_ids
  langs:
  - python
  module: azure.eventhub.client
  name: get_partition_ids()
  summary: Get partition ids of the specified EventHub.
  syntax:
    content: get_partition_ids()
    parameters: []
    return:
      type:
      - list[str]
  type: method
  uid: azure.eventhub.client.EventHubClient.get_partition_ids
- class: azure.eventhub.client.EventHubClient
  fullName: azure.eventhub.client.EventHubClient.get_partition_properties
  langs:
  - python
  module: azure.eventhub.client
  name: get_partition_properties(partition)
  summary: "Get properties of the specified partition.\nKeys in the details dictionary\
    \ include:\n\n   -'event_hub_path'\n   -'id'\n   -'beginning_sequence_number'\n\
    \   -'last_enqueued_sequence_number'\n   -'last_enqueued_offset'\n   -'last_enqueued_time_utc'\n\
    \   -'is_empty'"
  syntax:
    content: get_partition_properties(partition)
    parameters:
    - description: The target partition id.
      id: partition
      type:
      - str
    return:
      type:
      - dict
  type: method
  uid: azure.eventhub.client.EventHubClient.get_partition_properties
- class: azure.eventhub.client.EventHubClient
  fullName: azure.eventhub.client.EventHubClient.get_properties
  langs:
  - python
  module: azure.eventhub.client
  name: get_properties()
  summary: "Get properties of the specified EventHub.\nKeys in the details dictionary\
    \ include:\n\n   -'path'\n   -'created_at'\n   -'partition_ids'"
  syntax:
    content: get_properties()
    parameters: []
    return:
      type:
      - dict
  type: method
  uid: azure.eventhub.client.EventHubClient.get_properties
references:
- fullName: azure.eventhub.client.EventHubClient.close
  isExternal: false
  name: close()
  parent: azure.eventhub.client.EventHubClient
  uid: azure.eventhub.client.EventHubClient.close
- fullName: azure.eventhub.client.EventHubClient.create_consumer
  isExternal: false
  name: create_consumer(consumer_group, partition_id, event_position, **kwargs)
  parent: azure.eventhub.client.EventHubClient
  uid: azure.eventhub.client.EventHubClient.create_consumer
- fullName: azure.eventhub.client.EventHubClient.create_producer
  isExternal: false
  name: create_producer(partition_id=None, send_timeout=None)
  parent: azure.eventhub.client.EventHubClient
  uid: azure.eventhub.client.EventHubClient.create_producer
- fullName: azure.eventhub.client.EventHubClient.get_partition_ids
  isExternal: false
  name: get_partition_ids()
  parent: azure.eventhub.client.EventHubClient
  uid: azure.eventhub.client.EventHubClient.get_partition_ids
- fullName: azure.eventhub.client.EventHubClient.get_partition_properties
  isExternal: false
  name: get_partition_properties(partition)
  parent: azure.eventhub.client.EventHubClient
  uid: azure.eventhub.client.EventHubClient.get_partition_properties
- fullName: azure.eventhub.client.EventHubClient.get_properties
  isExternal: false
  name: get_properties()
  parent: azure.eventhub.client.EventHubClient
  uid: azure.eventhub.client.EventHubClient.get_properties
- fullName: list[str]
  name: list[str]
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: '['
    name: '['
  - fullName: str
    name: str
    uid: str
  - fullName: ']'
    name: ']'
  uid: list[str]
