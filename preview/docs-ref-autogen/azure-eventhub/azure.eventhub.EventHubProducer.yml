### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.eventhub.EventHubProducer.close
  - azure.eventhub.EventHubProducer.create_batch
  - azure.eventhub.EventHubProducer.send
  class: azure.eventhub.EventHubProducer
  fullName: azure.eventhub.EventHubProducer
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.eventhub._consumer_producer_mixin.ConsumerProducerMixin
  langs:
  - python
  module: azure.eventhub
  name: EventHubProducer
  summary: 'A producer responsible for transmitting EventData to a specific Event
    Hub,

    grouped together in batches. Depending on the options specified at creation, the
    producer may

    be created to allow event data to be automatically routed to an available partition
    or specific

    to a partition.'
  syntax:
    content: EventHubProducer(client, target, **kwargs)
  type: class
  uid: azure.eventhub.EventHubProducer
- class: azure.eventhub.EventHubProducer
  fullName: azure.eventhub.EventHubProducer.close
  langs:
  - python
  module: azure.eventhub
  name: close(exception=None)
  summary: 'Close down the handler. If the handler has already closed,

    this will be a no op. An optional exception can be passed in to

    indicate that the handler was shutdown due to error.'
  syntax:
    content: close(exception=None)
    parameters:
    - defaultValue: None
      description: 'An optional exception if the handler is closing

        due to an error.'
      id: exception
      type:
      - Exception
  type: method
  uid: azure.eventhub.EventHubProducer.close
- class: azure.eventhub.EventHubProducer
  fullName: azure.eventhub.EventHubProducer.create_batch
  langs:
  - python
  module: azure.eventhub
  name: create_batch(max_size=None, partition_key=None)
  summary: "Create an EventDataBatch object with max size being max_size.\nThe max_size\
    \ should be no greater than the max allowed message size defined by the service\
    \ side.\n:param max_size: The maximum size of bytes data that an EventDataBatch\
    \ object can hold.\n:type max_size: int\n:param partition_key: With the given\
    \ partition_key, event data will land to\n\n\n   a particular partition of the\
    \ Event Hub decided by the service."
  syntax:
    content: create_batch(max_size=None, partition_key=None)
    parameters:
    - defaultValue: None
      id: max_size
    - defaultValue: None
      id: partition_key
    return:
      description: an EventDataBatch instance
      type:
      - azure.eventhub.EventDataBatch
  type: method
  uid: azure.eventhub.EventHubProducer.create_batch
- class: azure.eventhub.EventHubProducer
  fullName: azure.eventhub.EventHubProducer.send
  langs:
  - python
  module: azure.eventhub
  name: send(event_data, partition_key=None, timeout=None)
  summary: "Sends an event data and blocks until acknowledgement is\nreceived or operation\
    \ times out.\n\n\n:type timeout:float\n:raises: ~azure.eventhub.AuthenticationError,\
    \ ~azure.eventhub.ConnectError, ~azure.eventhub.ConnectionLostError,\n\n\n   ~azure.eventhub.EventDataError,\
    \ ~azure.eventhub.EventDataSendError, ~azure.eventhub.EventHubError"
  syntax:
    content: send(event_data, partition_key=None, timeout=None)
    parameters:
    - id: event_data
    - defaultValue: None
      id: partition_key
    - defaultValue: None
      id: timeout
    return:
      description: None
      type:
      - None
  type: method
  uid: azure.eventhub.EventHubProducer.send
references:
- fullName: azure.eventhub.EventHubProducer.close
  isExternal: false
  name: close(exception=None)
  parent: azure.eventhub.EventHubProducer
  uid: azure.eventhub.EventHubProducer.close
- fullName: azure.eventhub.EventHubProducer.create_batch
  isExternal: false
  name: create_batch(max_size=None, partition_key=None)
  parent: azure.eventhub.EventHubProducer
  uid: azure.eventhub.EventHubProducer.create_batch
- fullName: azure.eventhub.EventHubProducer.send
  isExternal: false
  name: send(event_data, partition_key=None, timeout=None)
  parent: azure.eventhub.EventHubProducer
  uid: azure.eventhub.EventHubProducer.send
