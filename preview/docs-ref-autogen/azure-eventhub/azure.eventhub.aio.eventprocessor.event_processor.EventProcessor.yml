### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.eventhub.aio.eventprocessor.event_processor.EventProcessor.start
  - azure.eventhub.aio.eventprocessor.event_processor.EventProcessor.stop
  class: azure.eventhub.aio.eventprocessor.event_processor.EventProcessor
  fullName: azure.eventhub.aio.eventprocessor.event_processor.EventProcessor
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.eventhub.aio.eventprocessor.event_processor
  name: EventProcessor
  summary: 'An EventProcessor constantly receives events from one or multiple partitions
    of the Event Hub

    in the context of a given consumer group.'
  syntax:
    content: 'EventProcessor(eventhub_client, consumer_group_name: str, event_handler:
      typing.Callable[[azure.eventhub.aio.eventprocessor.partition_context.PartitionContext,
      typing.List[azure.eventhub.common.EventData]], NoneType], *, partition_id: str
      = None, partition_manager: azure.eventhub.aio.eventprocessor.partition_manager.PartitionManager
      = None, initial_event_position=<azure.eventhub.common.EventPosition object>,
      polling_interval: float = 10.0, owner_level=None, prefetch=None, track_last_enqueued_event_properties=False,
      error_handler, partition_initialize_handler, partition_close_handler)'
  type: class
  uid: azure.eventhub.aio.eventprocessor.event_processor.EventProcessor
- class: azure.eventhub.aio.eventprocessor.event_processor.EventProcessor
  fullName: azure.eventhub.aio.eventprocessor.event_processor.EventProcessor.start
  langs:
  - python
  module: azure.eventhub.aio.eventprocessor.event_processor
  name: start()
  summary: "Start the EventProcessor.\n\nThe EventProcessor will try to claim and\
    \ balance partition ownership with other *EventProcessor*\n   and asynchronously\
    \ start receiving EventData from EventHub and processing events."
  syntax:
    content: start()
    parameters: []
    return:
      description: None
  type: method
  uid: azure.eventhub.aio.eventprocessor.event_processor.EventProcessor.start
- class: azure.eventhub.aio.eventprocessor.event_processor.EventProcessor
  fullName: azure.eventhub.aio.eventprocessor.event_processor.EventProcessor.stop
  langs:
  - python
  module: azure.eventhub.aio.eventprocessor.event_processor
  name: stop()
  summary: 'Stop the EventProcessor.


    The EventProcessor will stop receiving events from EventHubs and release the ownership
    of the partitions

    it is working on.

    Other running EventProcessor will take over these released partitions.


    A stopped EventProcessor can be restarted by calling method *start* again.'
  syntax:
    content: stop()
    parameters: []
    return:
      description: None
  type: method
  uid: azure.eventhub.aio.eventprocessor.event_processor.EventProcessor.stop
references:
- fullName: azure.eventhub.aio.eventprocessor.event_processor.EventProcessor.start
  isExternal: false
  name: start()
  parent: azure.eventhub.aio.eventprocessor.event_processor.EventProcessor
  uid: azure.eventhub.aio.eventprocessor.event_processor.EventProcessor.start
- fullName: azure.eventhub.aio.eventprocessor.event_processor.EventProcessor.stop
  isExternal: false
  name: stop()
  parent: azure.eventhub.aio.eventprocessor.event_processor.EventProcessor
  uid: azure.eventhub.aio.eventprocessor.event_processor.EventProcessor.stop
