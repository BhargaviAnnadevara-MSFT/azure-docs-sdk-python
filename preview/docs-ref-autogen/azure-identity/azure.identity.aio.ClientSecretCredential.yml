### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.identity.aio.ClientSecretCredential.get_token
  class: azure.identity.aio.ClientSecretCredential
  fullName: azure.identity.aio.ClientSecretCredential
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.identity._base.ClientSecretCredentialBase
  langs:
  - python
  module: azure.identity.aio
  name: ClientSecretCredential
  summary: "Authenticates as a service principal using a client ID and client secret.\n\
    \nKeyword arguments\n   * **authority**: Authority of an Azure Active Directory\
    \ endpoint, for example 'login.microsoftonline.com', the authority for Azure Public\
    \ Cloud (which is the default). <xref:azure.identity.KnownAuthorities> defines\
    \ authorities for other clouds."
  syntax:
    parameters:
    - description: the service principal's client ID
      id: client_id
      type:
      - str
    - description: one of the service principal's client secrets
      id: secret
      type:
      - str
    - description: ID of the service principal's tenant. Also called its 'directory'
        ID.
      id: tenant_id
      type:
      - str
  type: class
  uid: azure.identity.aio.ClientSecretCredential
- class: azure.identity.aio.ClientSecretCredential
  exceptions:
  - type: azure.core.exceptions.ClientAuthenticationError
  fullName: azure.identity.aio.ClientSecretCredential.get_token
  langs:
  - python
  module: azure.identity.aio
  name: get_token
  summary: Asynchronously request an access token for *scopes*.
  syntax:
    parameters:
    - description: desired scopes for the token
      id: scopes
      type:
      - str
    return:
      type:
      - azure.core.credentials.AccessToken
  type: method
  uid: azure.identity.aio.ClientSecretCredential.get_token
references:
- fullName: azure.identity.aio.ClientSecretCredential.get_token
  isExternal: false
  name: get_token
  parent: azure.identity.aio.ClientSecretCredential
  uid: azure.identity.aio.ClientSecretCredential.get_token
