### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.identity.aio.SharedTokenCacheCredential.get_token
  class: azure.identity.aio.SharedTokenCacheCredential
  fullName: azure.identity.aio.SharedTokenCacheCredential
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.identity._credentials.user.SharedTokenCacheCredential
  langs:
  - python
  module: azure.identity.aio
  name: SharedTokenCacheCredential
  summary: Authenticates using tokens in the local cache shared between Microsoft
    applications.
  syntax:
    content: SharedTokenCacheCredential(username, **kwargs)
    parameters:
    - description: 'Username (typically an email address) of the user to authenticate
        as. This is required because the local cache

        may contain tokens for multiple identities.'
      id: username
      type:
      - str
  type: class
  uid: azure.identity.aio.SharedTokenCacheCredential
- class: azure.identity.aio.SharedTokenCacheCredential
  exceptions:
  - type: azure.core.exceptions.ClientAuthenticationError
  fullName: azure.identity.aio.SharedTokenCacheCredential.get_token
  langs:
  - python
  module: azure.identity.aio
  name: get_token
  summary: "Get an access token for *scopes* from the shared cache. If no access token\
    \ is cached, attempt to acquire one\nusing a cached refresh token.\n\nKeyword\
    \ arguments\n   * **authority**: Authority of an Azure Active Directory endpoint,\
    \ for example 'login.microsoftonline.com', the authority for Azure Public Cloud\
    \ (which is the default). <xref:azure.identity.KnownAuthorities> defines authorities\
    \ for other clouds."
  syntax:
    parameters:
    - description: desired scopes for the token
      id: scopes
      type:
      - str
    return:
      type:
      - <xref:azure.core.credentials.AccessToken>
  type: method
  uid: azure.identity.aio.SharedTokenCacheCredential.get_token
references:
- fullName: azure.identity.aio.SharedTokenCacheCredential.get_token
  isExternal: false
  name: get_token
  parent: azure.identity.aio.SharedTokenCacheCredential
  uid: azure.identity.aio.SharedTokenCacheCredential.get_token
