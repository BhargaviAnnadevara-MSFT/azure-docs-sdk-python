### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.identity.UsernamePasswordCredential.get_token
  class: azure.identity.UsernamePasswordCredential
  fullName: azure.identity.UsernamePasswordCredential
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: abc.ABC
      type: azure.identity._internal.msal_credentials.MsalCredential
    type: azure.identity._internal.msal_credentials.PublicClientCredential
  langs:
  - python
  module: azure.identity
  name: UsernamePasswordCredential
  summary: "Authenticates a user with a username and password. In general, Microsoft\
    \ doesn't recommend this kind of\nauthentication, because it's less secure than\
    \ other authentication flows.\n\nAuthentication with this credential is not interactive,\
    \ so it is **not compatible with any form of\nmulti-factor authentication or consent\
    \ prompting**. The application must already have the user's consent.\n\nThis credential\
    \ can only authenticate work and school accounts; Microsoft accounts are not supported.\n\
    See this document for more information about account types:\n[https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/sign-up-organization](https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/sign-up-organization)\n\
    \nKeyword arguments\n   * *tenant (str)* - tenant ID or a domain associated with\
    \ a tenant. If not provided, defaults to the 'organizations' tenant, which supports\
    \ only Azure Active Directory work or school accounts."
  syntax:
    content: UsernamePasswordCredential(client_id, username, password, **kwargs)
    parameters:
    - description: the application's client ID
      id: client_id
      type:
      - str
    - description: the user's username (usually an email address)
      id: username
      type:
      - str
    - description: the user's password
      id: password
      type:
      - str
  type: class
  uid: azure.identity.UsernamePasswordCredential
- class: azure.identity.UsernamePasswordCredential
  exceptions:
  - type: azure.core.exceptions.ClientAuthenticationError
  fullName: azure.identity.UsernamePasswordCredential.get_token
  langs:
  - python
  module: azure.identity
  name: get_token(*scopes, **kwargs)
  summary: Request an access token for *scopes*.
  syntax:
    content: get_token(*scopes, **kwargs)
    parameters:
    - description: desired scopes for the token
      id: scopes
      type:
      - str
    return:
      type:
      - <xref:azure.core.credentials.AccessToken>
  type: method
  uid: azure.identity.UsernamePasswordCredential.get_token
references:
- fullName: azure.identity.UsernamePasswordCredential.get_token
  isExternal: false
  name: get_token(*scopes, **kwargs)
  parent: azure.identity.UsernamePasswordCredential
  uid: azure.identity.UsernamePasswordCredential.get_token
