### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.identity.SharedTokenCacheCredential.get_token
  - azure.identity.SharedTokenCacheCredential.supported
  class: azure.identity.SharedTokenCacheCredential
  fullName: azure.identity.SharedTokenCacheCredential
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.identity
  name: SharedTokenCacheCredential
  summary: "Authenticates using tokens in the local cache shared between Microsoft\
    \ applications.\n\nKeyword arguments\n   * **authority**: Authority of an Azure\
    \ Active Directory endpoint, for example 'login.microsoftonline.com', the authority\
    \ for Azure Public Cloud (which is the default). <xref:azure.identity.KnownAuthorities>\
    \ defines authorities for other clouds."
  syntax:
    content: SharedTokenCacheCredential(username, **kwargs)
    parameters:
    - description: 'Username (typically an email address) of the user to authenticate
        as. This is required because the local cache

        may contain tokens for multiple identities.'
      id: username
      type:
      - str
  type: class
  uid: azure.identity.SharedTokenCacheCredential
- class: azure.identity.SharedTokenCacheCredential
  exceptions:
  - type: azure.core.exceptions.ClientAuthenticationError
  fullName: azure.identity.SharedTokenCacheCredential.get_token
  langs:
  - python
  module: azure.identity
  name: get_token(*scopes, **kwargs)
  summary: 'Get an access token for *scopes* from the shared cache. If no access token
    is cached, attempt to acquire one

    using a cached refresh token.'
  syntax:
    content: get_token(*scopes, **kwargs)
    parameters:
    - description: desired scopes for the token
      id: scopes
      type:
      - str
    return:
      type:
      - azure.core.credentials.AccessToken
  type: method
  uid: azure.identity.SharedTokenCacheCredential.get_token
- class: azure.identity.SharedTokenCacheCredential
  fullName: azure.identity.SharedTokenCacheCredential.supported
  langs:
  - python
  module: azure.identity
  name: supported()
  syntax:
    content: supported()
  type: method
  uid: azure.identity.SharedTokenCacheCredential.supported
references:
- fullName: azure.identity.SharedTokenCacheCredential.get_token
  isExternal: false
  name: get_token(*scopes, **kwargs)
  parent: azure.identity.SharedTokenCacheCredential
  uid: azure.identity.SharedTokenCacheCredential.get_token
- fullName: azure.identity.SharedTokenCacheCredential.supported
  isExternal: false
  name: supported()
  parent: azure.identity.SharedTokenCacheCredential
  uid: azure.identity.SharedTokenCacheCredential.supported
