### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.iot.device.iothub.inbox_manager.InboxManager.clear_all_method_requests
  - azure.iot.device.iothub.inbox_manager.InboxManager.get_c2d_message_inbox
  - azure.iot.device.iothub.inbox_manager.InboxManager.get_input_message_inbox
  - azure.iot.device.iothub.inbox_manager.InboxManager.get_method_request_inbox
  - azure.iot.device.iothub.inbox_manager.InboxManager.get_twin_patch_inbox
  - azure.iot.device.iothub.inbox_manager.InboxManager.route_c2d_message
  - azure.iot.device.iothub.inbox_manager.InboxManager.route_input_message
  - azure.iot.device.iothub.inbox_manager.InboxManager.route_method_request
  - azure.iot.device.iothub.inbox_manager.InboxManager.route_twin_patch
  class: azure.iot.device.iothub.inbox_manager.InboxManager
  fullName: azure.iot.device.iothub.inbox_manager.InboxManager
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.iot.device.iothub.inbox_manager
  name: InboxManager
  source:
    id: InboxManager
    path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 13
  summary: Manages the various Inboxes for a client.
  syntax:
    content: InboxManager(inbox_type)
    variables:
    - description: The C2D message Inbox.
      id: c2d_message_inbox
    - description: A dictionary mapping input names to input message Inboxes.
      id: input_message_inboxes
    - description: The generic method request Inbox.
      id: generic_method_request_inbox
    - description: A dictionary mapping method names to method request Inboxes.
      id: named_method_request_inboxes
  type: class
  uid: azure.iot.device.iothub.inbox_manager.InboxManager
- class: azure.iot.device.iothub.inbox_manager.InboxManager
  fullName: azure.iot.device.iothub.inbox_manager.InboxManager.clear_all_method_requests
  langs:
  - python
  module: azure.iot.device.iothub.inbox_manager
  name: clear_all_method_requests()
  source:
    id: clear_all_method_requests
    path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 87
  summary: Delete all method requests currently in inboxes.
  syntax:
    content: clear_all_method_requests()
    parameters: []
  type: method
  uid: azure.iot.device.iothub.inbox_manager.InboxManager.clear_all_method_requests
- class: azure.iot.device.iothub.inbox_manager.InboxManager
  fullName: azure.iot.device.iothub.inbox_manager.InboxManager.get_c2d_message_inbox
  langs:
  - python
  module: azure.iot.device.iothub.inbox_manager
  name: get_c2d_message_inbox()
  source:
    id: get_c2d_message_inbox
    path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 51
  summary: Retrieve the Inbox for C2D messages.
  syntax:
    content: get_c2d_message_inbox()
    parameters: []
    return:
      description: An Inbox for C2D messages.
  type: method
  uid: azure.iot.device.iothub.inbox_manager.InboxManager.get_c2d_message_inbox
- class: azure.iot.device.iothub.inbox_manager.InboxManager
  fullName: azure.iot.device.iothub.inbox_manager.InboxManager.get_input_message_inbox
  langs:
  - python
  module: azure.iot.device.iothub.inbox_manager
  name: get_input_message_inbox(input_name)
  source:
    id: get_input_message_inbox
    path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 34
  summary: 'Retrieve the input message Inbox for a given input.


    If the Inbox does not already exist, it will be created.'
  syntax:
    content: get_input_message_inbox(input_name)
    parameters:
    - description: The name of the input for which the associated Inbox is desired.
      id: input_name
      type:
      - str
    return:
      description: An Inbox for input messages on the selected input.
  type: method
  uid: azure.iot.device.iothub.inbox_manager.InboxManager.get_input_message_inbox
- class: azure.iot.device.iothub.inbox_manager.InboxManager
  fullName: azure.iot.device.iothub.inbox_manager.InboxManager.get_method_request_inbox
  langs:
  - python
  module: azure.iot.device.iothub.inbox_manager
  name: get_method_request_inbox(method_name=None)
  source:
    id: get_method_request_inbox
    path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 58
  summary: 'Retrieve the method request Inbox for a given method name if provided,

    or for generic method requests if not.


    If the Inbox does not already exist, it will be created.



    associated Inbox is desired.

    :returns: An Inbox for method requests.'
  syntax:
    content: get_method_request_inbox(method_name=None)
    parameters:
    - defaultValue: None
      description: Optional. The name of the method for which the
      id: method_name
      type:
      - str
  type: method
  uid: azure.iot.device.iothub.inbox_manager.InboxManager.get_method_request_inbox
- class: azure.iot.device.iothub.inbox_manager.InboxManager
  fullName: azure.iot.device.iothub.inbox_manager.InboxManager.get_twin_patch_inbox
  langs:
  - python
  module: azure.iot.device.iothub.inbox_manager
  name: get_twin_patch_inbox()
  source:
    id: get_twin_patch_inbox
    path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 80
  summary: Retrieve the Inbox for twin patches that arrive from the service
  syntax:
    content: get_twin_patch_inbox()
    parameters: []
    return:
      description: An Inbox for twin patches
  type: method
  uid: azure.iot.device.iothub.inbox_manager.InboxManager.get_twin_patch_inbox
- class: azure.iot.device.iothub.inbox_manager.InboxManager
  fullName: azure.iot.device.iothub.inbox_manager.InboxManager.route_c2d_message
  langs:
  - python
  module: azure.iot.device.iothub.inbox_manager
  name: route_c2d_message(incoming_message)
  source:
    id: route_c2d_message
    path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 114
  summary: Route an incoming C2D message to the C2D message Inbox.
  syntax:
    content: route_c2d_message(incoming_message)
    parameters:
    - description: The message to be routed.
      id: incoming_message
    return:
      description: Boolean indicating if message was successfully routed or not.
  type: method
  uid: azure.iot.device.iothub.inbox_manager.InboxManager.route_c2d_message
- class: azure.iot.device.iothub.inbox_manager.InboxManager
  fullName: azure.iot.device.iothub.inbox_manager.InboxManager.route_input_message
  langs:
  - python
  module: azure.iot.device.iothub.inbox_manager
  name: route_input_message(input_name, incoming_message)
  source:
    id: route_input_message
    path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 94
  summary: 'Route an incoming input message to the correct input message Inbox.


    If the input is unknown, the message will be dropped.'
  syntax:
    content: route_input_message(input_name, incoming_message)
    parameters:
    - description: The name of the input to route the message to.
      id: input_name
      type:
      - str
    - description: The message to be routed.
      id: incoming_message
    return:
      description: Boolean indicating if message was successfuly routed or not.
  type: method
  uid: azure.iot.device.iothub.inbox_manager.InboxManager.route_input_message
- class: azure.iot.device.iothub.inbox_manager.InboxManager
  fullName: azure.iot.device.iothub.inbox_manager.InboxManager.route_method_request
  langs:
  - python
  module: azure.iot.device.iothub.inbox_manager
  name: route_method_request(incoming_method_request)
  source:
    id: route_method_request
    path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 125
  summary: 'Route an incoming method request to the correct method request Inbox.


    If the method name is recognized, it will be routed to a method-specific Inbox.

    Otherwise, it will be routed to the generic method request Inbox.'
  syntax:
    content: route_method_request(incoming_method_request)
    parameters:
    - description: The method request to be routed.
      id: incoming_method_request
    return:
      description: Boolean indicating if the method request was successfully routed
        or not.
  type: method
  uid: azure.iot.device.iothub.inbox_manager.InboxManager.route_method_request
- class: azure.iot.device.iothub.inbox_manager.InboxManager
  fullName: azure.iot.device.iothub.inbox_manager.InboxManager.route_twin_patch
  langs:
  - python
  module: azure.iot.device.iothub.inbox_manager
  name: route_twin_patch(incoming_patch)
  source:
    id: route_twin_patch
    path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\inbox_manager.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 142
  summary: Route an incoming twin patch to the twin patch Inbox.
  syntax:
    content: route_twin_patch(incoming_patch)
    parameters:
    - description: The patch to be routed.
      id: incoming_patch
    return:
      description: Boolean indicating if patch was successfully routed or not.
  type: method
  uid: azure.iot.device.iothub.inbox_manager.InboxManager.route_twin_patch
references:
- fullName: azure.iot.device.iothub.inbox_manager.InboxManager.clear_all_method_requests
  isExternal: false
  name: clear_all_method_requests()
  parent: azure.iot.device.iothub.inbox_manager.InboxManager
  uid: azure.iot.device.iothub.inbox_manager.InboxManager.clear_all_method_requests
- fullName: azure.iot.device.iothub.inbox_manager.InboxManager.get_c2d_message_inbox
  isExternal: false
  name: get_c2d_message_inbox()
  parent: azure.iot.device.iothub.inbox_manager.InboxManager
  uid: azure.iot.device.iothub.inbox_manager.InboxManager.get_c2d_message_inbox
- fullName: azure.iot.device.iothub.inbox_manager.InboxManager.get_input_message_inbox
  isExternal: false
  name: get_input_message_inbox(input_name)
  parent: azure.iot.device.iothub.inbox_manager.InboxManager
  uid: azure.iot.device.iothub.inbox_manager.InboxManager.get_input_message_inbox
- fullName: azure.iot.device.iothub.inbox_manager.InboxManager.get_method_request_inbox
  isExternal: false
  name: get_method_request_inbox(method_name=None)
  parent: azure.iot.device.iothub.inbox_manager.InboxManager
  uid: azure.iot.device.iothub.inbox_manager.InboxManager.get_method_request_inbox
- fullName: azure.iot.device.iothub.inbox_manager.InboxManager.get_twin_patch_inbox
  isExternal: false
  name: get_twin_patch_inbox()
  parent: azure.iot.device.iothub.inbox_manager.InboxManager
  uid: azure.iot.device.iothub.inbox_manager.InboxManager.get_twin_patch_inbox
- fullName: azure.iot.device.iothub.inbox_manager.InboxManager.route_c2d_message
  isExternal: false
  name: route_c2d_message(incoming_message)
  parent: azure.iot.device.iothub.inbox_manager.InboxManager
  uid: azure.iot.device.iothub.inbox_manager.InboxManager.route_c2d_message
- fullName: azure.iot.device.iothub.inbox_manager.InboxManager.route_input_message
  isExternal: false
  name: route_input_message(input_name, incoming_message)
  parent: azure.iot.device.iothub.inbox_manager.InboxManager
  uid: azure.iot.device.iothub.inbox_manager.InboxManager.route_input_message
- fullName: azure.iot.device.iothub.inbox_manager.InboxManager.route_method_request
  isExternal: false
  name: route_method_request(incoming_method_request)
  parent: azure.iot.device.iothub.inbox_manager.InboxManager
  uid: azure.iot.device.iothub.inbox_manager.InboxManager.route_method_request
- fullName: azure.iot.device.iothub.inbox_manager.InboxManager.route_twin_patch
  isExternal: false
  name: route_twin_patch(incoming_patch)
  parent: azure.iot.device.iothub.inbox_manager.InboxManager
  uid: azure.iot.device.iothub.inbox_manager.InboxManager.route_twin_patch
