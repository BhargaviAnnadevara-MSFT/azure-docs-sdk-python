### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.iot.device.iothub.sync_clients.GenericIoTHubClient.connect
  - azure.iot.device.iothub.sync_clients.GenericIoTHubClient.disconnect
  - azure.iot.device.iothub.sync_clients.GenericIoTHubClient.get_twin
  - azure.iot.device.iothub.sync_clients.GenericIoTHubClient.patch_twin_reported_properties
  - azure.iot.device.iothub.sync_clients.GenericIoTHubClient.receive_method_request
  - azure.iot.device.iothub.sync_clients.GenericIoTHubClient.receive_twin_desired_properties_patch
  - azure.iot.device.iothub.sync_clients.GenericIoTHubClient.send_message
  - azure.iot.device.iothub.sync_clients.GenericIoTHubClient.send_method_response
  class: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
  fullName: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  langs:
  - python
  module: azure.iot.device.iothub.sync_clients
  name: GenericIoTHubClient
  source:
    id: GenericIoTHubClient
    path: azure-iot-device\azure\iot\device\iothub\sync_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\sync_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 53
  summary: 'A superclass representing a generic synchronous client.

    This class needs to be extended for specific clients.'
  syntax:
    content: GenericIoTHubClient(**kwargs)
  type: class
  uid: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
- class: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
  fullName: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.connect
  langs:
  - python
  module: azure.iot.device.iothub.sync_clients
  name: connect()
  source:
    id: connect
    path: azure-iot-device\azure\iot\device\iothub\sync_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\sync_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 94
  summary: 'Connects the client to an Azure IoT Hub or Azure IoT Edge Hub instance.


    The destination is chosen based on the credentials passed via the auth_provider
    parameter

    that was provided when this object was initialized.


    This is a synchronous call, meaning that this function will not return until the
    connection

    to the service has been completely established.'
  syntax:
    content: connect()
    parameters: []
  type: method
  uid: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.connect
- class: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
  fullName: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.disconnect
  langs:
  - python
  module: azure.iot.device.iothub.sync_clients
  name: disconnect()
  source:
    id: disconnect
    path: azure-iot-device\azure\iot\device\iothub\sync_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\sync_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 120
  summary: 'Disconnect the client from the Azure IoT Hub or Azure IoT Edge Hub instance.


    This is a synchronous call, meaning that this function will not return until the
    connection

    to the service has been completely closed.'
  syntax:
    content: disconnect()
    parameters: []
  type: method
  uid: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.disconnect
- class: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
  fullName: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.get_twin
  langs:
  - python
  module: azure.iot.device.iothub.sync_clients
  name: get_twin()
  source:
    id: get_twin
    path: azure-iot-device\azure\iot\device\iothub\sync_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\sync_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 245
  summary: 'Gets the device or module twin from the Azure IoT Hub or Azure IoT Edge
    Hub service.


    This is a synchronous call, meaning that this function will not return until the
    twin

    has been retrieved from the service.'
  syntax:
    content: get_twin()
    parameters: []
    return:
      description: Complete Twin as a JSON dict
      type:
      - dict
  type: method
  uid: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.get_twin
- class: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
  exceptions:
  - type: azure.iot.device.exceptions.CredentialError
  - type: azure.iot.device.exceptions.ConnectionFailedError
  - type: azure.iot.device.exceptions.ConnectionDroppedError
  - type: azure.iot.device.exceptions.ClientError
  fullName: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.patch_twin_reported_properties
  langs:
  - python
  module: azure.iot.device.iothub.sync_clients
  name: patch_twin_reported_properties(reported_properties_patch)
  source:
    id: patch_twin_reported_properties
    path: azure-iot-device\azure\iot\device\iothub\sync_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\sync_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 274
  summary: 'Update reported properties with the Azure IoT Hub or Azure IoT Edge Hub
    service.


    This is a synchronous call, meaning that this function will not return until the
    patch

    has been sent to the service and acknowledged.


    If the service returns an error on the patch operation, this function will raise
    the

    appropriate error.'
  syntax:
    content: patch_twin_reported_properties(reported_properties_patch)
    parameters:
    - description: Twin Reported Properties patch as a JSON dict
      id: reported_properties_patch
      type:
      - dict
  type: method
  uid: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.patch_twin_reported_properties
- class: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
  fullName: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.receive_method_request
  langs:
  - python
  module: azure.iot.device.iothub.sync_clients
  name: receive_method_request(method_name=None, block=True, timeout=None)
  source:
    id: receive_method_request
    path: azure-iot-device\azure\iot\device\iothub\sync_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\sync_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 174
  summary: Receive a method request via the Azure IoT Hub or Azure IoT Edge Hub.
  syntax:
    content: receive_method_request(method_name=None, block=True, timeout=None)
    parameters:
    - defaultValue: None
      description: 'Optionally provide the name of the method to receive requests
        for.

        If this parameter is not given, all methods not already being specifically
        targeted by

        a different request to receive_method will be received.'
      id: method_name
      type:
      - str
    - defaultValue: 'True'
      description: Indicates if the operation should block until a request is received.
      id: block
      type:
      - bool
    - defaultValue: None
      description: Optionally provide a number of seconds until blocking times out.
      id: timeout
      type:
      - int
    return:
      description: 'MethodRequest object representing the received method request,
        or None if

        no method request has been received by the end of the blocking period.'
  type: method
  uid: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.receive_method_request
- class: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
  fullName: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.receive_twin_desired_properties_patch
  langs:
  - python
  module: azure.iot.device.iothub.sync_clients
  name: receive_twin_desired_properties_patch(block=True, timeout=None)
  source:
    id: receive_twin_desired_properties_patch
    path: azure-iot-device\azure\iot\device\iothub\sync_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\sync_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 307
  summary: "Receive a desired property patch via the Azure IoT Hub or Azure IoT Edge\
    \ Hub.\n\nThis is a synchronous call, which means the following:\n1. If block=True,\
    \ this function will block until one of the following happens:\n\n\n   * a desired\
    \ proprety patch is received from the Azure IoT Hub or Azure IoT Edge Hub. \n\n\
    \   * the timeout period, if provided, elapses.  If a timeout happens, this function\
    \ will raise a InboxEmpty exception \n\n\n2. If block=False, this function will\
    \ return any desired property patches which may have been received by the pipeline,\
    \ but not yet returned to the application.  If no desired property patches have\
    \ been received by the pipeline, this function will raise an InboxEmpty exception"
  syntax:
    content: receive_twin_desired_properties_patch(block=True, timeout=None)
    parameters:
    - defaultValue: 'True'
      description: Indicates if the operation should block until a request is received.
      id: block
      type:
      - bool
    - defaultValue: None
      description: Optionally provide a number of seconds until blocking times out.
      id: timeout
      type:
      - int
    return:
      description: 'Twin Desired Properties patch as a JSON dict, or None if no patch
        has been

        received by the end of the blocking period'
      type:
      - dict
      - None
  type: method
  uid: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.receive_twin_desired_properties_patch
- class: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
  exceptions:
  - type: azure.iot.device.exceptions.CredentialError
  - type: azure.iot.device.exceptions.ConnectionFailedError
  - type: azure.iot.device.exceptions.ConnectionDroppedError
  - type: azure.iot.device.exceptions.ClientError
  fullName: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.send_message
  langs:
  - python
  module: azure.iot.device.iothub.sync_clients
  name: send_message(message)
  source:
    id: send_message
    path: azure-iot-device\azure\iot\device\iothub\sync_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\sync_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 137
  summary: 'Sends a message to the default events endpoint on the Azure IoT Hub or
    Azure IoT Edge Hub instance.


    This is a synchronous event, meaning that this function will not return until
    the event

    has been sent to the service and the service has acknowledged receipt of the event.


    If the connection to the service has not previously been opened by a call to connect,
    this

    function will open the connection before sending the event.'
  syntax:
    content: send_message(message)
    parameters:
    - description: 'The actual message to send. Anything passed that is not an instance
        of the

        Message class will be converted to Message object.'
      id: message
      type:
      - azure.iot.device.Message
      - str
  type: method
  uid: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.send_message
- class: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
  exceptions:
  - type: azure.iot.device.exceptions.CredentialError
  - type: azure.iot.device.exceptions.ConnectionFailedError
  - type: azure.iot.device.exceptions.ConnectionDroppedError
  - type: azure.iot.device.exceptions.ClientError
  fullName: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.send_method_response
  langs:
  - python
  module: azure.iot.device.iothub.sync_clients
  name: send_method_response(method_response)
  source:
    id: send_method_response
    path: azure-iot-device\azure\iot\device\iothub\sync_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\sync_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 199
  summary: 'Send a response to a method request via the Azure IoT Hub or Azure IoT
    Edge Hub.


    This is a synchronous event, meaning that this function will not return until
    the event

    has been sent to the service and the service has acknowledged receipt of the event.


    If the connection to the service has not previously been opened by a call to connect,
    this

    function will open the connection before sending the event.'
  syntax:
    content: send_method_response(method_response)
    parameters:
    - description: The MethodResponse to send.
      id: method_response
      type:
      - azure.iot.device.MethodResponse
  type: method
  uid: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.send_method_response
references:
- fullName: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.connect
  isExternal: false
  name: connect()
  parent: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
  uid: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.connect
- fullName: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.disconnect
  isExternal: false
  name: disconnect()
  parent: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
  uid: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.disconnect
- fullName: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.get_twin
  isExternal: false
  name: get_twin()
  parent: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
  uid: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.get_twin
- fullName: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.patch_twin_reported_properties
  isExternal: false
  name: patch_twin_reported_properties(reported_properties_patch)
  parent: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
  uid: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.patch_twin_reported_properties
- fullName: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.receive_method_request
  isExternal: false
  name: receive_method_request(method_name=None, block=True, timeout=None)
  parent: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
  uid: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.receive_method_request
- fullName: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.receive_twin_desired_properties_patch
  isExternal: false
  name: receive_twin_desired_properties_patch(block=True, timeout=None)
  parent: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
  uid: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.receive_twin_desired_properties_patch
- fullName: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.send_message
  isExternal: false
  name: send_message(message)
  parent: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
  uid: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.send_message
- fullName: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.send_method_response
  isExternal: false
  name: send_method_response(method_response)
  parent: azure.iot.device.iothub.sync_clients.GenericIoTHubClient
  uid: azure.iot.device.iothub.sync_clients.GenericIoTHubClient.send_method_response
