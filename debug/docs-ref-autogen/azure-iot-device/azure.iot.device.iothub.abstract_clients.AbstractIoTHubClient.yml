### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.connect
  - azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.connected
  - azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.create_from_connection_string
  - azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.disconnect
  - azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.get_twin
  - azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.patch_twin_reported_properties
  - azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.receive_method_request
  - azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.receive_twin_desired_properties_patch
  - azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.send_message
  - azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.send_method_response
  class: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.iot.device.iothub.abstract_clients
  name: AbstractIoTHubClient
  source:
    id: AbstractIoTHubClient
    path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 61
  summary: 'A superclass representing a generic IoTHub client.

    This class needs to be extended for specific clients.'
  syntax:
    content: AbstractIoTHubClient(mqtt_pipeline, http_pipeline)
  type: class
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
- class: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.connect
  langs:
  - python
  module: azure.iot.device.iothub.abstract_clients
  name: connect()
  source:
    id: connect
    path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 122
  syntax:
    content: connect()
    parameters: []
  type: method
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.connect
- class: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.connected
  langs:
  - python
  module: azure.iot.device.iothub.abstract_clients
  name: connected
  source:
    id: connected
    path: null
    remote:
      branch: master
      path: null
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: null
  summary: Read-only property to indicate if the transport is connected or not.
  syntax: {}
  type: attribute
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.connected
- class: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.create_from_connection_string
  langs:
  - python
  module: azure.iot.device.iothub.abstract_clients
  name: create_from_connection_string(connection_string, **kwargs)
  source:
    id: create_from_connection_string
    path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 75
  summary: Instantiate the client from a IoTHub device or module connection string.
  syntax:
    content: create_from_connection_string(connection_string, **kwargs)
    parameters:
    - description: The connection string for the IoTHub you wish to connect to.
      id: connection_string
      type:
      - str
    - description: 'Configuration Option. The trusted certificate chain.

        Necessary when using connecting to an endpoint which has a non-standard root
        of trust,

        such as a protocol gateway.'
      id: server_verification_cert
      type:
      - str
    - description: 'Configuration Option. Default is False. Set to true if using MQTT

        over websockets.'
      id: websockets
      type:
      - bool
    - description: 'Configuration Option. Cipher suite(s) for TLS/SSL, as a string
        in

        "OpenSSL cipher list format" or as a list of cipher suite strings.'
      id: cipher
      type:
      - str
      - list(str)
    - description: 'Configuration Option. Default is empty string. The string contains

        arbitrary product info which is appended to the user agent string.'
      id: product_info
      type:
      - str
    - description: Options for sending traffic through proxy servers.
      id: proxy_options
      type:
      - azure.iot.device.ProxyOptions
    return:
      description: An instance of an IoTHub client that uses a connection string for
        authentication.
  type: method
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.create_from_connection_string
- class: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.disconnect
  langs:
  - python
  module: azure.iot.device.iothub.abstract_clients
  name: disconnect()
  source:
    id: disconnect
    path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 126
  syntax:
    content: disconnect()
    parameters: []
  type: method
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.disconnect
- class: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.get_twin
  langs:
  - python
  module: azure.iot.device.iothub.abstract_clients
  name: get_twin()
  source:
    id: get_twin
    path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 142
  syntax:
    content: get_twin()
    parameters: []
  type: method
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.get_twin
- class: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.patch_twin_reported_properties
  langs:
  - python
  module: azure.iot.device.iothub.abstract_clients
  name: patch_twin_reported_properties(reported_properties_patch)
  source:
    id: patch_twin_reported_properties
    path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 146
  syntax:
    content: patch_twin_reported_properties(reported_properties_patch)
    parameters:
    - id: reported_properties_patch
  type: method
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.patch_twin_reported_properties
- class: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.receive_method_request
  langs:
  - python
  module: azure.iot.device.iothub.abstract_clients
  name: receive_method_request(method_name=None)
  source:
    id: receive_method_request
    path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 134
  syntax:
    content: receive_method_request(method_name=None)
    parameters:
    - defaultValue: None
      id: method_name
  type: method
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.receive_method_request
- class: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.receive_twin_desired_properties_patch
  langs:
  - python
  module: azure.iot.device.iothub.abstract_clients
  name: receive_twin_desired_properties_patch()
  source:
    id: receive_twin_desired_properties_patch
    path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 150
  syntax:
    content: receive_twin_desired_properties_patch()
    parameters: []
  type: method
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.receive_twin_desired_properties_patch
- class: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.send_message
  langs:
  - python
  module: azure.iot.device.iothub.abstract_clients
  name: send_message(message)
  source:
    id: send_message
    path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 130
  syntax:
    content: send_message(message)
    parameters:
    - id: message
  type: method
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.send_message
- class: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.send_method_response
  langs:
  - python
  module: azure.iot.device.iothub.abstract_clients
  name: send_method_response(method_request, payload, status)
  source:
    id: send_method_response
    path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 138
  syntax:
    content: send_method_response(method_request, payload, status)
    parameters:
    - id: method_request
    - id: payload
    - id: status
  type: method
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.send_method_response
references:
- fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.connect
  isExternal: false
  name: connect()
  parent: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.connect
- fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.connected
  isExternal: false
  name: connected
  parent: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.connected
- fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.create_from_connection_string
  isExternal: false
  name: create_from_connection_string(connection_string, **kwargs)
  parent: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.create_from_connection_string
- fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.disconnect
  isExternal: false
  name: disconnect()
  parent: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.disconnect
- fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.get_twin
  isExternal: false
  name: get_twin()
  parent: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.get_twin
- fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.patch_twin_reported_properties
  isExternal: false
  name: patch_twin_reported_properties(reported_properties_patch)
  parent: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.patch_twin_reported_properties
- fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.receive_method_request
  isExternal: false
  name: receive_method_request(method_name=None)
  parent: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.receive_method_request
- fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.receive_twin_desired_properties_patch
  isExternal: false
  name: receive_twin_desired_properties_patch()
  parent: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.receive_twin_desired_properties_patch
- fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.send_message
  isExternal: false
  name: send_message(message)
  parent: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.send_message
- fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.send_method_response
  isExternal: false
  name: send_method_response(method_request, payload, status)
  parent: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient.send_method_response
- fullName: list(str)
  name: list(str)
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  - fullName: )
    name: )
  uid: list(str)
