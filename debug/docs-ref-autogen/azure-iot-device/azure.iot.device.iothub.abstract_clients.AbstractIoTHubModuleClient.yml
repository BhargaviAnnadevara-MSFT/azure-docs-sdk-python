### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.create_from_edge_environment
  - azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.create_from_x509_certificate
  - azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.receive_message_on_input
  - azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.send_message_to_output
  class: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient
  fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.iot.device.iothub.abstract_clients.AbstractIoTHubClient
  langs:
  - python
  module: azure.iot.device.iothub.abstract_clients
  name: AbstractIoTHubModuleClient
  source:
    id: AbstractIoTHubModuleClient
    path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 266
  summary: ''
  syntax:
    content: AbstractIoTHubModuleClient(mqtt_pipeline, http_pipeline)
  type: class
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient
- class: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient
  fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.create_from_edge_environment
  langs:
  - python
  module: azure.iot.device.iothub.abstract_clients
  name: create_from_edge_environment(**kwargs)
  source:
    id: create_from_edge_environment
    path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 275
  summary: 'Instantiate the client from the IoT Edge environment.


    This method can only be run from inside an IoT Edge container, or in a debugging

    environment configured for Edge development (e.g. Visual Studio, Visual Studio
    Code)'
  syntax:
    content: create_from_edge_environment(**kwargs)
    parameters:
    - description: 'Configuration Option. Default is False. Set to true if using MQTT

        over websockets.'
      id: websockets
      type:
      - bool
    - description: 'Configuration Option. Cipher suite(s) for TLS/SSL, as a string
        in

        "OpenSSL cipher list format" or as a list of cipher suite strings.'
      id: cipher
      type:
      - str
      - list(str)
    - description: 'Configuration Option. Default is empty string. The string contains

        arbitrary product info which is appended to the user agent string.'
      id: product_info
      type:
      - str
    - description: Options for sending traffic through proxy servers.
      id: proxy_options
      type:
      - azure.iot.device.ProxyOptions
    return:
      description: 'An instance of an IoTHub client that uses the IoT Edge environment
        for

        authentication.'
  type: method
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.create_from_edge_environment
- class: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient
  fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.create_from_x509_certificate
  langs:
  - python
  module: azure.iot.device.iothub.abstract_clients
  name: create_from_x509_certificate(x509, hostname, device_id, module_id, **kwargs)
  source:
    id: create_from_x509_certificate
    path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 379
  summary: Instantiate a client which using X509 certificate authentication.
  syntax:
    content: create_from_x509_certificate(x509, hostname, device_id, module_id, **kwargs)
    parameters:
    - description: 'Host running the IotHub.

        Can be found in the Azure portal in the Overview tab as the string hostname.'
      id: hostname
      type:
      - str
    - description: 'The complete x509 certificate object.

        To use the certificate the enrollment object needs to contain cert

        (either the root certificate or one of the intermediate CA certificates).

        If the cert comes from a CER file, it needs to be base64 encoded.'
      id: x509
      type:
      - azure.iot.device.X509
    - description: The ID used to uniquely identify a device in the IoTHub
      id: device_id
      type:
      - str
    - description: The ID used to uniquely identify a module on a device on the IoTHub.
      id: module_id
      type:
      - str
    - description: 'Configuration Option. The trusted certificate chain.

        Necessary when using connecting to an endpoint which has a non-standard root
        of trust,

        such as a protocol gateway.'
      id: server_verification_cert
      type:
      - str
    - description: 'Configuration Option. Default is False. Set to true if using MQTT

        over websockets.'
      id: websockets
      type:
      - bool
    - description: 'Configuration Option. Cipher suite(s) for TLS/SSL, as a string
        in

        "OpenSSL cipher list format" or as a list of cipher suite strings.'
      id: cipher
      type:
      - str
      - list(str)
    - description: 'Configuration Option. Default is empty string. The string contains

        arbitrary product info which is appended to the user agent string.'
      id: product_info
      type:
      - str
    - description: Options for sending traffic through proxy servers.
      id: proxy_options
      type:
      - azure.iot.device.ProxyOptions
    return:
      description: An instance of an IoTHub client that uses an X509 certificate for
        authentication.
  type: method
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.create_from_x509_certificate
- class: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient
  fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.receive_message_on_input
  langs:
  - python
  module: azure.iot.device.iothub.abstract_clients
  name: receive_message_on_input(input_name)
  source:
    id: receive_message_on_input
    path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 432
  syntax:
    content: receive_message_on_input(input_name)
    parameters:
    - id: input_name
  type: method
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.receive_message_on_input
- class: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient
  fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.send_message_to_output
  langs:
  - python
  module: azure.iot.device.iothub.abstract_clients
  name: send_message_to_output(message, output_name)
  source:
    id: send_message_to_output
    path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
    remote:
      branch: master
      path: azure-iot-device\azure\iot\device\iothub\abstract_clients.py
      repo: https://github.com/Azure/azure-iot-sdk-python
    startLine: 428
  syntax:
    content: send_message_to_output(message, output_name)
    parameters:
    - id: message
    - id: output_name
  type: method
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.send_message_to_output
references:
- fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.create_from_edge_environment
  isExternal: false
  name: create_from_edge_environment(**kwargs)
  parent: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.create_from_edge_environment
- fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.create_from_x509_certificate
  isExternal: false
  name: create_from_x509_certificate(x509, hostname, device_id, module_id, **kwargs)
  parent: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.create_from_x509_certificate
- fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.receive_message_on_input
  isExternal: false
  name: receive_message_on_input(input_name)
  parent: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.receive_message_on_input
- fullName: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.send_message_to_output
  isExternal: false
  name: send_message_to_output(message, output_name)
  parent: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient
  uid: azure.iot.device.iothub.abstract_clients.AbstractIoTHubModuleClient.send_message_to_output
- fullName: list(str)
  name: list(str)
  spec.python:
  - fullName: list
    name: list
    uid: list
  - fullName: (
    name: (
  - fullName: str
    name: str
    uid: str
  - fullName: )
    name: )
  uid: list(str)
